
FD2.hs:24:12: error:
    • Couldn't match type ‘e1’ with ‘e’
        arising from a functional dependency between constraints:
          ‘Elem a e1’
            arising from the type signature for:
                           mf :: forall e.
                                 Elem a e =>
                                 e -> Maybe e -> Maybe e at FD2.hs:24:12-54
          ‘Elem a e’
            arising from the type signature for:
                           foldr1 :: forall e.
                                     Elem a e =>
                                     (e -> e -> e) -> a -> e at FD2.hs:21:13-47
      ‘e1’ is a rigid type variable bound by
        the type signature for:
          mf :: forall e1. Elem a e1 => e1 -> Maybe e1 -> Maybe e1
        at FD2.hs:24:12-54
      ‘e’ is a rigid type variable bound by
        the type signature for:
          foldr1 :: forall e. Elem a e => (e -> e -> e) -> a -> e
        at FD2.hs:21:13-47
    • In an equation for ‘foldr1’:
          foldr1 f xs
            = fromMaybe (error "foldr1: empty structure") (foldr mf Nothing xs)
            where
                mf :: Elem a e => (e -> Maybe e -> Maybe e)
                mf x Nothing = Just x
                mf x (Just y) = Just (f x y)
    • Relevant bindings include
        f :: e -> e -> e (bound at FD2.hs:22:10)
        foldr1 :: (e -> e -> e) -> a -> e (bound at FD2.hs:22:3)
