
WildcardInstantiations.hs:5:14: error:
    Found hole: _a :: w_a0
    Where: ‘w_a0’ is a rigid type variable bound by
                  the inferred type of
                  foo :: (Enum w_a0, Show w_a0) => w_a0 -> String
                  at WildcardInstantiations.hs:6:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘foo’: (Show _a, _) => _a -> _

WildcardInstantiations.hs:5:18: error:
    Found hole ‘_’ with inferred constraints: Enum w_a0
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘foo’: (Show _a, _) => _a -> _

WildcardInstantiations.hs:5:30: error:
    Found hole: _ :: String
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘foo’: (Show _a, _) => _a -> _

WildcardInstantiations.hs:8:8: error:
    Found hole: _ :: w_0
    Where: ‘w_0’ is a rigid type variable bound by
                 the inferred type of bar :: w_0 -> (w_0 -> w_1) -> w_1
                 at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘bar’: _ -> _ -> _

WildcardInstantiations.hs:8:13: error:
    Found hole: _ :: w_0 -> w_1
    Where: ‘w_0’ is a rigid type variable bound by
                 the inferred type of bar :: w_0 -> (w_0 -> w_1) -> w_1
                 at WildcardInstantiations.hs:9:1
           ‘w_1’ is a rigid type variable bound by
                 the inferred type of bar :: w_0 -> (w_0 -> w_1) -> w_1
                 at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘bar’: _ -> _ -> _

WildcardInstantiations.hs:8:18: error:
    Found hole: _ :: w_1
    Where: ‘w_1’ is a rigid type variable bound by
                 the inferred type of bar :: w_0 -> (w_0 -> w_1) -> w_1
                 at WildcardInstantiations.hs:9:1
    To use the inferred type, enable PartialTypeSignatures
    In the type signature for ‘bar’: _ -> _ -> _
