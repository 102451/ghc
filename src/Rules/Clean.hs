module Rules.Clean (cleanRules) where

import Base
import Context
import Package
import Rules.Generate
import Settings.Packages
import Settings.Paths
import Settings.User
import Stage

clean :: FilePath -> Action ()
clean dir = do
    putBuild $ "| Remove files in " ++ dir ++ "..."
    removeDirectoryIfExists dir

cleanRules :: Rules ()
cleanRules = do
    "clean" ~> do
        forM_ [Stage0 ..] $ \stage -> clean (buildRootPath -/- stageString stage)
        clean (buildRootPath -/- "hadrian")
        clean programInplacePath
        clean "inplace/lib"
        clean derivedConstantsPath
        forM_ includesDependencies $ \file -> do
            putBuild $ "| Remove " ++ file
            removeFileIfExists file
        putBuild $ "| Remove files generated by ghc-cabal..."
        forM_ knownPackages $ \pkg ->
            forM_ [Stage0 ..] $ \stage -> do
                let dir = pkgPath pkg -/- contextDirectory (vanillaContext stage pkg)
                removeDirectoryIfExists dir
        putBuild $ "| Remove the Shake database " ++ shakeFilesPath ++ "..."
        removeFilesAfter shakeFilesPath ["//*"]
        putSuccess $ "| Done. "
