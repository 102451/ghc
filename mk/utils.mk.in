#-----------------------------------------------------------------------------
# $Id: utils.mk.in,v 1.2 1996/11/21 16:50:41 simonm Exp $

# This file is automatically generated by configure, and should not be
# changed.
# 
# Most of this stuff is designed to be overridable: just set the appropriate
# variable in the Makefile after including ghc.mk.

# This file replaces site.jm, site-DEF.jm, utils-GEN.jm in the jmake system.

#-----------------------------------------------------------------------------
# Random configuration stuff

TOP_PWD			= @hardtop@
TMPDIR			= @TmpDir@

HcMaxHeapFlag		= @HcMaxHeapFlag@
HcMaxStackFlag		= @HcMaxStackFlag@
ALL_PROJECTS_HC_OPTS	+= $(HcMaxHeapFlag) $(HcMaxStackFlag)

#-----------------------------------------------------------------------------
# C compiler stuff

HaveGcc			= @HaveGcc@
UseGcc			= @HaveGcc@
WhatGccIsCalled 	= @WhatGccIsCalled@
CC			= cc
ifeq ($(HaveGcc), YES)
ifeq ($(UseGcc),  YES)
CC 			= $(WhatGccIsCalled)
endif
endif

LD			= ld
LINT			= lint
AS			= as
STRIP 			= strip
YACC			= @YaccCmd@

CPP			= @RAWCPP@ $(GLUED_CPP_INCLUDES) $(GLUED_CPP_DEFINES)
PREPROCESSCMD		= $(CC) -E $(GLUED_CPP_INCLUDES) $(GLUED_CPP_DEFINES)
RAWCPP			= @RAWCPP@

AR 			= @ArCmd@
RANLIB			= @RANLIB@

#-----------------------------------------------------------------------------
# lex

EightBitLexCmd		= @LEX@ -s -8
FLEX    		= $(EightBitLexCmd) $(EXTRA_FLEX_OPTS)
FLEX_LIB		= @LEXLIB@

#-----------------------------------------------------------------------------
# general utilities

PERL 			= @PerlCmd@
SHELL			= /bin/sh
COMPRESS		= compress
CONTEXT_DIFF		= @ContextDiffCmd@
CP			= cp
LN			= ln -s
MV			= mv
RM			= rm -f
TIME			= time
CTAGS 			= $(ETAGS)
INSTALL			= @INSTALL@
MAKE			= @MakeCmd@
UNAME			= uname

#-----------------------------------------------------------------------------
# Haskell compiler

HC			= @WithHc@
HaskellCompilerType	= @WithHcType@

#-----------------------------------------------------------------------------
# Document preparation

TROFF			= troff
NROFF			= nroff
MANMACROS		= -man
MSMACROS 		= -ms
PIC			= pic
TBL 			= tbl
TGRIND 			= tgrind
TGRIND_HELPER 		= /usr/local/lib/tgrind/tfontedpr # XXX

PRINTER			= lpr

TEX			= tex
LATEX			= latex

TIB			= tib

#-----------------------------------------------------------------------------
# sources

ifndef UseInstalledUtils
UTILSRC   		= $(TOP)/glafp-utils
SCRIPTSRC 		= $(UTILSRC)/scripts
endif

#-----------------------------------------------------------------------------
# Cleaning things.

FilesToClean = \
	*.CKP *.ln *.BAK *.bak *.o core a.out errs ,* *.a .emacs_*	    \
	tags TAGS *.ind *.ilg *.idx *.idx-prev *.aux *.aux-prev *.dvi *.log \
	*.toc *.lot *.lof *.blg *.info *.itxi *.itex *.cb

ExtraFilesToBeVeryClean = \
	 .??*~ *~ *.orig *.rej .depend

#-----------------------------------------------------------------------------
# Info stuff

ifdef UseInstalledUtils
INFO         		= info
MAKEINFO     		= makeinfo
POSTMAKEINFO 		= postmakeinfo
else
INFOSRC      		= $(LITSRC)/info-utils
INFO			= $(UTILSRC)/info
MAKEINFO		= $(INFOSRC)/makeinfo
POSTMAKEINFO		= $(INFOSRC)/postmakeinfo
endif

#-----------------------------------------------------------------------------
# literate programming stuff

LIT2PGM 		= lit2pgm
LIT2TEXI      		= lit2texi
LIT2HTML      		= lit2html
LIT2LATEX     		= lit2latex
MKDEPENDLIT   		= mkdependlit
LIT2CHANGELOG 		= lit2changelog

ifndef UseInstalledUtils
LITSRC        		= $(TOP)/literate
endif

#-----------------------------------------------------------------------------
# Various scripts

ifdef UseInstalledUtils
MKDEPENDC 		= mkdependC -f .depend
else
MKDEPENDC 		= $(MKDEPENDCSRC)/mkdependC -f .depend
MKDEPENDCSRC 		= $(UTILSRC)/mkdependC
endif

ifdef UseInstalledUtils
FASTMAKE 		= fastmake
else
FASTMAKE 		= $(FASTMAKESRC)/fastmake
FASTMAKESRC 		= $(UTILSRC)/fastmake
endif

ifdef UseInstalledUtils
LTX 			= ltx
else
LTX 			= $(LTXSRC)/ltx
LTXSRC 			= $(UTILSRC)/ltx
endif

ifdef UseInstalledUtils
MKDIRHIER		= mkdirhier
else
MKDIRHIER		= $(MKDIRHIERSRC)/mkdirhier
MKDIRHIERSRC		= $(UTILSRC)/mkdirhier
endif

ifdef UseInstalledUtils
LNDIR			= lndir
else
LNDIR			= $(LNDIRSRC)/lndir
LNDIRSRC		= $(UTILSRC)/lndir
endif

ifdef UseInstalledUtils
MSUB			= msub
else
MSUB			= $(MSUBSRC)/msub
MSUBSRC			= $(UTILSRC)/msub
endif

ifdef UseInstalledUtils
ETAGS			= etags
else
ETAGS			= $(ETAGSSRC)/etags
ETAGSSRC		= $(UTILSRC)/etags
endif

ifdef UseInstalledUtils
VERBATIM		= verbatim
else
VERBATIM		= $(VERBATIMSRC)/verbatim
VERBATIMSRC		= $(UTILSRC)/verbatim
endif

ifdef UseInstalledUtils
RUNSTDTEST		= runstdtest
else
RUNSTDTEST		= $(RUNSTDTESTSRC)/runstdtest
RUNSTDTESTSRC		= $(UTILSRC)/runstdtest
endif

#-----------------------------------------------------------------------------
# glued flags lists

GLUED_CPP_INCLUDES = \
	$(ALL_PROJECTS_CPP_INCLUDES) \
	$(PLATFORM_CPP_INCLUDES) \
	$(PROJECT_CPP_INCLUDES) \
	$(SETUP_CPP_INCLUDES) \
	$(CPP_INCLUDES) \
	$(EXTRA_CPP_INCLUDES)

GLUED_CPP_DEFINES = \
	$(ALL_PROJECTS_CPP_DEFINES) \
	$(PLATFORM_CPP_DEFINES) \
	$(PROJECT_CPP_DEFINES) \
	$(SETUP_CPP_DEFINES) \
	$(CPP_DEFINES) \
	$(EXTRA_CPP_DEFINES)

GLUED_CC_OPTS = \
	$(ALL_PROJECTS_CC_OPTS) \
	$(PLATFORM_CC_OPTS) \
	$(PROJECT_CC_OPTS) \
	$(SETUP_CC_OPTS) \
	$(CC_OPTS) \
	$(EXTRA_CC_OPTS)

CFLAGS = $(GLUED_CPP_INCLUDES) $(GLUED_CPP_DEFINES) $(GLUED_CC_OPTS)

GLUED_YACC_OPTS = \
	$(ALL_PROJECTS_YACC_OPTS) \
	$(PLATFORM_YACC_OPTS) \
	$(PROJECT_YACC_OPTS) \
	$(SETUP_YACC_OPTS) \
	$(YACC_OPTS) \
	$(EXTRA_YACC_OPTS)

YFLAGS = $(GLUED_YACC_OPTS)

GLUED_HC_OPTS = \
	$(ALL_PROJECTS_HC_OPTS) \
	$(PLATFORM_HC_OPTS) \
	$(PROJECT_HC_OPTS) \
	$(SETUP_HC_OPTS) \
	$(HC_OPTS) \
	$(EXTRA_HC_OPTS)

GLUED_HC_IMPORTS = \
	$(ALL_PROJECTS_HC_IMPORTS) \
	$(PLATFORM_HC_IMPORTS) \
	$(PROJECT_HC_IMPORTS) \
	$(SETUP_HC_IMPORTS) \
	$(HC_IMPORTS) \
	$(EXTRA_HC_IMPORTS)

HCFLAGS = $(GLUED_HC_IMPORTS) $(GLUED_CPP_DEFINES) $(GLUED_HC_OPTS)

GLUED_LD_OPTS = \
	$(ALL_PROJECTS_LD_OPTS) \
	$(PLATFORM_LD_OPTS) \
	$(PROJECT_LD_OPTS) \
	$(SETUP_LD_OPTS) \
	$(LD_OPTS) \
	$(EXTRA_LD_OPTS)

GLUED_LD_LIBRARIES = \
	$(ALL_PROJECTS_LD_LIBRARIES) \
	$(PLATFORM_LD_LIBRARIES) \
	$(PROJECT_LD_LIBRARIES) \
	$(SETUP_LD_LIBRARIES) \
	$(LD_LIBRARIES) \
	$(EXTRA_LD_LIBRARIES)

LDOPTIONS = $(GLUED_LD_OPTS) $(GLUED_LD_LIBRARIES)

# ToDo: lint stuff not tidied up yet

LINTLIBFLAG = -C
LINTOPTS = -axz
LINTFLAGS = $(LINTOPTS) -DLINT $(GLUED_CPP_INCLUDES) $(GLUED_CPP_DEFINES)

GLUED_GENLIT_OPTS = \
	$(ALL_PROJECTS_GENLIT_OPTS) \
	$(PLATFORM_GENLIT_OPTS) \
	$(PROJECT_GENLIT_OPTS) \
	$(SETUP_GENLIT_OPTS) \
	$(GENLIT_OPTS) \
	$(EXTRA_GENLIT_OPTS)

GLUED_LIT2PGM_OPTS = \
	$(ALL_PROJECTS_LIT2PGM_OPTS) \
	$(PLATFORM_LIT2PGM_OPTS) \
	$(PROJECT_LIT2PGM_OPTS) \
	$(SETUP_LIT2PGM_OPTS) \
	$(LIT2PGM_OPTS) \
	$(EXTRA_LIT2PGM_OPTS)

GLUED_LIT2TEXI_OPTS = \
	$(ALL_PROJECTS_LIT2TEXI_OPTS) \
	$(PLATFORM_LIT2TEXI_OPTS) \
	$(PROJECT_LIT2TEXI_OPTS) \
	$(SETUP_LIT2TEXI_OPTS) \
	$(LIT2TEXI_OPTS) \
	$(EXTRA_LIT2TEXI_OPTS)

GLUED_LIT2HTML_OPTS = \
	$(ALL_PROJECTS_LIT2HTML_OPTS) \
	$(PLATFORM_LIT2HTML_OPTS) \
	$(PROJECT_LIT2HTML_OPTS) \
	$(SETUP_LIT2HTML_OPTS) \
	$(LIT2HTML_OPTS) \
	$(EXTRA_LIT2HTML_OPTS)

GLUED_LIT2LATEX_OPTS = \
	$(ALL_PROJECTS_LIT2LATEX_OPTS) \
	$(PLATFORM_LIT2LATEX_OPTS) \
	$(PROJECT_LIT2LATEX_OPTS) \
	$(SETUP_LIT2LATEX_OPTS) \
	$(LIT2LATEX_OPTS) \
	$(EXTRA_LIT2LATEX_OPTS)

GLUED_LIT2CHANGELOG_OPTS = \
	$(ALL_PROJECTS_LIT2CHANGELOG_OPTS) \
	$(PLATFORM_LIT2CHANGELOG_OPTS) \
	$(PROJECT_LIT2CHANGELOG_OPTS) \
	$(SETUP_LIT2CHANGELOG_OPTS) \
	$(LIT2CHANGELOG_OPTS) \
	$(EXTRA_LIT2CHANGELOG_OPTS)

GLUED_MKDEPENDLIT_OPTS = \
	$(ALL_PROJECTS_MKDEPENDLIT_OPTS) \
	$(PLATFORM_MKDEPENDLIT_OPTS) \
	$(PROJECT_MKDEPENDLIT_OPTS) \
	$(SETUP_MKDEPENDLIT_OPTS) \
	$(MKDEPENDLIT_OPTS) \
	$(EXTRA_MKDEPENDLIT_OPTS)

LIT2PGMFLAGS            = $(GLUED_GENLIT_OPTS) $(GLUED_LIT2PGM_OPTS)
LIT2TEXIFLAGS           = $(GLUED_GENLIT_OPTS) $(GLUED_LIT2TEXI_OPTS)
LIT2HTMLFLAGS           = $(GLUED_GENLIT_OPTS) $(GLUED_LIT2HTML_OPTS)
LIT2LATEXFLAGS          = $(GLUED_GENLIT_OPTS) $(GLUED_LIT2LATEX_OPTS)
LIT2CHANGELOGFLAGS      = $(GLUED_GENLIT_OPTS) $(GLUED_LIT2CHANGELOG_OPTS)
MKDEPENDLITFLAGS        = $(GLUED_GENLIT_OPTS) $(GLUED_MKDEPENDLIT_OPTS)

GLUED_MKDEPENDC_OPTS = \
	$(ALL_PROJECTS_MKDEPENDC_OPTS) \
	$(PLATFORM_MKDEPENDC_OPTS) \
	$(PROJECT_MKDEPENDC_OPTS) \
	$(SETUP_MKDEPENDC_OPTS) \
	$(MKDEPENDC_OPTS) \
	$(EXTRA_MKDEPENDC_OPTS)

MKDEPENDCFLAGS        = $(GLUED_MKDEPENDC_OPTS)

GLUED_MKDEPENDHS_OPTS = \
	$(ALL_PROJECTS_MKDEPENDHS_OPTS) \
	$(PLATFORM_MKDEPENDHS_OPTS) \
	$(PROJECT_MKDEPENDHS_OPTS) \
	$(SETUP_MKDEPENDHS_OPTS) \
	$(MKDEPENDHS_OPTS) \
	$(EXTRA_MKDEPENDHS_OPTS)

MKDEPENDHSFLAGS        = $(GLUED_MKDEPENDHS_OPTS)

GLUED_CTAGS_OPTS = \
	$(ALL_PROJECTS_CTAGS_OPTS) \
	$(PLATFORM_CTAGS_OPTS) \
	$(PROJECT_CTAGS_OPTS) \
	$(SETUP_CTAGS_OPTS) \
	$(CTAGS_OPTS) \
	$(EXTRA_CTAGS_OPTS)

CTAGSFLAGS        = $(GLUED_CTAGS_OPTS)

GLUED_RUNSTDTEST_OPTS = \
	$(ALL_PROJECTS_RUNSTDTEST_OPTS) \
	$(PLATFORM_RUNSTDTEST_OPTS) \
	$(PROJECT_RUNSTDTEST_OPTS) \
	$(SETUP_RUNSTDTEST_OPTS) \
	$(RUNSTDTEST_OPTS) \
	$(EXTRA_RUNSTDTEST_OPTS)

RUNSTDTEST_FLAGS = $(GLUED_RUNSTDTEST_OPTS)

GLUED_MSUB_OPTS = \
	$(ALL_PROJECTS_MSUB_OPTS) \
	$(PLATFORM_MSUB_OPTS) \
	$(PROJECT_MSUB_OPTS) \
	$(SETUP_MSUB_OPTS) \
	$(MSUB_OPTS) \
	$(EXTRA_MSUB_OPTS)

MSUBFLAGS = $(GLUED_MSUB_OPTS)
