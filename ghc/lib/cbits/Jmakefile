/* Literate-pgmming suffix rules used herein */
UnlitSuffixRule(.lc,.c)

CBITS_LC =			\
	closeFile.lc		\
	createDirectory.lc	\
	errno.lc		\
	fileEOF.lc		\
	fileGetc.lc		\
	fileLookAhead.lc	\
	filePosn.lc		\
	filePutc.lc		\
	fileSize.lc		\
	flushFile.lc		\
	getBufferMode.lc	\
	getCurrentDirectory.lc	\
	getDirectoryContents.lc	\
	getLock.lc		\
	inputReady.lc		\
	openFile.lc		\
	readFile.lc		\
	removeDirectory.lc	\
	removeFile.lc		\
	renameDirectory.lc	\
	renameFile.lc		\
	seekFile.lc		\
	setBuffering.lc		\
	setCurrentDirectory.lc	\
	system.lc		\
	writeFile.lc

CBITS_OBJS = $(CBITS_LC:.lc=.o)
C_FILES    = $(CBITS_LC:.lc=.c)

ExtraStuffToClean ( $(C_FILES) )

NormalLibraryTarget(HS_cbits,$(CBITS_OBJS))
ExtraStuffToClean($(CBITS_OBJS))
#if DoInstallGHCSystem == YES
InstallLibraryTarget(HS_cbits,$(INSTLIBDIR_GHC))
#endif

CompileCBitsly(GHC,closeFile,)
CompileCBitsly(GHC,createDirectory,)
CompileCBitsly(GHC,errno,)
CompileCBitsly(GHC,fileEOF,)
CompileCBitsly(GHC,fileGetc,)
CompileCBitsly(GHC,fileLookAhead,)
CompileCBitsly(GHC,filePosn,)
CompileCBitsly(GHC,filePutc,)
CompileCBitsly(GHC,fileSize,)
CompileCBitsly(GHC,flushFile,)
CompileCBitsly(GHC,getBufferMode,)
CompileCBitsly(GHC,getCurrentDirectory,)
CompileCBitsly(GHC,getDirectoryContents,)
CompileCBitsly(GHC,getLock,)
CompileCBitsly(GHC,inputReady,)
CompileCBitsly(GHC,openFile,)
CompileCBitsly(GHC,readFile,)
CompileCBitsly(GHC,removeDirectory,)
CompileCBitsly(GHC,removeFile,)
CompileCBitsly(GHC,renameDirectory,)
CompileCBitsly(GHC,renameFile,)
CompileCBitsly(GHC,seekFile,)
CompileCBitsly(GHC,setBuffering,)
CompileCBitsly(GHC,setCurrentDirectory,)
CompileCBitsly(GHC,system,)
CompileCBitsly(GHC,writeFile,)
