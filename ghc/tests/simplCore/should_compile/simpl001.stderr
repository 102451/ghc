

================================================================================
Simplified:
++++{-r3h,x-}  ::  _forall_
		   [tark tarl]
		   =>
		   (tark -> (tarl -> tark) -> tarl)
		   -> (tark -> (tarl -> tark) -> tarl)
		   -> tark
		   -> (tarl -> tark)
		   -> tarl
_A>_ 2 {-# L #-}
++++{-r3h,x-} =
    _/\_ $x0_tsEh $x1_tsEi -> \ $x2_sDp  ::  $x0_tsEh
					     -> ($x1_tsEi -> $x0_tsEh)
					     -> $x1_tsEi
				{-# L #-}
				$x2_sDp $x3_sCV  ::  $x0_tsEh -> ($x1_tsEi -> $x0_tsEh) -> $x1_tsEi
					{-# L #-}
					$x3_sCV ->
	$x3_sCV
g{-r3i,x-}  ::  _forall_
		[aarD tarO tarQ]
		=>
		{PrelBase.Functor{-2b,p-} aarD}
		-> (tarO -> (tarQ -> tarO) -> tarQ)
		-> aarD (tarO -> (tarQ -> tarO) -> tarQ)
		-> aarD (tarO -> (tarQ -> tarO) -> tarQ)
_A>_ 3 {-# L #-}
g{-r3i,x-} =
    _/\_ $x0_asEl $x1_tsEj $x2_tsEk -> \ $x3_sDt  ::  {PrelBase.Functor{-2b,p-} $x0_asEl}
					 {-# L #-}
					 $x3_sDt $x4_sDo  ::  $x1_tsEj
							      -> ($x2_tsEk -> $x1_tsEj)
							      -> $x2_tsEk
						 {-# L #-}
						 $x4_sDo $x5_sE2  ::  $x0_asEl ($x1_tsEj
										-> ($x2_tsEk
										    -> $x1_tsEj)
										-> $x2_tsEk)
							 {-# L #-}
							 $x5_sE2 ->
	let {
	  $x7_sDv  ::  ($x1_tsEj -> ($x2_tsEk -> $x1_tsEj) -> $x2_tsEk)
		       -> $x1_tsEj
		       -> ($x2_tsEk -> $x1_tsEj)
		       -> $x2_tsEk
	  _A>_ 1 {-# L #-}
	  $x7_sDv =
	      \ $x6_sDu  ::  $x1_tsEj -> ($x2_tsEk -> $x1_tsEj) -> $x2_tsEk
		{-# L #-}
		$x6_sDu ->
		  $x4_sDo
	} in 
	  $x3_sDt
	      _@_ ($x1_tsEj -> ($x2_tsEk -> $x1_tsEj) -> $x2_tsEk)
	      _@_ ($x1_tsEj -> ($x2_tsEk -> $x1_tsEj) -> $x2_tsEk)
	      $x7_sDv
	      $x5_sE2
h{-r3j,x-}  ::  _forall_
		[aas8 task tasm]
		=>
		{PrelBase.Functor{-2b,p-} aas8}
		-> (task -> (tasm -> task) -> tasm)
		-> aas8 (task -> (tasm -> task) -> tasm)
		-> aas8 (task -> (tasm -> task) -> tasm)
_A>_ 3 {-# L #-}
h{-r3j,x-} =
    _/\_ $x0_asEu $x1_tsEs $x2_tsEt -> \ $x3_sE6  ::  {PrelBase.Functor{-2b,p-} $x0_asEu}
					 {-# L #-}
					 $x3_sE6 $x4_sEm  ::  $x1_tsEs
							      -> ($x2_tsEt -> $x1_tsEs)
							      -> $x2_tsEt
						 {-# L #-}
						 $x4_sEm $x5_sEn  ::  $x0_asEu ($x1_tsEs
										-> ($x2_tsEt
										    -> $x1_tsEs)
										-> $x2_tsEt)
							 {-# L #-}
							 $x5_sEn ->
	let {
	  $x7_sE7  ::  ($x1_tsEs -> ($x2_tsEt -> $x1_tsEs) -> $x2_tsEt)
		       -> $x1_tsEs
		       -> ($x2_tsEt -> $x1_tsEs)
		       -> $x2_tsEt
	  _A>_ 1 {-# L #-}
	  $x7_sE7 =
	      \ $x6_sDY  ::  $x1_tsEs -> ($x2_tsEt -> $x1_tsEs) -> $x2_tsEt
		{-# L #-}
		$x6_sDY ->
		  $x6_sDY
	} in 
	  $x3_sE6
	      _@_ ($x1_tsEs -> ($x2_tsEt -> $x1_tsEs) -> $x2_tsEt)
	      _@_ ($x1_tsEs -> ($x2_tsEt -> $x1_tsEs) -> $x2_tsEt)
	      $x7_sE7
	      $x5_sEn
