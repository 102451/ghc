ds031.hs:4: 
    Warning: Possibly incomplete patterns
	in the definition of function `foldPair'


================================================================================
Desugared:
Rec {
foldPair{-r3f,x-}  ::  _forall_
		       [tayn tayo]
		       =>
		       (tayn -> tayn -> tayn, tayo -> tayo -> tayo)
		       -> (tayn, tayo)
		       -> [(tayn, tayo)]
		       -> (tayn, tayo)
{-# L #-}
foldPair{-r3f,x-} =
    _/\_ tayn tayo ->
	_letrec_ {
	  foldPair_ayk  ::  (tayn -> tayn -> tayn, tayo -> tayo -> tayo)
			    -> (tayn, tayo)
			    -> [(tayn, tayo)]
			    -> (tayn, tayo)
	  {-# L #-}
	  foldPair_ayk =
	      \ fg_r3h  ::  (tayn -> tayn -> tayn, tayo -> tayo -> tayo)
		{-# L #-}
		fg_r3h ab_r3i  ::  (tayn, tayo)
		       {-# L #-}
		       ab_r3i ds_dDb  ::  [(tayn, tayo)]
			      {-# L #-}
			      ds_dDb ->
		  let {
		    fail_dDc  ::  (tayn, tayo)
		    {-# L #-}
		    fail_dDc =
			GHCerr.patError{-8r,w-}
			    _@_ (tayn, tayo) _string_ "ds031.hs:4|function `foldPair'" } in
		  let {
		    fail_dF4  ::  (tayn, tayo)
		    {-# L #-}
		    fail_dF4 =
			case fg_r3h of { PrelTup.(,){-62,w-}{i} f_r3l g_r3m  ->
			case ds_dDb of {
			  PrelBase.[]{-5i,w-}{i} -> fail_dDc;
			  PrelBase.:{-55,w-}{i} ds_dDx abs_r3q ->
			      case ds_dDx of { PrelTup.(,){-62,w-}{i} a_r3o b_r3p  ->
			      let {
				ab_r3n  ::  (tayn, tayo)
				{-# L #-}
				ab_r3n =
				    ab_r3i } in
			      let {
				fg_r3k  ::  (tayn -> tayn -> tayn, tayo -> tayo -> tayo)
				{-# L #-}
				fg_r3k =
				    fg_r3h } in
			      let {
				ds_dEt  ::  (tayn, tayo)
				{-# L #-}
				ds_dEt =
				    foldPair{-r3f,x-} _@_ tayn _@_ tayo fg_r3k ab_r3n abs_r3q } in
			      let {
				u_ayS  ::  tayn
				{-# L #-}
				u_ayS =
				    case ds_dEt of { PrelTup.(,){-62,w-}{i} u_ayS v_ayT  ->
				    u_ayS;} } in
			      let {
				v_ayT  ::  tayo
				{-# L #-}
				v_ayT =
				    case ds_dEt of { PrelTup.(,){-62,w-}{i} u_ayS v_ayT  ->
				    v_ayT;} } in
			      let {
				u_r3s  ::  tayn
				{-# L #-}
				u_r3s =
				    u_ayS } in
			      let {
				v_r3t  ::  tayo
				{-# L #-}
				v_r3t =
				    v_ayT } in
			      let {
				ds_dE2  ::  tayn
				{-# L #-}
				ds_dE2 =
				    f_r3l a_r3o u_r3s } in
			      let {
				ds_dE6  ::  tayo
				{-# L #-}
				ds_dE6 =
				    g_r3m b_r3p v_r3t
			      } in  PrelTup.(,){-62,w-}{i} {_@_ tayn _@_ tayo ds_dE2 ds_dE6};};
			};}
		  } in 
		    case ds_dDb of {
		      PrelBase.:{-55,w-}{i} ds_dFb ds_dFc -> fail_dF4;
		      PrelBase.[]{-5i,w-}{i} -> ab_r3i;
		    };
	} in  foldPair_ayk
end Rec }
