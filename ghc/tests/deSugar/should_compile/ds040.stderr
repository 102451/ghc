

================================================================================
Desugared:
Rec {
^^^^{-r3g,x-}  ::  _forall_
		   [taZJ taZG]
		   =>
		   {PrelBase.Num{-2c,p-} taZG}
		   -> {PrelNum.Integral{-27,p-} taZJ}
		   -> taZG
		   -> taZJ
		   -> taZG
{-# L #-}
^^^^{-r3g,x-} =
    _/\_ taZJ taZG -> \ d.Num_a11q  ::  {PrelBase.Num{-2c,p-} taZG}
			{-# L #-}
			d.Num_a11q d.Integral_a11r  ::  {PrelNum.Integral{-27,p-} taZJ}
				   {-# L #-}
				   d.Integral_a11r ->
	_letrec_ {
	  d.Real_a11G  ::  {PrelNum.Real{-2f,p-} taZJ}
	  {-# L #-}
	  d.Real_a11G =
	      PrelNum.scsel_IntegralPrelNumReal{-a1eV,p-}
		  _@_ taZJ d.Integral_a11r;
	  d.Num_a11u  ::  {PrelBase.Num{-2c,p-} taZJ}
	  {-# L #-}
	  d.Num_a11u =
	      PrelNum.scsel_RealPrelBaseNum{-a1gK,p-} _@_ taZJ d.Real_a11G;
	  d.Ord_a11C  ::  {PrelBase.Ord{-2d,p-} taZJ}
	  {-# L #-}
	  d.Ord_a11C =
	      PrelNum.scsel_RealPrelBaseOrd{-a1gT,p-} _@_ taZJ d.Real_a11G;
	  d.Eq_a11w  ::  {PrelBase.Eq{-23,p-} taZJ}
	  {-# L #-}
	  d.Eq_a11w =
	      PrelBase.scsel_OrdPrelBaseEq{-a1h2,p-} _@_ taZJ d.Ord_a11C;
	  fromInt_a1eK  ::  PrelBase.Int{-3g,W-} -> taZJ
	  {-# L #-}
	  fromInt_a1eK =
	      PrelBase.fromInt{-8R,p-} _@_ taZJ d.Num_a11u;
	  lit_a1eL  ::  taZJ
	  {-# L #-}
	  lit_a1eL =
	      let {
		ds_d1hh  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d1hh =
		    PrelBase.I#{-5b,w-}{i} 0
	      } in  fromInt_a1eK ds_d1hh;
	  ==_a1eM  ::  taZJ -> taZJ -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  ==_a1eM =
	      PrelBase.=={-8Y,p-} _@_ taZJ d.Eq_a11w;
	  d.Num_a11z  ::  {PrelBase.Num{-2c,p-} taZG}
	  {-# L #-}
	  d.Num_a11z =
	      d.Num_a11q;
	  fromInt_a1eN  ::  PrelBase.Int{-3g,W-} -> taZG
	  {-# L #-}
	  fromInt_a1eN =
	      PrelBase.fromInt{-8R,p-} _@_ taZG d.Num_a11z;
	  lit_a1eO  ::  taZG
	  {-# L #-}
	  lit_a1eO =
	      let {
		ds_d1hM  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d1hM =
		    PrelBase.I#{-5b,w-}{i} 1
	      } in  fromInt_a1eN ds_d1hM;
	  fromInt_a1eP  ::  PrelBase.Int{-3g,W-} -> taZJ
	  {-# L #-}
	  fromInt_a1eP =
	      fromInt_a1eK;
	  lit_a1eQ  ::  taZJ
	  {-# L #-}
	  lit_a1eQ =
	      let {
		ds_d1i1  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d1i1 =
		    PrelBase.I#{-5b,w-}{i} 1
	      } in  fromInt_a1eP ds_d1i1;
	  >=_a1eR  ::  taZJ -> taZJ -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  >=_a1eR =
	      PrelBase.>={-8Z,p-} _@_ taZJ d.Ord_a11C;
	  d.Num_a11E  ::  {PrelBase.Num{-2c,p-} taZJ}
	  {-# L #-}
	  d.Num_a11E =
	      d.Num_a11u;
	  -_a1eS  ::  taZJ -> taZJ -> taZJ
	  {-# L #-}
	  -_a1eS =
	      PrelBase.-{-817,p-} _@_ taZJ d.Num_a11E;
	  d.Integral_a11h  ::  {PrelNum.Integral{-27,p-} taZJ}
	  {-# L #-}
	  d.Integral_a11h =
	      d.Integral_a11r;
	  d.Num_a11i  ::  {PrelBase.Num{-2c,p-} taZG}
	  {-# L #-}
	  d.Num_a11i =
	      d.Num_a11q;
	  ^^^^_aZD  ::  taZG -> taZJ -> taZG
	  {-# L #-}
	  ^^^^_aZD =
	      \ x_r3k  ::  taZG
		{-# L #-}
		x_r3k ds_d1iN  ::  taZJ
		      {-# L #-}
		      ds_d1iN ->
		  let {
		    fail_d1j0  ::  taZG
		    {-# L #-}
		    fail_d1j0 =
			IOBase.error{-87,w-}
			    _@_ taZG _string_ "(^^^^){Prelude}: negative exponent" } in
		  let {
		    fail_d1qc  ::  taZG
		    {-# L #-}
		    fail_d1qc =
			case
			    (\ ds_d1iU  ::  taZJ
			       {-# L #-}
			       ds_d1iU ->
				 >=_a1eR ds_d1iU lit_a1eQ)
				ds_d1iN
			of {
			  PrelBase.True{-5E,w-}{i} ->
			      let {
				n_r3n  ::  taZJ
				{-# L #-}
				n_r3n =
				    (\ ds_d1jp  ::  taZJ
				       {-# L #-}
				       ds_d1jp ->
					 -_a1eS ds_d1jp lit_a1eQ)
					ds_d1iN } in
			      let {
				x_r3m  ::  taZG
				{-# L #-}
				x_r3m =
				    x_r3k } in
			      _letrec_ {
				f_r3p  ::  _forall_
					   [ta10M ta10Q]
					   =>
					   {PrelNum.Integral{-27,p-} ta10M}
					   -> {PrelBase.Num{-2c,p-} ta10Q}
					   -> ta10Q
					   -> ta10M
					   -> ta10Q
					   -> ta10Q
				{-# L #-}
				f_r3p =
				    _/\_ ta10M ta10Q -> \ d.Integral_a10Z  ::  {PrelNum.Integral{-27,p-} ta10M}
							  {-# L #-}
							  d.Integral_a10Z d.Num_a111  ::  {PrelBase.Num{-2c,p-} ta10Q}
									  {-# L #-}
									  d.Num_a111 ->
					_letrec_ {
					  d.Real_a119  ::  {PrelNum.Real{-2f,p-} ta10M}
					  {-# L #-}
					  d.Real_a119 =
					      PrelNum.scsel_IntegralPrelNumReal{-a1eV,p-}
						  _@_ ta10M d.Integral_a10Z;
					  d.Num_a10V  ::  {PrelBase.Num{-2c,p-} ta10M}
					  {-# L #-}
					  d.Num_a10V =
					      PrelNum.scsel_RealPrelBaseNum{-a1gK,p-}
						  _@_ ta10M d.Real_a119;
					  d.Eq_a10X  ::  {PrelBase.Eq{-23,p-} ta10M}
					  {-# L #-}
					  d.Eq_a10X =
					      PrelBase.scsel_NumPrelBaseEq{-a1lq,p-}
						  _@_ ta10M d.Num_a10V;
					  fromInt_a1jV  ::  PrelBase.Int{-3g,W-} -> ta10M
					  {-# L #-}
					  fromInt_a1jV =
					      PrelBase.fromInt{-8R,p-} _@_ ta10M d.Num_a10V;
					  lit_a1jW  ::  ta10M
					  {-# L #-}
					  lit_a1jW =
					      let {
						ds_d1lF  ::  PrelBase.Int{-3g,W-}
						{-# L #-}
						ds_d1lF =
						    PrelBase.I#{-5b,w-}{i} 0
					      } in  fromInt_a1jV ds_d1lF;
					  ==_a1jX  ::  ta10M -> ta10M -> PrelBase.Bool{-34,W-}
					  {-# L #-}
					  ==_a1jX =
					      PrelBase.=={-8Y,p-} _@_ ta10M d.Eq_a10X;
					  even_a1jY  ::  ta10M -> PrelBase.Bool{-34,W-}
					  {-# L #-}
					  even_a1jY =
					      PrelNum.even{-ruE,p-} _@_ ta10M d.Integral_a10Z;
					  *_a1jZ  ::  ta10Q -> ta10Q -> ta10Q
					  {-# L #-}
					  *_a1jZ =
					      PrelBase.*{-ra3,p-} _@_ ta10Q d.Num_a111;
					  d.Integral_a113  ::  {PrelNum.Integral{-27,p-} ta10M}
					  {-# L #-}
					  d.Integral_a113 =
					      d.Integral_a10Z;
					  quot_a1k0  ::  ta10M -> ta10M -> ta10M
					  {-# L #-}
					  quot_a1k0 =
					      PrelNum.quot{-rh5,p-} _@_ ta10M d.Integral_a113;
					  fromInt_a1k1  ::  PrelBase.Int{-3g,W-} -> ta10M
					  {-# L #-}
					  fromInt_a1k1 =
					      fromInt_a1jV;
					  lit_a1k2  ::  ta10M
					  {-# L #-}
					  lit_a1k2 =
					      let {
						ds_d1mr  ::  PrelBase.Int{-3g,W-}
						{-# L #-}
						ds_d1mr =
						    PrelBase.I#{-5b,w-}{i} 2
					      } in  fromInt_a1k1 ds_d1mr;
					  d.Num_a116  ::  {PrelBase.Num{-2c,p-} ta10M}
					  {-# L #-}
					  d.Num_a116 =
					      d.Num_a10V;
					  -_a1k3  ::  ta10M -> ta10M -> ta10M
					  {-# L #-}
					  -_a1k3 =
					      PrelBase.-{-817,p-} _@_ ta10M d.Num_a116;
					  fromInt_a1k4  ::  PrelBase.Int{-3g,W-} -> ta10M
					  {-# L #-}
					  fromInt_a1k4 =
					      fromInt_a1jV;
					  lit_a1k5  ::  ta10M
					  {-# L #-}
					  lit_a1k5 =
					      let {
						ds_d1mP  ::  PrelBase.Int{-3g,W-}
						{-# L #-}
						ds_d1mP =
						    PrelBase.I#{-5b,w-}{i} 1
					      } in  fromInt_a1k4 ds_d1mP;
					  f_aZV  ::  ta10Q -> ta10M -> ta10Q -> ta10Q
					  {-# L #-}
					  f_aZV =
					      \ ds_d1n9  ::  ta10Q
						{-# L #-}
						ds_d1n9 ds_d1n6  ::  ta10M
							{-# L #-}
							ds_d1n6 y_r3r  ::  ta10Q
								{-# L #-}
								y_r3r ->
						  let { fail_d1pl  ::  ta10Q
							{-# L #-}
							fail_d1pl =
						    let {
						      y_r3v  ::  ta10Q
						      {-# L #-}
						      y_r3v =
							  y_r3r } in
						    let {
						      n_r3u  ::  ta10M
						      {-# L #-}
						      n_r3u =
							  ds_d1n6 } in
						    let {
						      x_r3t  ::  ta10Q
						      {-# L #-}
						      x_r3t =
							  ds_d1n9 } in
						    _letrec_ {
						      *_a1np  ::  ta10Q -> ta10Q -> ta10Q
						      {-# L #-}
						      *_a1np =
							  *_a1jZ;
						      g_a10m  ::  ta10Q -> ta10M -> ta10Q
						      {-# L #-}
						      g_a10m =
							  \ x_r3z  ::  ta10Q
							    {-# L #-}
							    x_r3z n_r3A  ::  ta10M
								  {-# L #-}
								  n_r3A ->
							      case even_a1jY n_r3A of {
								PrelBase.True{-5E,w-}{i} ->
								    let {
								      ds_d1nU  ::  ta10M
								      {-# L #-}
								      ds_d1nU =
									  quot_a1k0 n_r3A lit_a1k2
								    } in 
								      (let {
									 ds_d1ob  ::  ta10Q
									 {-# L #-}
									 ds_d1ob =
									     *_a1jZ x_r3z x_r3z
								       } in  g_a10m ds_d1ob)
									  ds_d1nU;
								PrelBase.False{-58,w-}{i} ->
								    let {
								      ds_d1ow  ::  ta10Q
								      {-# L #-}
								      ds_d1ow =
									  *_a1np x_r3z y_r3v
								    } in 
								      (let {
									 ds_d1oQ  ::  ta10M
									 {-# L #-}
									 ds_d1oQ =
									     -_a1k3 n_r3A lit_a1k5
								       } in  f_aZV x_r3z ds_d1oQ)
									  ds_d1ow;
							      };
						      g_r3x  ::  ta10Q -> ta10M -> ta10Q
						      {-# L #-}
						      g_r3x =
							  g_a10m;
						    } in  g_r3x x_r3t n_r3u
						  } in
						  case ==_a1jX lit_a1jW ds_d1n6 of {
						    PrelBase.True{-5E,w-}{i} -> y_r3r;
						    PrelBase.False{-58,w-}{i} -> fail_d1pl;
						  };
					} in  f_aZV;
			      } in 
				let {
				  f_a1pD  ::  taZG -> taZJ -> taZG -> taZG
				  {-# L #-}
				  f_a1pD =
				      f_r3p _@_ taZJ _@_ taZG d.Integral_a11h d.Num_a11i
				} in  f_a1pD x_r3m n_r3n x_r3m;
			  PrelBase.False{-58,w-}{i} -> fail_d1j0;
			}
		  } in 
		    case ==_a1eM lit_a1eL ds_d1iN of {
		      PrelBase.True{-5E,w-}{i} -> lit_a1eO;
		      PrelBase.False{-58,w-}{i} -> fail_d1qc;
		    };
	} in  ^^^^_aZD
^^^^_a1eG  ::  PrelBase.Int{-3g,W-}
	       -> PrelBase.Int{-3g,W-}
	       -> PrelBase.Int{-3g,W-}
{-# L #-}
^^^^_a1eG =
    ^^^^{-r3g,x-}
	_@_ PrelBase.Int{-3g,W-}
	_@_ PrelBase.Int{-3g,W-}
	d.Num_a127
	d.Integral_a128
main_a11K  ::  IOBase.IO{-3e,p-} PrelBase.(){-40,W-}
{-# L #-}
main_a11K =
    let {
      ds_d1qH  ::  PrelBase.Int{-3g,W-}
      {-# L #-}
      ds_d1qH =
	  ^^^^_a1eG lit_a1eI lit_a1eJ
    } in  print_a1eH ds_d1qH
main{-814,x-}  ::  IOBase.IO{-3e,p-} PrelBase.(){-40,W-}
{-# L #-}
main{-814,x-} =
    main_a11K
d.Show_a12a  ::  {PrelBase.Show{-2i,p-} PrelBase.Int{-3g,W-}}
{-# L #-}
d.Show_a12a =
    PrelBase.$d3{-raC,p-}
print_a1eH  ::  PrelBase.Int{-3g,W-}
		-> IOBase.IO{-3e,p-} PrelBase.(){-40,W-}
{-# L #-}
print_a1eH =
    PrelIO.print{-rLi,p-} _@_ PrelBase.Int{-3g,W-} d.Show_a12a
d.Num_a127  ::  {PrelBase.Num{-2c,p-} PrelBase.Int{-3g,W-}}
{-# L #-}
d.Num_a127 =
    PrelBase.$d4{-raN,p-}
d.Integral_a128  ::  {PrelNum.Integral{-27,p-} PrelBase.Int{-3g,W-}}
{-# L #-}
d.Integral_a128 =
    PrelNum.$d36{-roC,p-}
lit_a1eI  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1eI =
    PrelBase.I#{-5b,w-}{i} 4
lit_a1eJ  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1eJ =
    PrelBase.I#{-5b,w-}{i} 6
end Rec }
