

================================================================================
Desugared:
Rec {
ds_dq1  ::  _forall_ [takN takP] => (takP -> takN, takP -> takN)
{-# L #-}
ds_dq1 =
    _/\_ takN takP ->
	_letrec_ {
	  g4_akw  ::  takP -> takN
	  {-# L #-}
	  g4_akw =
	      \ y_r3w  ::  takP
		{-# L #-}
		y_r3w ->
		  f4_akx y_r3w;
	  f4_akx  ::  takP -> takN
	  {-# L #-}
	  f4_akx =
	      \ x_r3y  ::  takP
		{-# L #-}
		x_r3y ->
		  g4_akw x_r3y;
	} in 
	  PrelTup.(,){-62,w-}{i}
	      {_@_ (takP -> takN) _@_ (takP -> takN) g4_akw f4_akx}
g4{-r3A,x-}  ::  _forall_ [takN takP] => takP -> takN
{-# L #-}
g4{-r3A,x-} =
    _/\_ takN takP ->
	case
	    ds_dq1 _@_ takN _@_ takP
	of {
	PrelTup.(,){-62,w-}{i} ds_drz ds_drA  ->
	ds_drz;}
f4{-r3z,x-}  ::  _forall_ [takN takP] => takP -> takN
{-# L #-}
f4{-r3z,x-} =
    _/\_ takN takP ->
	case
	    ds_dq1 _@_ takN _@_ takP
	of {
	PrelTup.(,){-62,w-}{i} ds_drT ds_drS  ->
	ds_drS;}
ds_dqx  ::  _forall_ [tal8 tala] => (tala -> tal8, tala -> tal8)
{-# L #-}
ds_dqx =
    _/\_ tal8 tala ->
	_letrec_ {
	  f3_akR  ::  tala -> tal8
	  {-# L #-}
	  f3_akR =
	      \ x_r3s  ::  tala
		{-# L #-}
		x_r3s ->
		  g3_akS x_r3s;
	  g3_akS  ::  tala -> tal8
	  {-# L #-}
	  g3_akS =
	      \ y_r3u  ::  tala
		{-# L #-}
		y_r3u ->
		  f3_akR y_r3u;
	} in 
	  PrelTup.(,){-62,w-}{i}
	      {_@_ (tala -> tal8) _@_ (tala -> tal8) f3_akR g3_akS}
f3{-r3C,x-}  ::  _forall_ [tal8 tala] => tala -> tal8
{-# L #-}
f3{-r3C,x-} =
    _/\_ tal8 tala ->
	case
	    ds_dqx _@_ tal8 _@_ tala
	of {
	PrelTup.(,){-62,w-}{i} ds_dsQ ds_dsR  ->
	ds_dsQ;}
g3{-r3B,x-}  ::  _forall_ [tal8 tala] => tala -> tal8
{-# L #-}
g3{-r3B,x-} =
    _/\_ tal8 tala ->
	case
	    ds_dqx _@_ tal8 _@_ tala
	of {
	PrelTup.(,){-62,w-}{i} ds_dta ds_dt9  ->
	ds_dt9;}
g2{-r3E,x-}  ::  _forall_ [tall] => tall -> tall
{-# L #-}
g2{-r3E,x-} =
    _/\_ tall ->
	_letrec_ {
	  g2_alc  ::  tall -> tall
	  {-# L #-}
	  g2_alc =
	      \ y_r3o  ::  tall
		{-# L #-}
		y_r3o ->
		  y_r3o;
	} in  g2_alc
f2{-r3D,x-}  ::  _forall_ [talw] => talw -> talw
{-# L #-}
f2{-r3D,x-} =
    _/\_ talw ->
	_letrec_ {
	  f2_aln  ::  talw -> talw
	  {-# L #-}
	  f2_aln =
	      \ x_r3q  ::  talw
		{-# L #-}
		x_r3q ->
		  g2{-r3E,x-} _@_ talw x_r3q;
	} in  f2_aln
g1{-r3F,x-}  ::  _forall_ [talH] => talH -> talH
{-# L #-}
g1{-r3F,x-} =
    _/\_ talH ->
	_letrec_ {
	  g1_aly  ::  talH -> talH
	  {-# L #-}
	  g1_aly =
	      \ y_r3m  ::  talH
		{-# L #-}
		y_r3m ->
		  y_r3m;
	} in  g1_aly
f1{-r3G,x-}  ::  _forall_ [talS] => talS -> talS
{-# L #-}
f1{-r3G,x-} =
    _/\_ talS ->
	_letrec_ {
	  f1_alJ  ::  talS -> talS
	  {-# L #-}
	  f1_alJ =
	      \ x_r3k  ::  talS
		{-# L #-}
		x_r3k ->
		  g1{-r3F,x-} _@_ talS x_r3k;
	} in  f1_alJ
end Rec }

NOTE: Simplifier still going after 4 iterations; bailing out.
