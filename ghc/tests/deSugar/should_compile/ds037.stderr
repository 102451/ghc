

================================================================================
Desugared:
Rec {
ds_dVA  ::  _forall_
	    [taS9]
	    =>
	    (PrelBase.Int{-3g,W-}
	     -> PrelBase.Int{-3g,W-}
	     -> (taS9, PrelBase.Int{-3g,W-}), PrelBase.Int{-3g,W-}
					      -> PrelBase.Int{-3g,W-}
					      -> (taS9, PrelBase.Int{-3g,W-}))
{-# L #-}
ds_dVA =
    _/\_ taS9 ->
	_letrec_ {
	  +_aTZ  ::  PrelBase.Int{-3g,W-}
		     -> PrelBase.Int{-3g,W-}
		     -> PrelBase.Int{-3g,W-}
	  {-# L #-}
	  +_aTZ =
	      +_aU0;
	  lit_aU2  ::  PrelBase.Int{-3g,W-}
	  {-# L #-}
	  lit_aU2 =
	      lit_aU1;
	  f_aRp  ::  PrelBase.Int{-3g,W-}
		     -> PrelBase.Int{-3g,W-}
		     -> (taS9, PrelBase.Int{-3g,W-})
	  {-# L #-}
	  f_aRp =
	      \ x_r3e  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		x_r3e y_r3f  ::  PrelBase.Int{-3g,W-}
		      {-# L #-}
		      y_r3f ->
		  let { ds_dWx  ::  taS9
			{-# L #-}
			ds_dWx =
		    let {
		      ds_dWN  ::  (taS9, PrelBase.Int{-3g,W-})
		      {-# L #-}
		      ds_dWN =
			  g_aRq y_r3f x_r3e
		    } in  PrelTup.fst{-rgQ,p-} _@_ PrelBase.Int{-3g,W-} _@_ taS9 ds_dWN
		  } in
		  let {
		    ds_dWB  ::  PrelBase.Int{-3g,W-}
		    {-# L #-}
		    ds_dWB =
			+_aU0 x_r3e lit_aU1
		  } in 
		    PrelTup.(,){-62,w-}{i}
			{_@_ taS9 _@_ PrelBase.Int{-3g,W-} ds_dWx ds_dWB};
	  g_aRq  ::  PrelBase.Int{-3g,W-}
		     -> PrelBase.Int{-3g,W-}
		     -> (taS9, PrelBase.Int{-3g,W-})
	  {-# L #-}
	  g_aRq =
	      \ x_r3j  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		x_r3j y_r3k  ::  PrelBase.Int{-3g,W-}
		      {-# L #-}
		      y_r3k ->
		  let { ds_dXl  ::  taS9
			{-# L #-}
			ds_dXl =
		    let {
		      ds_dXB  ::  (taS9, PrelBase.Int{-3g,W-})
		      {-# L #-}
		      ds_dXB =
			  f_aRp x_r3j y_r3k
		    } in  PrelTup.fst{-rgQ,p-} _@_ PrelBase.Int{-3g,W-} _@_ taS9 ds_dXB
		  } in
		  let {
		    ds_dXp  ::  PrelBase.Int{-3g,W-}
		    {-# L #-}
		    ds_dXp =
			+_aTZ y_r3k lit_aU2
		  } in 
		    PrelTup.(,){-62,w-}{i}
			{_@_ taS9 _@_ PrelBase.Int{-3g,W-} ds_dXl ds_dXp};
	} in 
	  PrelTup.(,){-62,w-}{i}
	      {_@_ (PrelBase.Int{-3g,W-}
		    -> PrelBase.Int{-3g,W-}
		    -> (taS9, PrelBase.Int{-3g,W-}))
	       _@_ (PrelBase.Int{-3g,W-}
		    -> PrelBase.Int{-3g,W-}
		    -> (taS9, PrelBase.Int{-3g,W-}))
	       f_aRp
	       g_aRq}
f{-r3l,x-}  ::  _forall_
		[taS9]
		=>
		PrelBase.Int{-3g,W-}
		-> PrelBase.Int{-3g,W-}
		-> (taS9, PrelBase.Int{-3g,W-})
{-# L #-}
f{-r3l,x-} =
    _/\_ taS9 ->
	case ds_dVA _@_ taS9 of { PrelTup.(,){-62,w-}{i} ds_dYl ds_dYm  ->
	ds_dYl;}
g{-r3g,x-}  ::  _forall_
		[taS9]
		=>
		PrelBase.Int{-3g,W-}
		-> PrelBase.Int{-3g,W-}
		-> (taS9, PrelBase.Int{-3g,W-})
{-# L #-}
g{-r3g,x-} =
    _/\_ taS9 ->
	case ds_dVA _@_ taS9 of { PrelTup.(,){-62,w-}{i} ds_dYC ds_dYB  ->
	ds_dYB;}
d.Num_aSj  ::  {PrelBase.Num{-2c,p-} PrelBase.Int{-3g,W-}}
{-# L #-}
d.Num_aSj =
    PrelBase.$d4{-ray,p-}
+_aU0  ::  PrelBase.Int{-3g,W-}
	   -> PrelBase.Int{-3g,W-}
	   -> PrelBase.Int{-3g,W-}
{-# L #-}
+_aU0 =
    PrelBase.+{-r3m,p-} _@_ PrelBase.Int{-3g,W-} d.Num_aSj
lit_aU1  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_aU1 =
    PrelBase.I#{-5b,w-}{i} 1
end Rec }

NOTE: Simplifier still going after 4 iterations; bailing out.
