

================================================================================
Desugared:
Rec {
z_aQq  ::  [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
{-# L #-}
z_aQq =
    _letrec_ {
      ds_dWs  ::  [PrelBase.Char{-38,W-}]
		  -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
      {-# L #-}
      ds_dWs =
	  \ ds_dWx  ::  [PrelBase.Char{-38,W-}]
	    {-# L #-}
	    ds_dWx ->
	      case ds_dWx of {
		PrelBase.[]{-5i,w-}{i} ->
		    PrelBase.[]{-5i,w-}{i}
			{_@_ (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})};
		PrelBase.:{-55,w-}{i} ds_dX5 ds_dXe ->
		    let {
		      a_r3d  ::  PrelBase.Char{-38,W-}
		      {-# L #-}
		      a_r3d =
			  ds_dX5 } in
		    _letrec_ {
		      ds_dXk  ::  [PrelBase.Char{-38,W-}]
				  -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
		      {-# L #-}
		      ds_dXk =
			  \ ds_dXp  ::  [PrelBase.Char{-38,W-}]
			    {-# L #-}
			    ds_dXp ->
			      case ds_dXp of {
				PrelBase.[]{-5i,w-}{i} -> ds_dWs ds_dXe;
				PrelBase.:{-55,w-}{i} ds_dXE ds_dXN ->
				    let {
				      b_r3f  ::  PrelBase.Char{-38,W-}
				      {-# L #-}
				      b_r3f =
					  ds_dXE } in
				    _letrec_ {
				      ds_dXT  ::  [PrelBase.Char{-38,W-}]
						  -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
				      {-# L #-}
				      ds_dXT =
					  \ ds_dXY  ::  [PrelBase.Char{-38,W-}]
					    {-# L #-}
					    ds_dXY ->
					      case ds_dXY of {
						PrelBase.[]{-5i,w-}{i} -> ds_dXk ds_dXN;
						PrelBase.:{-55,w-}{i} ds_dYd ds_dYm ->
						    let {
						      c_r3h  ::  PrelBase.Char{-38,W-}
						      {-# L #-}
						      c_r3h =
							  ds_dYd } in
						    _letrec_ {
						      ds_dYs  ::  [PrelBase.Char{-38,W-}]
								  -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
						      {-# L #-}
						      ds_dYs =
							  \ ds_dYx  ::  [PrelBase.Char{-38,W-}]
							    {-# L #-}
							    ds_dYx ->
							      case ds_dYx of {
								PrelBase.[]{-5i,w-}{i} ->
								    ds_dXT ds_dYm;
								PrelBase.:{-55,w-}{i} ds_dYM ds_dYV ->
								    let {
								      d_r3j  ::  PrelBase.Char{-38,W-}
								      {-# L #-}
								      d_r3j =
									  ds_dYM } in
								    _letrec_ {
								      ds_dZ1  ::  [PrelBase.Char{-38,W-}]
										  -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
								      {-# L #-}
								      ds_dZ1 =
									  \ ds_dZ6  ::  [PrelBase.Char{-38,W-}]
									    {-# L #-}
									    ds_dZ6 ->
									      case ds_dZ6 of {
										PrelBase.[]{-5i,w-}{i} ->
										    ds_dYs ds_dYV;
										PrelBase.:{-55,w-}{i} ds_dZl ds_dZu ->
										    let {
										      e_r3l  ::  PrelBase.Char{-38,W-}
										      {-# L #-}
										      e_r3l =
											  ds_dZl } in
										    _letrec_ {
										      ds_dZA  ::  [PrelBase.Char{-38,W-}]
												  -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
										      {-# L #-}
										      ds_dZA =
											  \ ds_dZF  ::  [PrelBase.Char{-38,W-}]
											    {-# L #-}
											    ds_dZF ->
											      case
												  ds_dZF
											      of {
												PrelBase.[]{-5i,w-}{i} ->
												    ds_dZ1
													ds_dZu;
												PrelBase.:{-55,w-}{i} ds_dZU ds_d103 ->
												    let {
												      f_r3n  ::  PrelBase.Char{-38,W-}
												      {-# L #-}
												      f_r3n =
													  ds_dZU } in
												    _letrec_ {
												      ds_d109  ::  [PrelBase.Char{-38,W-}]
														   -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
												      {-# L #-}
												      ds_d109 =
													  \ ds_d10e  ::  [PrelBase.Char{-38,W-}]
													    {-# L #-}
													    ds_d10e ->
													      case
														  ds_d10e
													      of {
														PrelBase.[]{-5i,w-}{i} ->
														    ds_dZA
															ds_d103;
														PrelBase.:{-55,w-}{i} ds_d10t ds_d10C ->
														    let {
														      g_r3p  ::  PrelBase.Char{-38,W-}
														      {-# L #-}
														      g_r3p =
															  ds_d10t } in
														    _letrec_ {
														      ds_d10I  ::  [PrelBase.Char{-38,W-}]
																   -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
														      {-# L #-}
														      ds_d10I =
															  \ ds_d10N  ::  [PrelBase.Char{-38,W-}]
															    {-# L #-}
															    ds_d10N ->
															      case
																  ds_d10N
															      of {
																PrelBase.[]{-5i,w-}{i} ->
																    ds_d109
																	ds_d10C;
																PrelBase.:{-55,w-}{i} ds_d112 ds_d11b ->
																    let {
																      h_r3r  ::  PrelBase.Char{-38,W-}
																      {-# L #-}
																      h_r3r =
																	  ds_d112 } in
																    _letrec_ {
																      ds_d11h  ::  [PrelBase.Char{-38,W-}]
																		   -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
																      {-# L #-}
																      ds_d11h =
																	  \ ds_d11m  ::  [PrelBase.Char{-38,W-}]
																	    {-# L #-}
																	    ds_d11m ->
																	      case
																		  ds_d11m
																	      of {
																		PrelBase.[]{-5i,w-}{i} ->
																		    ds_d10I
																			ds_d11b;
																		PrelBase.:{-55,w-}{i} ds_d11B ds_d11K ->
																		    let {
																		      i_r3t  ::  PrelBase.Char{-38,W-}
																		      {-# L #-}
																		      i_r3t =
																			  ds_d11B } in
																		    _letrec_ {
																		      ds_d11Q  ::  [PrelBase.Char{-38,W-}]
																				   -> [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
																		      {-# L #-}
																		      ds_d11Q =
																			  \ ds_d11V  ::  [PrelBase.Char{-38,W-}]
																			    {-# L #-}
																			    ds_d11V ->
																			      case
																				  ds_d11V
																			      of {
																				PrelBase.[]{-5i,w-}{i} ->
																				    ds_d11h
																					ds_d11K;
																				PrelBase.:{-55,w-}{i} ds_d12a ds_d12t ->
																				    let {
																				      j_r3v  ::  PrelBase.Char{-38,W-}
																				      {-# L #-}
																				      j_r3v =
																					  ds_d12a } in
																				    let {
																				      ds_d12m  ::  (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
																				      {-# L #-}
																				      ds_d12m =
																					  PrelTup.(,,,,,,,,,){-6a,w-}{i}
																					      {_@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       _@_ PrelBase.Char{-38,W-}
																					       a_r3d
																					       b_r3f
																					       c_r3h
																					       d_r3j
																					       e_r3l
																					       f_r3n
																					       g_r3p
																					       h_r3r
																					       i_r3t
																					       j_r3v} } in
																				    let {
																				      ds_d12q  ::  [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
																				      {-# L #-}
																				      ds_d12q =
																					  ds_d11Q
																					      ds_d12t
																				    } in 
																				      PrelBase.:{-55,w-}{i}
																					  {_@_ (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
																					   ds_d12m
																					   ds_d12q};
																			      };
																		    } in 
																		      ds_d11Q
																			  _string_ "12";
																	      };
																    } in 
																      ds_d11h
																	  _string_ "12";
															      };
														    } in 
														      ds_d10I
															  _string_ "12";
													      };
												    } in 
												      ds_d109
													  _string_ "12";
											      };
										    } in 
										      ds_dZA
											  _string_ "12";
									      };
								    } in  ds_dZ1 _string_ "12";
							      };
						    } in  ds_dYs _string_ "12";
					      };
				    } in  ds_dXT _string_ "12";
			      };
		    } in  ds_dXk _string_ "12";
	      };
    } in  ds_dWs _string_ "12"
z{-r3w,x-}  ::  [(PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})]
{-# L #-}
z{-r3w,x-} =
    z_aQq
d.Monad_aRh  ::  {PrelBase.Monad{-28,p-} PrelBase.[]{-3j,W-}}
{-# L #-}
d.Monad_aRh =
    PrelBase.$d25{-rpl,p-}
>>=_aWK  ::  _forall_
	     [taRl taRm]
	     =>
	     [taRl] -> (taRl -> [taRm]) -> [taRm]
{-# L #-}
>>=_aWK =
    PrelBase.>>={-811,p-} _@_ PrelBase.[]{-3j,W-} d.Monad_aRh
d.Monad_aRk  ::  {PrelBase.Monad{-28,p-} PrelBase.[]{-3j,W-}}
{-# L #-}
d.Monad_aRk =
    d.Monad_aRh
return_aWT  ::  _forall_ [taRn] => taRn -> [taRn]
{-# L #-}
return_aWT =
    PrelBase.return{-816,p-} _@_ PrelBase.[]{-3j,W-} d.Monad_aRk
end Rec }
