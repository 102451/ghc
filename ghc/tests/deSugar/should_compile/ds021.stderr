ds021.hs:8: 
    Warning: Possibly incomplete patterns
	in the definition of function `f'


================================================================================
Desugared:
Rec {
f{-r3g,x-}  ::  _forall_
		[taBa taBj]
		=>
		{PrelBase.Eq{-23,p-} taBa} -> taBa -> taBa -> taBa -> [taBj]
{-# L #-}
f{-r3g,x-} =
    _/\_ taBa taBj -> \ d.Eq_aBl  ::  {PrelBase.Eq{-23,p-} taBa}
			{-# L #-}
			d.Eq_aBl ->
	_letrec_ {
	  ==_aDt  ::  taBa -> taBa -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  ==_aDt =
	      PrelBase.=={-8Y,p-} _@_ taBa d.Eq_aBl;
	  d.Eq_aBn  ::  {PrelBase.Eq{-23,p-} taBa}
	  {-# L #-}
	  d.Eq_aBn =
	      d.Eq_aBl;
	  /=_aDA  ::  taBa -> taBa -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  /=_aDA =
	      PrelBase./={-r9I,p-} _@_ taBa d.Eq_aBn;
	  f_aAK  ::  taBa -> taBa -> taBa -> [taBj]
	  {-# L #-}
	  f_aAK =
	      \ x_r3d  ::  taBa
		{-# L #-}
		x_r3d y_r3e  ::  taBa
		      {-# L #-}
		      y_r3e z_r3f  ::  taBa
			    {-# L #-}
			    z_r3f ->
		  let {
		    fail_dEl  ::  [taBj]
		    {-# L #-}
		    fail_dEl =
			GHCerr.patError{-8r,w-}
			    _@_ [taBj] _string_ "ds021.hs:5|function `f'"
		  } in 
		    case ==_aDt x_r3d y_r3e of {
		      PrelBase.True{-5E,w-}{i} -> PrelBase.[]{-5i,w-}{i} _@_ taBj;
		      PrelBase.False{-58,w-}{i} ->
			  case /=_aDA x_r3d z_r3f of {
			    PrelBase.True{-5E,w-}{i} -> PrelBase.[]{-5i,w-}{i} _@_ taBj;
			    PrelBase.False{-58,w-}{i} -> PrelBase.[]{-5i,w-}{i} _@_ taBj;
			  };
		    };
	} in  f_aAK
end Rec }
