ds020.hs:6: 
    Warning: Pattern match(es) completely overlapped
	in the definition of function `a'
ds020.hs:9: 
    Warning: Pattern match(es) completely overlapped
	in the definition of function `b'
ds020.hs:16: 
    Warning: Pattern match(es) completely overlapped
	in the definition of function `d'
ds020.hs:17: 
    Warning: Pattern match(es) completely overlapped
	in the definition of function `d'
ds020.hs:20: 
    Warning: Pattern match(es) completely overlapped
	in the definition of function `f'


================================================================================
Desugared:
Rec {
==_a1Fg  ::  PrelBase.Int{-3g,W-}
	     -> PrelBase.Int{-3g,W-}
	     -> PrelBase.Bool{-34,W-}
{-# L #-}
==_a1Fg =
    ==_a1A2
==_a1Fh  ::  PrelBase.Int{-3g,W-}
	     -> PrelBase.Int{-3g,W-}
	     -> PrelBase.Bool{-34,W-}
{-# L #-}
==_a1Fh =
    ==_a1A2
lit_a1Fi  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1Fi =
    lit_a1A4
lit_a1Fj  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1Fj =
    lit_a1A3
ds_d1IS  ::  (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
{-# L #-}
ds_d1IS =
    let { ds_d1RP  ::  (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})))
	  {-# L #-}
	  ds_d1RP =
      let {
	eq4_aWR  ::  PrelBase.Bool{-34,W-}
	{-# L #-}
	eq4_aWR =
	    ==_a1Fh lit_a1Fi lit_a1Fj } in
      let {
	eq4_r49  ::  PrelBase.Bool{-34,W-}
	{-# L #-}
	eq4_r49 =
	    eq4_aWR } in
      let {
	lit_a1MU  ::  PrelBase.Int{-3g,W-}
	{-# L #-}
	lit_a1MU =
	    lit_a1A5 } in
      let {
	eq3_aX5  ::  PrelBase.Bool{-34,W-}
	{-# L #-}
	eq3_aX5 =
	    ==_a1Fg lit_a1A5 lit_a1MU } in
      let {
	eq3_r48  ::  PrelBase.Bool{-34,W-}
	{-# L #-}
	eq3_r48 =
	    eq3_aX5 } in
      let {
	eq2_aXj  ::  PrelBase.Bool{-34,W-}
	{-# L #-}
	eq2_aXj =
	    ==_a1A2 lit_a1A3 lit_a1A4 } in
      let {
	eq2_r47  ::  PrelBase.Bool{-34,W-}
	{-# L #-}
	eq2_r47 =
	    eq2_aXj
      } in 
	case eq2_r47 of {
	  PrelBase.True{-5E,w-}{i} ->
	      let {
		ds_d1Nw  ::  PrelBase.Char{-38,W-}
		{-# L #-}
		ds_d1Nw =
		    PrelBase.C#{-54,w-}{i} {'a'} } in
	      let { ds_d1NA  ::  (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}))
		    {-# L #-}
		    ds_d1NA =
		let {
		  ds_d1NQ  ::  PrelBase.Char{-38,W-}
		  {-# L #-}
		  ds_d1NQ =
		      PrelBase.C#{-54,w-}{i} {'a'} } in
		let { ds_d1NU  ::  (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
		      {-# L #-}
		      ds_d1NU =
		  let {
		    ds_d1Oa  ::  PrelBase.Char{-38,W-}
		    {-# L #-}
		    ds_d1Oa =
			PrelBase.C#{-54,w-}{i} {'a'} } in
		  let {
		    ds_d1Oe  ::  PrelBase.Char{-38,W-}
		    {-# L #-}
		    ds_d1Oe =
			PrelBase.C#{-54,w-}{i} {'a'}
		  } in 
		    PrelTup.(,){-62,w-}{i}
			{_@_ PrelBase.Char{-38,W-}
			 _@_ PrelBase.Char{-38,W-}
			 ds_d1Oa
			 ds_d1Oe}
		} in
		PrelTup.(,){-62,w-}{i}
		    {_@_ PrelBase.Char{-38,W-}
		     _@_ (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
		     ds_d1NQ
		     ds_d1NU}
	      } in
	      PrelTup.(,){-62,w-}{i}
		  {_@_ PrelBase.Char{-38,W-}
		   _@_ (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}))
		   ds_d1Nw
		   ds_d1NA};
	  PrelBase.False{-58,w-}{i} ->
	      case eq3_r48 of {
		PrelBase.True{-5E,w-}{i} ->
		    let {
		      ds_d1OI  ::  PrelBase.Char{-38,W-}
		      {-# L #-}
		      ds_d1OI =
			  PrelBase.C#{-54,w-}{i} {'b'} } in
		    let { ds_d1OM  ::  (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}))
			  {-# L #-}
			  ds_d1OM =
		      let {
			ds_d1P2  ::  PrelBase.Char{-38,W-}
			{-# L #-}
			ds_d1P2 =
			    PrelBase.C#{-54,w-}{i} {'b'} } in
		      let { ds_d1P6  ::  (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
			    {-# L #-}
			    ds_d1P6 =
			let {
			  ds_d1Pm  ::  PrelBase.Char{-38,W-}
			  {-# L #-}
			  ds_d1Pm =
			      PrelBase.C#{-54,w-}{i} {'b'} } in
			let {
			  ds_d1Pq  ::  PrelBase.Char{-38,W-}
			  {-# L #-}
			  ds_d1Pq =
			      PrelBase.C#{-54,w-}{i} {'b'}
			} in 
			  PrelTup.(,){-62,w-}{i}
			      {_@_ PrelBase.Char{-38,W-}
			       _@_ PrelBase.Char{-38,W-}
			       ds_d1Pm
			       ds_d1Pq}
		      } in
		      PrelTup.(,){-62,w-}{i}
			  {_@_ PrelBase.Char{-38,W-}
			   _@_ (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
			   ds_d1P2
			   ds_d1P6}
		    } in
		    PrelTup.(,){-62,w-}{i}
			{_@_ PrelBase.Char{-38,W-}
			 _@_ (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}))
			 ds_d1OI
			 ds_d1OM};
		PrelBase.False{-58,w-}{i} ->
		    case eq4_r49 of {
		      PrelBase.True{-5E,w-}{i} ->
			  let {
			    ds_d1PU  ::  PrelBase.Char{-38,W-}
			    {-# L #-}
			    ds_d1PU =
				PrelBase.C#{-54,w-}{i} {'c'} } in
			  let { ds_d1PY  ::  (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}))
				{-# L #-}
				ds_d1PY =
			    let {
			      ds_d1Qe  ::  PrelBase.Char{-38,W-}
			      {-# L #-}
			      ds_d1Qe =
				  PrelBase.C#{-54,w-}{i} {'c'} } in
			    let { ds_d1Qi  ::  (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
				  {-# L #-}
				  ds_d1Qi =
			      let {
				ds_d1Qy  ::  PrelBase.Char{-38,W-}
				{-# L #-}
				ds_d1Qy =
				    PrelBase.C#{-54,w-}{i} {'c'} } in
			      let {
				ds_d1QC  ::  PrelBase.Char{-38,W-}
				{-# L #-}
				ds_d1QC =
				    PrelBase.C#{-54,w-}{i} {'c'}
			      } in 
				PrelTup.(,){-62,w-}{i}
				    {_@_ PrelBase.Char{-38,W-}
				     _@_ PrelBase.Char{-38,W-}
				     ds_d1Qy
				     ds_d1QC}
			    } in
			    PrelTup.(,){-62,w-}{i}
				{_@_ PrelBase.Char{-38,W-}
				 _@_ (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
				 ds_d1Qe
				 ds_d1Qi}
			  } in
			  PrelTup.(,){-62,w-}{i}
			      {_@_ PrelBase.Char{-38,W-}
			       _@_ (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}))
			       ds_d1PU
			       ds_d1PY};
		      PrelBase.False{-58,w-}{i} ->
			  let {
			    ds_d1QY  ::  PrelBase.Char{-38,W-}
			    {-# L #-}
			    ds_d1QY =
				PrelBase.C#{-54,w-}{i} {'d'} } in
			  let { ds_d1R2  ::  (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}))
				{-# L #-}
				ds_d1R2 =
			    let {
			      ds_d1Ri  ::  PrelBase.Char{-38,W-}
			      {-# L #-}
			      ds_d1Ri =
				  PrelBase.C#{-54,w-}{i} {'d'} } in
			    let { ds_d1Rm  ::  (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
				  {-# L #-}
				  ds_d1Rm =
			      let {
				ds_d1RC  ::  PrelBase.Char{-38,W-}
				{-# L #-}
				ds_d1RC =
				    PrelBase.C#{-54,w-}{i} {'d'} } in
			      let {
				ds_d1RG  ::  PrelBase.Char{-38,W-}
				{-# L #-}
				ds_d1RG =
				    PrelBase.C#{-54,w-}{i} {'d'}
			      } in 
				PrelTup.(,){-62,w-}{i}
				    {_@_ PrelBase.Char{-38,W-}
				     _@_ PrelBase.Char{-38,W-}
				     ds_d1RC
				     ds_d1RG}
			    } in
			    PrelTup.(,){-62,w-}{i}
				{_@_ PrelBase.Char{-38,W-}
				 _@_ (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-})
				 ds_d1Ri
				 ds_d1Rm}
			  } in
			  PrelTup.(,){-62,w-}{i}
			      {_@_ PrelBase.Char{-38,W-}
			       _@_ (PrelBase.Char{-38,W-}, (PrelBase.Char{-38,W-}, PrelBase.Char{-38,W-}))
			       ds_d1QY
			       ds_d1R2};
		    };
	      };
	}
    } in
    case ds_d1RP of { PrelTup.(,){-62,w-}{i} x4_aWs ds_d1RY  ->
    case ds_d1RY of { PrelTup.(,){-62,w-}{i} y4_aWt ds_d1S7  ->
    case ds_d1S7 of { PrelTup.(,){-62,w-}{i} z4_aWu a4_aWv  ->
    PrelTup.(,,,){-64,w-}{i}
	{_@_ PrelBase.Char{-38,W-}
	 _@_ PrelBase.Char{-38,W-}
	 _@_ PrelBase.Char{-38,W-}
	 _@_ PrelBase.Char{-38,W-}
	 x4_aWs
	 y4_aWt
	 z4_aWu
	 a4_aWv};};};}
x4_aWs  ::  PrelBase.Char{-38,W-}
{-# L #-}
x4_aWs =
    case
	ds_d1IS
    of {
    PrelTup.(,,,){-64,w-}{i} x4_aWs y4_aWt z4_aWu a4_aWv  ->
    x4_aWs;}
y4_aWt  ::  PrelBase.Char{-38,W-}
{-# L #-}
y4_aWt =
    case
	ds_d1IS
    of {
    PrelTup.(,,,){-64,w-}{i} x4_aWs y4_aWt z4_aWu a4_aWv  ->
    y4_aWt;}
z4_aWu  ::  PrelBase.Char{-38,W-}
{-# L #-}
z4_aWu =
    case
	ds_d1IS
    of {
    PrelTup.(,,,){-64,w-}{i} x4_aWs y4_aWt z4_aWu a4_aWv  ->
    z4_aWu;}
a4_aWv  ::  PrelBase.Char{-38,W-}
{-# L #-}
a4_aWv =
    case
	ds_d1IS
    of {
    PrelTup.(,,,){-64,w-}{i} x4_aWs y4_aWt z4_aWu a4_aWv  ->
    a4_aWv;}
x4{-r4d,x-}  ::  PrelBase.Char{-38,W-}
{-# L #-}
x4{-r4d,x-} =
    x4_aWs
y4{-r4c,x-}  ::  PrelBase.Char{-38,W-}
{-# L #-}
y4{-r4c,x-} =
    y4_aWt
z4{-r4b,x-}  ::  PrelBase.Char{-38,W-}
{-# L #-}
z4{-r4b,x-} =
    z4_aWu
a4{-r4a,x-}  ::  PrelBase.Char{-38,W-}
{-# L #-}
a4{-r4a,x-} =
    a4_aWv
lit_a1Jt  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1Jt =
    lit_a1zW
ds_d1Jy  ::  (PrelBase.Int{-3g,W-}, PrelBase.Int{-3g,W-})
{-# L #-}
ds_d1Jy =
    case >_a1zV x3_aYi lit_a1zW of {
      PrelBase.True{-5E,w-}{i} ->
	  PrelTup.(,){-62,w-}{i}
	      {_@_ PrelBase.Int{-3g,W-}
	       _@_ PrelBase.Int{-3g,W-}
	       lit_a1zX
	       lit_a1zY};
      PrelBase.False{-58,w-}{i} ->
	  case <=_a1zZ x3_aYi lit_a1Jt of {
	    PrelBase.True{-5E,w-}{i} ->
		PrelTup.(,){-62,w-}{i}
		    {_@_ PrelBase.Int{-3g,W-}
		     _@_ PrelBase.Int{-3g,W-}
		     lit_a1A0
		     lit_a1A1};
	    PrelBase.False{-58,w-}{i} ->
		GHCerr.nonExhaustiveGuardsError{-8l,w-}
		    _@_ (PrelBase.Int{-3g,W-}, PrelBase.Int{-3g,W-})
		    _string_ "ds020.hs:42|";
	  };
    }
x3_aYi  ::  PrelBase.Int{-3g,W-}
{-# L #-}
x3_aYi =
    case ds_d1Jy of { PrelTup.(,){-62,w-}{i} x3_aYi y3_aYj  -> x3_aYi;}
y3_aYj  ::  PrelBase.Int{-3g,W-}
{-# L #-}
y3_aYj =
    case ds_d1Jy of { PrelTup.(,){-62,w-}{i} x3_aYi y3_aYj  -> y3_aYj;}
x3{-r4f,x-}  ::  PrelBase.Int{-3g,W-}
{-# L #-}
x3{-r4f,x-} =
    x3_aYi
y3{-r4e,x-}  ::  PrelBase.Int{-3g,W-}
{-# L #-}
y3{-r4e,x-} =
    y3_aYj
ds_d1JT  ::  _forall_ [taZa] => (taZa, taZa, [taZa])
{-# L #-}
ds_d1JT =
    _/\_ taZa ->
	_letrec_ {
	  ==_a1zQ  ::  PrelBase.Int{-3g,W-}
		       -> PrelBase.Int{-3g,W-}
		       -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  ==_a1zQ =
	      ==_a1zR;
	  ==_a1A6  ::  PrelBase.Int{-3g,W-}
		       -> PrelBase.Int{-3g,W-}
		       -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  ==_a1A6 =
	      ==_a1zR;
	  lit_a1A7  ::  PrelBase.Int{-3g,W-}
	  {-# L #-}
	  lit_a1A7 =
	      lit_a1zT;
	  lit_a1A8  ::  PrelBase.Int{-3g,W-}
	  {-# L #-}
	  lit_a1A8 =
	      lit_a1zS;
	  ds_d1V4  ::  (taZa, taZa, [taZa])
	  {-# L #-}
	  ds_d1V4 =
	      let { ds_d1Xt  ::  [taZa]
		    {-# L #-}
		    ds_d1Xt =
		let {
		  eq4_aZg  ::  PrelBase.Bool{-34,W-}
		  {-# L #-}
		  eq4_aZg =
		      ==_a1A6 lit_a1A7 lit_a1A8 } in
		let {
		  eq4_r3Y  ::  PrelBase.Bool{-34,W-}
		  {-# L #-}
		  eq4_r3Y =
		      eq4_aZg } in
		let {
		  lit_a1VR  ::  PrelBase.Int{-3g,W-}
		  {-# L #-}
		  lit_a1VR =
		      lit_a1zU } in
		let {
		  eq3_aZu  ::  PrelBase.Bool{-34,W-}
		  {-# L #-}
		  eq3_aZu =
		      ==_a1zQ lit_a1zU lit_a1VR } in
		let {
		  eq3_r3X  ::  PrelBase.Bool{-34,W-}
		  {-# L #-}
		  eq3_r3X =
		      eq3_aZu } in
		let {
		  eq2_aZI  ::  PrelBase.Bool{-34,W-}
		  {-# L #-}
		  eq2_aZI =
		      ==_a1zR lit_a1zS lit_a1zT } in
		let {
		  eq2_r3W  ::  PrelBase.Bool{-34,W-}
		  {-# L #-}
		  eq2_r3W =
		      eq2_aZI
		} in 
		  case eq2_r3W of {
		    PrelBase.True{-5E,w-}{i} -> PrelBase.[]{-5i,w-}{i} _@_ taZa;
		    PrelBase.False{-58,w-}{i} ->
			case eq3_r3X of {
			  PrelBase.True{-5E,w-}{i} ->
			      let {
				ds_d1WI  ::  [taZa]
				{-# L #-}
				ds_d1WI =
				    PrelBase.[]{-5i,w-}{i} {_@_ taZa}
			      } in  PrelBase.:{-55,w-}{i} {_@_ taZa x2_aZ2 ds_d1WI};
			  PrelBase.False{-58,w-}{i} ->
			      case eq4_r3Y of {
				PrelBase.True{-5E,w-}{i} ->
				    let {
				      ds_d1X8  ::  [taZa]
				      {-# L #-}
				      ds_d1X8 =
					  PrelBase.[]{-5i,w-}{i} {_@_ taZa}
				    } in  PrelBase.:{-55,w-}{i} {_@_ taZa x2_aZ2 ds_d1X8};
				PrelBase.False{-58,w-}{i} -> PrelBase.[]{-5i,w-}{i} _@_ taZa;
			      };
			};
		  }
	      } in
	      let {
		fail_d1Xu  ::  (taZa, taZa, [taZa])
		{-# L #-}
		fail_d1Xu =
		    GHCerr.irrefutPatError{-8g,w-}
			_@_ (taZa, taZa, [taZa])
			_string_ "ds020.hs:39|(x2 PrelBase.: (xs2 PrelBase.: ys2))"
	      } in 
		case ds_d1Xt of {
		  PrelBase.[]{-5i,w-}{i} -> fail_d1Xu;
		  PrelBase.:{-55,w-}{i} x2_aZ2 ds_d1XH ->
		      case ds_d1XH of {
			PrelBase.[]{-5i,w-}{i} -> fail_d1Xu;
			PrelBase.:{-55,w-}{i} xs2_aZ3 ys2_aZ4 ->
			    PrelTup.(,,){-63,w-}{i}
				{_@_ taZa _@_ taZa _@_ [taZa] x2_aZ2 xs2_aZ3 ys2_aZ4};
		      };
		};
	  x2_aZ2  ::  taZa
	  {-# L #-}
	  x2_aZ2 =
	      case
		  ds_d1V4
	      of {
	      PrelTup.(,,){-63,w-}{i} x2_aZ2 xs2_aZ3 ys2_aZ4  ->
	      x2_aZ2;};
	  xs2_aZ3  ::  taZa
	  {-# L #-}
	  xs2_aZ3 =
	      case
		  ds_d1V4
	      of {
	      PrelTup.(,,){-63,w-}{i} x2_aZ2 xs2_aZ3 ys2_aZ4  ->
	      xs2_aZ3;};
	  ys2_aZ4  ::  [taZa]
	  {-# L #-}
	  ys2_aZ4 =
	      case
		  ds_d1V4
	      of {
	      PrelTup.(,,){-63,w-}{i} x2_aZ2 xs2_aZ3 ys2_aZ4  ->
	      ys2_aZ4;};
	} in 
	  PrelTup.(,,){-63,w-}{i}
	      {_@_ taZa _@_ taZa _@_ [taZa] x2_aZ2 xs2_aZ3 ys2_aZ4}
x2{-r3Z,x-}  ::  _forall_ [taZa] => taZa
{-# L #-}
x2{-r3Z,x-} =
    _/\_ taZa ->
	case
	    ds_d1JT _@_ taZa
	of {
	PrelTup.(,,){-63,w-}{i} ds_d1Z2 ds_d1Z3 ds_d1Z4  ->
	ds_d1Z2;}
xs2{-r4h,x-}  ::  _forall_ [taZa] => taZa
{-# L #-}
xs2{-r4h,x-} =
    _/\_ taZa ->
	case
	    ds_d1JT _@_ taZa
	of {
	PrelTup.(,,){-63,w-}{i} ds_d1Zk ds_d1Zj ds_d1Zl  ->
	ds_d1Zj;}
ys2{-r4g,x-}  ::  _forall_ [taZa] => [taZa]
{-# L #-}
ys2{-r4g,x-} =
    _/\_ taZa ->
	case
	    ds_d1JT _@_ taZa
	of {
	PrelTup.(,,){-63,w-}{i} ds_d1ZB ds_d1ZC ds_d1ZA  ->
	ds_d1ZA;}
ds_d1Ka  ::  _forall_ [ta10j] => (ta10j, ta10j, [ta10j])
{-# L #-}
ds_d1Ka =
    _/\_ ta10j ->
	_letrec_ {
	  ds_d1ZO  ::  (ta10j, ta10j, [ta10j])
	  {-# L #-}
	  ds_d1ZO =
	      let {
		ds_d208  ::  [ta10j]
		{-# L #-}
		ds_d208 =
		    PrelBase.[]{-5i,w-}{i} _@_ ta10j } in
	      let {
		fail_d20l  ::  (ta10j, ta10j, [ta10j])
		{-# L #-}
		fail_d20l =
		    GHCerr.irrefutPatError{-8g,w-}
			_@_ (ta10j, ta10j, [ta10j])
			_string_ "ds020.hs:30|(~x PrelBase.: (~xs PrelBase.: ~ys))"
	      } in 
		case ds_d208 of {
		  PrelBase.[]{-5i,w-}{i} -> fail_d20l;
		  PrelBase.:{-55,w-}{i} x_a10c ds_d20y ->
		      case ds_d20y of {
			PrelBase.[]{-5i,w-}{i} -> fail_d20l;
			PrelBase.:{-55,w-}{i} xs_a10d ys_a10e ->
			    let {
			      ys_a10e  ::  [ta10j]
			      {-# L #-}
			      ys_a10e =
				  ys_a10e } in
			    let {
			      xs_a10d  ::  ta10j
			      {-# L #-}
			      xs_a10d =
				  xs_a10d } in
			    let {
			      x_a10c  ::  ta10j
			      {-# L #-}
			      x_a10c =
				  x_a10c
			    } in 
			      PrelTup.(,,){-63,w-}{i}
				  {_@_ ta10j _@_ ta10j _@_ [ta10j] x_a10c xs_a10d ys_a10e};
		      };
		};
	  x_a10c  ::  ta10j
	  {-# L #-}
	  x_a10c =
	      case
		  ds_d1ZO
	      of {
	      PrelTup.(,,){-63,w-}{i} x_a10c xs_a10d ys_a10e  ->
	      x_a10c;};
	  xs_a10d  ::  ta10j
	  {-# L #-}
	  xs_a10d =
	      case
		  ds_d1ZO
	      of {
	      PrelTup.(,,){-63,w-}{i} x_a10c xs_a10d ys_a10e  ->
	      xs_a10d;};
	  ys_a10e  ::  [ta10j]
	  {-# L #-}
	  ys_a10e =
	      case
		  ds_d1ZO
	      of {
	      PrelTup.(,,){-63,w-}{i} x_a10c xs_a10d ys_a10e  ->
	      ys_a10e;};
	} in 
	  PrelTup.(,,){-63,w-}{i}
	      {_@_ ta10j _@_ ta10j _@_ [ta10j] x_a10c xs_a10d ys_a10e}
x{-r4k,x-}  ::  _forall_ [ta10j] => ta10j
{-# L #-}
x{-r4k,x-} =
    _/\_ ta10j ->
	case
	    ds_d1Ka _@_ ta10j
	of {
	PrelTup.(,,){-63,w-}{i} ds_d222 ds_d223 ds_d224  ->
	ds_d222;}
xs{-r4j,x-}  ::  _forall_ [ta10j] => ta10j
{-# L #-}
xs{-r4j,x-} =
    _/\_ ta10j ->
	case
	    ds_d1Ka _@_ ta10j
	of {
	PrelTup.(,,){-63,w-}{i} ds_d22k ds_d22j ds_d22l  ->
	ds_d22j;}
ys{-r4i,x-}  ::  _forall_ [ta10j] => [ta10j]
{-# L #-}
ys{-r4i,x-} =
    _/\_ ta10j ->
	case
	    ds_d1Ka _@_ ta10j
	of {
	PrelTup.(,,){-63,w-}{i} ds_d22B ds_d22C ds_d22A  ->
	ds_d22A;}
ds_d1Kr  ::  _forall_ [ta10z] => (ta10z, ta10z, [ta10z])
{-# L #-}
ds_d1Kr =
    _/\_ ta10z ->
	_letrec_ {
	  ds_d22O  ::  (ta10z, ta10z, [ta10z])
	  {-# L #-}
	  ds_d22O =
	      let {
		ds_d238  ::  [ta10z]
		{-# L #-}
		ds_d238 =
		    PrelBase.[]{-5i,w-}{i} _@_ ta10z } in
	      let {
		fail_d23l  ::  (ta10z, ta10z, [ta10z])
		{-# L #-}
		fail_d23l =
		    GHCerr.irrefutPatError{-8g,w-}
			_@_ (ta10z, ta10z, [ta10z])
			_string_ "ds020.hs:29|(x1 PrelBase.: (xs1 PrelBase.: ys1))"
	      } in 
		case ds_d238 of {
		  PrelBase.[]{-5i,w-}{i} -> fail_d23l;
		  PrelBase.:{-55,w-}{i} x1_a10s ds_d23y ->
		      case ds_d23y of {
			PrelBase.[]{-5i,w-}{i} -> fail_d23l;
			PrelBase.:{-55,w-}{i} xs1_a10t ys1_a10u ->
			    PrelTup.(,,){-63,w-}{i}
				{_@_ ta10z _@_ ta10z _@_ [ta10z] x1_a10s xs1_a10t ys1_a10u};
		      };
		};
	  x1_a10s  ::  ta10z
	  {-# L #-}
	  x1_a10s =
	      case
		  ds_d22O
	      of {
	      PrelTup.(,,){-63,w-}{i} x1_a10s xs1_a10t ys1_a10u  ->
	      x1_a10s;};
	  xs1_a10t  ::  ta10z
	  {-# L #-}
	  xs1_a10t =
	      case
		  ds_d22O
	      of {
	      PrelTup.(,,){-63,w-}{i} x1_a10s xs1_a10t ys1_a10u  ->
	      xs1_a10t;};
	  ys1_a10u  ::  [ta10z]
	  {-# L #-}
	  ys1_a10u =
	      case
		  ds_d22O
	      of {
	      PrelTup.(,,){-63,w-}{i} x1_a10s xs1_a10t ys1_a10u  ->
	      ys1_a10u;};
	} in 
	  PrelTup.(,,){-63,w-}{i}
	      {_@_ ta10z _@_ ta10z _@_ [ta10z] x1_a10s xs1_a10t ys1_a10u}
x1{-r4n,x-}  ::  _forall_ [ta10z] => ta10z
{-# L #-}
x1{-r4n,x-} =
    _/\_ ta10z ->
	case
	    ds_d1Kr _@_ ta10z
	of {
	PrelTup.(,,){-63,w-}{i} ds_d24T ds_d24U ds_d24V  ->
	ds_d24T;}
xs1{-r4m,x-}  ::  _forall_ [ta10z] => ta10z
{-# L #-}
xs1{-r4m,x-} =
    _/\_ ta10z ->
	case
	    ds_d1Kr _@_ ta10z
	of {
	PrelTup.(,,){-63,w-}{i} ds_d25b ds_d25a ds_d25c  ->
	ds_d25a;}
ys1{-r4l,x-}  ::  _forall_ [ta10z] => [ta10z]
{-# L #-}
ys1{-r4l,x-} =
    _/\_ ta10z ->
	case
	    ds_d1Kr _@_ ta10z
	of {
	PrelTup.(,,){-63,w-}{i} ds_d25s ds_d25t ds_d25r  ->
	ds_d25r;}
ds_d1KI  ::  PrelBase.(){-40,W-}
{-# L #-}
ds_d1KI =
    let { ds_d26d  ::  ([GHC.Void{-3T,W-}], [GHC.Void{-3T,W-}], [GHC.Void{-3T,W-}])
	  {-# L #-}
	  ds_d26d =
      let {
	ds_d25N  ::  [GHC.Void{-3T,W-}]
	{-# L #-}
	ds_d25N =
	    PrelBase.[]{-5i,w-}{i} _@_ GHC.Void{-3T,W-} } in
      let {
	ds_d25R  ::  [GHC.Void{-3T,W-}]
	{-# L #-}
	ds_d25R =
	    PrelBase.[]{-5i,w-}{i} _@_ GHC.Void{-3T,W-} } in
      let {
	ds_d25V  ::  [GHC.Void{-3T,W-}]
	{-# L #-}
	ds_d25V =
	    PrelBase.[]{-5i,w-}{i} _@_ GHC.Void{-3T,W-}
      } in 
	PrelTup.(,,){-63,w-}{i}
	    {_@_ [GHC.Void{-3T,W-}]
	     _@_ [GHC.Void{-3T,W-}]
	     _@_ [GHC.Void{-3T,W-}]
	     ds_d25N
	     ds_d25R
	     ds_d25V}
    } in
    case
	ds_d26d
    of {
    PrelTup.(,,){-63,w-}{i} ds_d26D ds_d26E ds_d26C  ->
    let { ds_d274  ::  PrelBase.(){-40,W-}
	  {-# L #-}
	  ds_d274 =
      let {
	fail_d26F  ::  PrelBase.(){-40,W-}
	{-# L #-}
	fail_d26F =
	    GHCerr.irrefutPatError{-8g,w-}
		_@_ PrelBase.(){-40,W-} _string_ "ds020.hs:27|PrelBase.[]"
      } in 
	case ds_d26C of {
	  PrelBase.:{-55,w-}{i} ds_d26M ds_d26N -> fail_d26F;
	  PrelBase.[]{-5i,w-}{i} -> PrelBase.(){-60,w-}{i} {};
	}
    } in
    let { ds_d27u  ::  PrelBase.(){-40,W-}
	  {-# L #-}
	  ds_d27u =
      let {
	fail_d275  ::  PrelBase.(){-40,W-}
	{-# L #-}
	fail_d275 =
	    GHCerr.irrefutPatError{-8g,w-}
		_@_ PrelBase.(){-40,W-} _string_ "ds020.hs:27|PrelBase.[]"
      } in 
	case ds_d26E of {
	  PrelBase.:{-55,w-}{i} ds_d27c ds_d27d -> fail_d275;
	  PrelBase.[]{-5i,w-}{i} -> PrelBase.(){-60,w-}{i} {};
	}
    } in
    let { ds_d2ql  ::  PrelBase.(){-40,W-}
	  {-# L #-}
	  ds_d2ql =
      let {
	fail_d27v  ::  PrelBase.(){-40,W-}
	{-# L #-}
	fail_d27v =
	    GHCerr.irrefutPatError{-8g,w-}
		_@_ PrelBase.(){-40,W-} _string_ "ds020.hs:27|PrelBase.[]"
      } in 
	case ds_d26D of {
	  PrelBase.:{-55,w-}{i} ds_d27C ds_d27D -> fail_d27v;
	  PrelBase.[]{-5i,w-}{i} -> PrelBase.(){-60,w-}{i} {};
	}
    } in
    PrelBase.(){-60,w-}{i} {};}
ds_d1KN  ::  PrelBase.(){-40,W-}
{-# L #-}
ds_d1KN =
    let { ds_d28A  ::  ([GHC.Void{-3T,W-}], [GHC.Void{-3T,W-}], [GHC.Void{-3T,W-}])
	  {-# L #-}
	  ds_d28A =
      let {
	ds_d283  ::  [GHC.Void{-3T,W-}]
	{-# L #-}
	ds_d283 =
	    PrelBase.[]{-5i,w-}{i} _@_ GHC.Void{-3T,W-} } in
      let {
	ds_d287  ::  [GHC.Void{-3T,W-}]
	{-# L #-}
	ds_d287 =
	    PrelBase.[]{-5i,w-}{i} _@_ GHC.Void{-3T,W-} } in
      let {
	ds_d28b  ::  [GHC.Void{-3T,W-}]
	{-# L #-}
	ds_d28b =
	    PrelBase.[]{-5i,w-}{i} _@_ GHC.Void{-3T,W-}
      } in 
	PrelTup.(,,){-63,w-}{i}
	    {_@_ [GHC.Void{-3T,W-}]
	     _@_ [GHC.Void{-3T,W-}]
	     _@_ [GHC.Void{-3T,W-}]
	     ds_d283
	     ds_d287
	     ds_d28b}
    } in
    let {
      fail_d28B  ::  PrelBase.(){-40,W-}
      {-# L #-}
      fail_d28B =
	  GHCerr.irrefutPatError{-8g,w-}
	      _@_ PrelBase.(){-40,W-}
	      _string_ "ds020.hs:26|(PrelBase.[], PrelBase.[], PrelBase.[])"
    } in 
      case
	  ds_d28A
      of {
      PrelTup.(,,){-63,w-}{i} ds_d28K ds_d28L ds_d28M  ->
      case ds_d28K of {
	PrelBase.:{-55,w-}{i} ds_d28T ds_d28U -> fail_d28B;
	PrelBase.[]{-5i,w-}{i} ->
	    case ds_d28L of {
	      PrelBase.:{-55,w-}{i} ds_d297 ds_d298 -> fail_d28B;
	      PrelBase.[]{-5i,w-}{i} ->
		  case ds_d28M of {
		    PrelBase.:{-55,w-}{i} ds_d29l ds_d29m -> fail_d28B;
		    PrelBase.[]{-5i,w-}{i} -> PrelBase.(){-60,w-}{i} {};
		  };
	    };
      };}
g{-r4o,x-}  ::  _forall_ [ta11C ta11F] => [ta11C] -> [ta11F]
{-# L #-}
g{-r4o,x-} =
    _/\_ ta11C ta11F ->
	_letrec_ {
	  g_a11w  ::  [ta11C] -> [ta11F]
	  {-# L #-}
	  g_a11w =
	      \ ds_d2a5  ::  [ta11C]
		{-# L #-}
		ds_d2a5 ->
		  let { ds_d2qm  ::  PrelBase.(){-40,W-}
			{-# L #-}
			ds_d2qm =
		    let { ds_d2qn  ::  PrelBase.(){-40,W-}
			  {-# L #-}
			  ds_d2qn =
		      let { ds_d2qo  ::  PrelBase.(){-40,W-}
			    {-# L #-}
			    ds_d2qo =
			let { ds_d2qp  ::  PrelBase.(){-40,W-}
			      {-# L #-}
			      ds_d2qp =
			  let {
			    fail_d2a6  ::  PrelBase.(){-40,W-}
			    {-# L #-}
			    fail_d2a6 =
				GHCerr.irrefutPatError{-8g,w-}
				    _@_ PrelBase.(){-40,W-} _string_ "ds020.hs:22|PrelBase.[]"
			  } in 
			    case ds_d2a5 of {
			      PrelBase.:{-55,w-}{i} ds_d2ad ds_d2ae -> fail_d2a6;
			      PrelBase.[]{-5i,w-}{i} -> PrelBase.(){-60,w-}{i} {};
			    }
			} in
			PrelBase.(){-60,w-}{i} {}
		      } in
		      PrelBase.(){-60,w-}{i} {}
		    } in
		    PrelBase.(){-60,w-}{i} {}
		  } in
		  PrelBase.[]{-5i,w-}{i} _@_ ta11F;
	} in  g_a11w
f{-r4p,x-}  ::  _forall_ [ta11W ta11Y] => [ta11W] -> [ta11Y]
{-# L #-}
f{-r4p,x-} =
    _/\_ ta11W ta11Y ->
	_letrec_ {
	  f_a11H  ::  [ta11W] -> [ta11Y]
	  {-# L #-}
	  f_a11H =
	      \ x_r3R  ::  [ta11W]
		{-# L #-}
		x_r3R ->
		  let { x_r3R  ::  [ta11W]
			{-# L #-}
			x_r3R =
		    let {
		      fail_d2aQ  ::  [ta11W]
		      {-# L #-}
		      fail_d2aQ =
			  GHCerr.irrefutPatError{-8g,w-}
			      _@_ [ta11W] _string_ "ds020.hs:19|(x@PrelBase.[])"
		    } in 
		      case x_r3R of {
			PrelBase.:{-55,w-}{i} ds_d2aX ds_d2aY -> fail_d2aQ;
			PrelBase.[]{-5i,w-}{i} -> x_r3R;
		      }
		  } in
		  PrelBase.[]{-5i,w-}{i} _@_ ta11Y;
	} in  f_a11H
d{-r4q,x-}  ::  _forall_
		[ta125 ta12z]
		=>
		{PrelBase.Num{-2c,p-} ta125}
		-> {PrelBase.Num{-2c,p-} ta12z}
		-> {PrelBase.Ord{-2d,p-} ta125}
		-> ta125
		-> ta12z
{-# L #-}
d{-r4q,x-} =
    _/\_ ta125 ta12z -> \ d.Num_a12C  ::  {PrelBase.Num{-2c,p-} ta125}
			  {-# L #-}
			  d.Num_a12C d.Num_a12H  ::  {PrelBase.Num{-2c,p-} ta12z}
				     {-# L #-}
				     d.Num_a12H d.Ord_a12M  ::  {PrelBase.Ord{-2d,p-} ta125}
						{-# L #-}
						d.Ord_a12M ->
	_letrec_ {
	  d.Eq_a12E  ::  {PrelBase.Eq{-23,p-} ta125}
	  {-# L #-}
	  d.Eq_a12E =
	      PrelBase.scsel_OrdPrelBaseEq{-a2bU,p-} _@_ ta125 d.Ord_a12M;
	  fromInt_a2bq  ::  PrelBase.Int{-3g,W-} -> ta125
	  {-# L #-}
	  fromInt_a2bq =
	      PrelBase.fromInt{-8R,p-} _@_ ta125 d.Num_a12C;
	  lit_a2br  ::  ta125
	  {-# L #-}
	  lit_a2br =
	      let {
		ds_d2e5  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2e5 =
		    PrelBase.I#{-5b,w-}{i} 11
	      } in  fromInt_a2bq ds_d2e5;
	  ==_a2bs  ::  ta125 -> ta125 -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  ==_a2bs =
	      PrelBase.=={-8Y,p-} _@_ ta125 d.Eq_a12E;
	  fromInt_a2bt  ::  PrelBase.Int{-3g,W-} -> ta12z
	  {-# L #-}
	  fromInt_a2bt =
	      PrelBase.fromInt{-8R,p-} _@_ ta12z d.Num_a12H;
	  lit_a2bu  ::  ta12z
	  {-# L #-}
	  lit_a2bu =
	      let {
		ds_d2ez  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2ez =
		    PrelBase.I#{-5b,w-}{i} 4
	      } in  fromInt_a2bt ds_d2ez;
	  fromInt_a2bv  ::  PrelBase.Int{-3g,W-} -> ta125
	  {-# L #-}
	  fromInt_a2bv =
	      fromInt_a2bq;
	  lit_a2bw  ::  ta125
	  {-# L #-}
	  lit_a2bw =
	      let {
		ds_d2eO  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2eO =
		    PrelBase.I#{-5b,w-}{i} 12
	      } in  fromInt_a2bv ds_d2eO;
	  ==_a2bx  ::  ta125 -> ta125 -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  ==_a2bx =
	      ==_a2bs;
	  fromInt_a2by  ::  PrelBase.Int{-3g,W-} -> ta12z
	  {-# L #-}
	  fromInt_a2by =
	      fromInt_a2bt;
	  lit_a2bz  ::  ta12z
	  {-# L #-}
	  lit_a2bz =
	      let {
		ds_d2f4  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2f4 =
		    PrelBase.I#{-5b,w-}{i} 3
	      } in  fromInt_a2by ds_d2f4;
	  fromInt_a2bA  ::  PrelBase.Int{-3g,W-} -> ta125
	  {-# L #-}
	  fromInt_a2bA =
	      fromInt_a2bq;
	  lit_a2bB  ::  ta125
	  {-# L #-}
	  lit_a2bB =
	      let {
		ds_d2fj  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2fj =
		    PrelBase.I#{-5b,w-}{i} 4
	      } in  fromInt_a2bA ds_d2fj;
	  >=_a2bC  ::  ta125 -> ta125 -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  >=_a2bC =
	      PrelBase.>={-8Z,p-} _@_ ta125 d.Ord_a12M;
	  d.Num_a12O  ::  {PrelBase.Num{-2c,p-} ta125}
	  {-# L #-}
	  d.Num_a12O =
	      d.Num_a12C;
	  -_a2bD  ::  ta125 -> ta125 -> ta125
	  {-# L #-}
	  -_a2bD =
	      PrelBase.-{-817,p-} _@_ ta125 d.Num_a12O;
	  fromInt_a2bE  ::  PrelBase.Int{-3g,W-} -> ta12z
	  {-# L #-}
	  fromInt_a2bE =
	      fromInt_a2bt;
	  lit_a2bF  ::  ta12z
	  {-# L #-}
	  lit_a2bF =
	      let {
		ds_d2fP  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2fP =
		    PrelBase.I#{-5b,w-}{i} 2
	      } in  fromInt_a2bE ds_d2fP;
	  fromInt_a2bG  ::  PrelBase.Int{-3g,W-} -> ta125
	  {-# L #-}
	  fromInt_a2bG =
	      fromInt_a2bq;
	  lit_a2bH  ::  ta125
	  {-# L #-}
	  lit_a2bH =
	      let {
		ds_d2g4  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2g4 =
		    PrelBase.I#{-5b,w-}{i} 43
	      } in  fromInt_a2bG ds_d2g4;
	  >=_a2bI  ::  ta125 -> ta125 -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  >=_a2bI =
	      >=_a2bC;
	  -_a2bJ  ::  ta125 -> ta125 -> ta125
	  {-# L #-}
	  -_a2bJ =
	      -_a2bD;
	  fromInt_a2bK  ::  PrelBase.Int{-3g,W-} -> ta12z
	  {-# L #-}
	  fromInt_a2bK =
	      fromInt_a2bt;
	  lit_a2bL  ::  ta12z
	  {-# L #-}
	  lit_a2bL =
	      let {
		ds_d2gl  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2gl =
		    PrelBase.I#{-5b,w-}{i} 1
	      } in  fromInt_a2bK ds_d2gl;
	  fromInt_a2bM  ::  PrelBase.Int{-3g,W-} -> ta125
	  {-# L #-}
	  fromInt_a2bM =
	      fromInt_a2bq;
	  lit_a2bN  ::  ta125
	  {-# L #-}
	  lit_a2bN =
	      let {
		ds_d2gA  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2gA =
		    PrelBase.I#{-5b,w-}{i} 999
	      } in  fromInt_a2bM ds_d2gA;
	  >=_a2bO  ::  ta125 -> ta125 -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  >=_a2bO =
	      >=_a2bC;
	  -_a2bP  ::  ta125 -> ta125 -> ta125
	  {-# L #-}
	  -_a2bP =
	      -_a2bD;
	  fromInt_a2bQ  ::  PrelBase.Int{-3g,W-} -> ta12z
	  {-# L #-}
	  fromInt_a2bQ =
	      fromInt_a2bt;
	  lit_a2bR  ::  ta12z
	  {-# L #-}
	  lit_a2bR =
	      let {
		ds_d2gR  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2gR =
		    PrelBase.I#{-5b,w-}{i} 0
	      } in  fromInt_a2bQ ds_d2gR;
	  d_a120  ::  ta125 -> ta12z
	  {-# L #-}
	  d_a120 =
	      \ ds_d2hp  ::  ta125
		{-# L #-}
		ds_d2hp ->
		  let { fail_d2ig  ::  ta12z
			{-# L #-}
			fail_d2ig =
		    let { ds_d2h9  ::  PrelBase.(){-40,W-}
			  {-# L #-}
			  ds_d2h9 =
		      let {
			fail_d2hC  ::  PrelBase.(){-40,W-}
			{-# L #-}
			fail_d2hC =
			    GHCerr.irrefutPatError{-8g,w-}
				_@_ PrelBase.(){-40,W-} _string_ "ds020.hs:13|(n+4)"
		      } in 
			case
			    (\ ds_d2hw  ::  ta125
			       {-# L #-}
			       ds_d2hw ->
				 >=_a2bC ds_d2hw lit_a2bB)
				ds_d2hp
			of {
			  PrelBase.True{-5E,w-}{i} ->
			      let {
				n_r3L  ::  ta125
				{-# L #-}
				n_r3L =
				    (\ ds_d2hV  ::  ta125
				       {-# L #-}
				       ds_d2hV ->
					 -_a2bD ds_d2hV lit_a2bB)
					ds_d2hp
			      } in  PrelBase.(){-60,w-}{i} {};
			  PrelBase.False{-58,w-}{i} -> fail_d2hC;
			}
		    } in
		    lit_a2bF
		  } in
		  let {
		    fail_d2iA  ::  ta12z
		    {-# L #-}
		    fail_d2iA =
			case ==_a2bx lit_a2bw ds_d2hp of {
			  PrelBase.True{-5E,w-}{i} -> lit_a2bz;
			  PrelBase.False{-58,w-}{i} -> fail_d2ig;
			}
		  } in 
		    case ==_a2bs lit_a2br ds_d2hp of {
		      PrelBase.True{-5E,w-}{i} -> lit_a2bu;
		      PrelBase.False{-58,w-}{i} -> fail_d2iA;
		    };
	} in  d_a120
c{-r4r,x-}  ::  _forall_
		[ta13o ta13b ta13i ta13q]
		=>
		{PrelNum.Fractional{-26,p-} ta13i}
		-> {PrelBase.Num{-2c,p-} ta13b}
		-> ta13q
		-> ta13o
		-> ta13b
		-> ta13i
		-> ta13q
{-# L #-}
c{-r4r,x-} =
    _/\_ ta13o ta13b ta13i ta13q -> \ d.Fractional_a13y  ::  {PrelNum.Fractional{-26,p-} ta13i}
				      {-# L #-}
				      d.Fractional_a13y d.Num_a13t  ::  {PrelBase.Num{-2c,p-} ta13b}
							{-# L #-}
							d.Num_a13t ->
	_letrec_ {
	  d.Eq_a13v  ::  {PrelBase.Eq{-23,p-} ta13b}
	  {-# L #-}
	  d.Eq_a13v =
	      PrelBase.scsel_NumPrelBaseEq{-a2jg,p-} _@_ ta13b d.Num_a13t;
	  d.Num_a155  ::  {PrelBase.Num{-2c,p-} ta13i}
	  {-# L #-}
	  d.Num_a155 =
	      PrelNum.scsel_FractionalPrelBaseNum{-a2jZ,p-}
		  _@_ ta13i d.Fractional_a13y;
	  d.Eq_a13A  ::  {PrelBase.Eq{-23,p-} ta13i}
	  {-# L #-}
	  d.Eq_a13A =
	      PrelBase.scsel_NumPrelBaseEq{-a2jg,p-} _@_ ta13i d.Num_a155;
	  fromInt_a2j8  ::  PrelBase.Int{-3g,W-} -> ta13b
	  {-# L #-}
	  fromInt_a2j8 =
	      PrelBase.fromInt{-8R,p-} _@_ ta13b d.Num_a13t;
	  lit_a2j9  ::  ta13b
	  {-# L #-}
	  lit_a2j9 =
	      let {
		ds_d2km  ::  PrelBase.Int{-3g,W-}
		{-# L #-}
		ds_d2km =
		    PrelBase.I#{-5b,w-}{i} 11111
	      } in  fromInt_a2j8 ds_d2km;
	  ==_a2ja  ::  ta13b -> ta13b -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  ==_a2ja =
	      PrelBase.=={-8Y,p-} _@_ ta13b d.Eq_a13v;
	  fromRational_a2jb  ::  PrelNum.Rational{-3r,p-} -> ta13i
	  {-# L #-}
	  fromRational_a2jb =
	      PrelNum.fromRational{-8T,p-} _@_ ta13i d.Fractional_a13y;
	  lit_a2jc  ::  ta13i
	  {-# L #-}
	  lit_a2jc =
	      fromRational_a2jb _rational_  62831853 20000000;
	  ==_a2jd  ::  ta13i -> ta13i -> PrelBase.Bool{-34,W-}
	  {-# L #-}
	  ==_a2jd =
	      PrelBase.=={-8Y,p-} _@_ ta13i d.Eq_a13A;
	  c_a12W  ::  ta13q -> ta13o -> ta13b -> ta13i -> ta13q
	  {-# L #-}
	  c_a12W =
	      \ x_r3H  ::  ta13q
		{-# L #-}
		x_r3H ds_d2lx  ::  ta13o
		      {-# L #-}
		      ds_d2lx ds_d2ly  ::  ta13b
			      {-# L #-}
			      ds_d2ly ds_d2lu  ::  ta13i
				      {-# L #-}
				      ds_d2lu ->
		  let { ds_d2m4  ::  PrelBase.(){-40,W-}
			{-# L #-}
			ds_d2m4 =
		    let {
		      fail_d2lz  ::  PrelBase.(){-40,W-}
		      {-# L #-}
		      fail_d2lz =
			  GHCerr.irrefutPatError{-8g,w-}
			      _@_ PrelBase.(){-40,W-} _string_ "ds020.hs:11|3.1415926500000002"
		    } in 
		      case ==_a2jd lit_a2jc ds_d2lu of {
			PrelBase.True{-5E,w-}{i} -> PrelBase.(){-60,w-}{i} {};
			PrelBase.False{-58,w-}{i} -> fail_d2lz;
		      }
		  } in
		  let { ds_d2mh  ::  PrelBase.(){-40,W-}
			{-# L #-}
			ds_d2mh =
		    let {
		      fail_d2m5  ::  PrelBase.(){-40,W-}
		      {-# L #-}
		      fail_d2m5 =
			  GHCerr.irrefutPatError{-8g,w-}
			      _@_ PrelBase.(){-40,W-} _string_ "ds020.hs:11|11111"
		    } in 
		      case ==_a2ja lit_a2j9 ds_d2ly of {
			PrelBase.True{-5E,w-}{i} -> PrelBase.(){-60,w-}{i} {};
			PrelBase.False{-58,w-}{i} -> fail_d2m5;
		      }
		  } in
		  let {
		    ds_d2lb  ::  PrelBase.(){-40,W-}
		    {-# L #-}
		    ds_d2lb =
			PrelBase.(){-60,w-}{i} {}
		  } in  x_r3H;
	} in  c_a12W
b{-r4s,x-}  ::  _forall_ [ta140 ta147] => [ta140] -> [ta147]
{-# L #-}
b{-r4s,x-} =
    _/\_ ta140 ta147 ->
	_letrec_ {
	  b_a13E  ::  [ta140] -> [ta147]
	  {-# L #-}
	  b_a13E =
	      \ ds_d2mU  ::  [ta140]
		{-# L #-}
		ds_d2mU ->
		  let { ds_d2nB  ::  (ta140, ta140, [ta140])
			{-# L #-}
			ds_d2nB =
		    let {
		      fail_d2mV  ::  (ta140, ta140, [ta140])
		      {-# L #-}
		      fail_d2mV =
			  GHCerr.irrefutPatError{-8g,w-}
			      _@_ (ta140, ta140, [ta140])
			      _string_ "ds020.hs:8|(x PrelBase.: (xs PrelBase.: ys))"
		    } in 
		      case ds_d2mU of {
			PrelBase.[]{-5i,w-}{i} -> fail_d2mV;
			PrelBase.:{-55,w-}{i} x_r3z ds_d2n8 ->
			    case ds_d2n8 of {
			      PrelBase.[]{-5i,w-}{i} -> fail_d2mV;
			      PrelBase.:{-55,w-}{i} xs_r3A ys_r3B ->
				  PrelTup.(,,){-63,w-}{i}
				      {_@_ ta140 _@_ ta140 _@_ [ta140] x_r3z xs_r3A ys_r3B};
			    };
		      }
		  } in
		  let {
		    x_r3z  ::  ta140
		    {-# L #-}
		    x_r3z =
			case ds_d2nB of { PrelTup.(,,){-63,w-}{i} x_r3z xs_r3A ys_r3B  ->
			x_r3z;} } in
		  let {
		    xs_r3A  ::  ta140
		    {-# L #-}
		    xs_r3A =
			case ds_d2nB of { PrelTup.(,,){-63,w-}{i} x_r3z xs_r3A ys_r3B  ->
			xs_r3A;} } in
		  let {
		    ys_r3B  ::  [ta140]
		    {-# L #-}
		    ys_r3B =
			case ds_d2nB of { PrelTup.(,,){-63,w-}{i} x_r3z xs_r3A ys_r3B  ->
			ys_r3B;}
		  } in  PrelBase.[]{-5i,w-}{i} _@_ ta147;
	} in  b_a13E
a{-r4t,x-}  ::  _forall_
		[ta14y ta14B ta14E ta14G]
		=>
		([ta14y], [ta14B], [ta14E]) -> [ta14G]
{-# L #-}
a{-r4t,x-} =
    _/\_ ta14y ta14B ta14E ta14G ->
	_letrec_ {
	  a_a149  ::  ([ta14y], [ta14B], [ta14E]) -> [ta14G]
	  {-# L #-}
	  a_a149 =
	      \ ds_d2oz  ::  ([ta14y], [ta14B], [ta14E])
		{-# L #-}
		ds_d2oz ->
		  let { ds_d2qq  ::  PrelBase.(){-40,W-}
			{-# L #-}
			ds_d2qq =
		    let {
		      fail_d2oA  ::  PrelBase.(){-40,W-}
		      {-# L #-}
		      fail_d2oA =
			  GHCerr.irrefutPatError{-8g,w-}
			      _@_ PrelBase.(){-40,W-}
			      _string_ "ds020.hs:5|(PrelBase.[], PrelBase.[], PrelBase.[])"
		    } in 
		      case
			  ds_d2oz
		      of {
		      PrelTup.(,,){-63,w-}{i} ds_d2oJ ds_d2oK ds_d2oL  ->
		      case ds_d2oJ of {
			PrelBase.:{-55,w-}{i} ds_d2oS ds_d2oT -> fail_d2oA;
			PrelBase.[]{-5i,w-}{i} ->
			    case ds_d2oK of {
			      PrelBase.:{-55,w-}{i} ds_d2p6 ds_d2p7 -> fail_d2oA;
			      PrelBase.[]{-5i,w-}{i} ->
				  case ds_d2oL of {
				    PrelBase.:{-55,w-}{i} ds_d2pk ds_d2pl -> fail_d2oA;
				    PrelBase.[]{-5i,w-}{i} -> PrelBase.(){-60,w-}{i} {};
				  };
			    };
		      };}
		  } in
		  PrelBase.[]{-5i,w-}{i} _@_ ta14G;
	} in  a_a149
d.Eq_a14Y  ::  {PrelBase.Eq{-23,p-} PrelBase.Int{-3g,W-}}
{-# L #-}
d.Eq_a14Y =
    PrelBase.$d8{-rq4,p-}
==_a1zR  ::  PrelBase.Int{-3g,W-}
	     -> PrelBase.Int{-3g,W-}
	     -> PrelBase.Bool{-34,W-}
{-# L #-}
==_a1zR =
    PrelBase.=={-8Y,p-} _@_ PrelBase.Int{-3g,W-} d.Eq_a14Y
lit_a1zS  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1zS =
    PrelBase.I#{-5b,w-}{i} 2
lit_a1zT  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1zT =
    PrelBase.I#{-5b,w-}{i} 4
lit_a1zU  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1zU =
    PrelBase.I#{-5b,w-}{i} 3
d.Ord_a151  ::  {PrelBase.Ord{-2d,p-} PrelBase.Int{-3g,W-}}
{-# L #-}
d.Ord_a151 =
    PrelBase.$d7{-rq3,p-}
>_a1zV  ::  PrelBase.Int{-3g,W-}
	    -> PrelBase.Int{-3g,W-}
	    -> PrelBase.Bool{-34,W-}
{-# L #-}
>_a1zV =
    PrelBase.>{-ruE,p-} _@_ PrelBase.Int{-3g,W-} d.Ord_a151
lit_a1zW  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1zW =
    lit_a1zU
lit_a1zX  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1zX =
    lit_a1zT
lit_a1zY  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1zY =
    PrelBase.I#{-5b,w-}{i} 5
d.Ord_a154  ::  {PrelBase.Ord{-2d,p-} PrelBase.Int{-3g,W-}}
{-# L #-}
d.Ord_a154 =
    d.Ord_a151
<=_a1zZ  ::  PrelBase.Int{-3g,W-}
	     -> PrelBase.Int{-3g,W-}
	     -> PrelBase.Bool{-34,W-}
{-# L #-}
<=_a1zZ =
    PrelBase.<={-ruD,p-} _@_ PrelBase.Int{-3g,W-} d.Ord_a154
lit_a1A0  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1A0 =
    lit_a1zS
lit_a1A1  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1A1 =
    lit_a1zU
==_a1A2  ::  PrelBase.Int{-3g,W-}
	     -> PrelBase.Int{-3g,W-}
	     -> PrelBase.Bool{-34,W-}
{-# L #-}
==_a1A2 =
    ==_a1zR
lit_a1A3  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1A3 =
    lit_a1zS
lit_a1A4  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1A4 =
    lit_a1zT
lit_a1A5  ::  PrelBase.Int{-3g,W-}
{-# L #-}
lit_a1A5 =
    lit_a1zU
end Rec }
