
==================== Typechecked ====================
Print002.MkFoo1{-ro-} =
    _/\_ a_tr4H
	 b_tr4I
	 c_tr4J -> \ x1_B1
		     x2_B2 ->
	Print002.MkFoo1{-ro-} {_@_ a_tr4H
			       _@_ b_tr4I
			       _@_ c_tr4J
			       x1_B1
			       x2_B2}
Print002.:##{-rn-} =
    _/\_ a_tr4H
	 b_tr4I
	 c_tr4J -> \ x1_B1
		     x2_B2 ->
	Print002.:##{-rn-} {_@_ a_tr4H _@_ b_tr4I _@_ c_tr4J x1_B1 x2_B2}
Print002.MkFoo3{-rq-} =
    _/\_ a_tr4H
	 b_tr4I
	 c_tr4J -> \ x1_B1
		     x2_B2 ->
	Print002.MkFoo3{-rq-} {_@_ a_tr4H
			       _@_ b_tr4I
			       _@_ c_tr4J
			       x1_B1
			       x2_B2}
Print002.:***{-rs-} =
    _/\_ a_tr4H
	 b_tr4I
	 c_tr4J -> \ x1_B1
		     x2_B2 ->
	Print002.:***{-rs-} {_@_ a_tr4H _@_ b_tr4I _@_ c_tr4J x1_B1 x2_B2}
AbsBinds [aQU] [d.Bar_aQY] [([aQU], Print002.f3d{-r4L-}, f3d_a13B)]
    /////_a13C = Print002./////{-r4t-} aQU d.Bar_aQY
    f3d_a13B x_r4v y_r4w = x_r4v /////_a13C y_r4w
AbsBinds [aRf] [d.Bar_aRj] [([aRf], Print002.f3c{-r4M-}, f3c_a13H)]
    /////_a13I = Print002./////{-r4t-} aRf d.Bar_aRj
    f3c_a13H x_r4r y_r4s = /////_a13I x_r4r y_r4s
AbsBinds [aRA] [d.Bar_aRE] [([aRA], Print002.f3b{-r4N-}, f3b_a13J)]
    meth1_a13K = Print002.meth1{-r4m-} aRA d.Bar_aRE
    f3b_a13J x_r4o y_r4p = x_r4o meth1_a13K y_r4p
AbsBinds [aRV] [d.Bar_aRZ] [([aRV], Print002.f3a{-r4O-}, f3a_a13L)]
    meth1_a13M = Print002.meth1{-r4m-} aRV d.Bar_aRZ
    f3a_a13L x_r4k y_r4l = meth1_a13M x_r4k y_r4l
AbsBinds
[aSq, aSs, aSu]
[]
[([aSq, aSs, aSu], Print002.<<<<{-r4P-}, <<<<_a13N)]
    <<<<_a13N x_r4e y_r4f
	      = Print002.:***{-rs-} [aSq, aSs, aSu] x_r4e y_r4f
    <<<<_a13N x_r4h y_r4i
	      = Print002.:***{-rs-} [aSq, aSs, aSu] x_r4h y_r4i
AbsBinds
[aSL, aSN, aSP]
[]
[([aSL, aSN, aSP], Print002......{-r4Q-}, ....._a13O)]
    ....._a13O x_r4b y_r4c
	       = Print002.MkFoo3{-rq-} [aSL, aSN, aSP] x_r4b y_r4c
AbsBinds
[aT6, aT8, aTa]
[]
[([aT6, aT8, aTa], Print002.....{-r4R-}, ...._a13P)]
    ...._a13P x_r48 y_r49
	      = Print002.MkFoo3{-rq-} [aT6, aT8, aTa] x_r48 y_r49
AbsBinds
[aTr, aTt, aTv]
[]
[([aTr, aTt, aTv], Print002.f2a{-r4S-}, f2a_a13Q)]
    f2a_a13Q x_r45 y_r46
	     = Print002.:##{-rn-} [aTr, aTt, aTv] x_r45 y_r46
AbsBinds
[aTM, aTO, aTQ]
[]
[([aTM, aTO, aTQ], Print002.f2{-r4T-}, f2_a13R)]
    f2_a13R x_r42 y_r43
	    = Print002.:##{-rn-} [aTM, aTO, aTQ] x_r42 y_r43
AbsBinds
[aU7, aU9, aUb]
[]
[([aU7, aU9, aUb], Print002.f1a{-r4U-}, f1a_a13S)]
    f1a_a13S x_r3Z y_r40
	     = Print002.MkFoo1{-ro-} [aU7, aU9, aUb] x_r3Z y_r40
AbsBinds
[aUs, aUu, aUw]
[]
[([aUs, aUu, aUw], Print002.f1{-r4V-}, f1_a13T)]
    f1_a13T x_r3W y_r3X
	    = Print002.MkFoo1{-ro-} [aUs, aUu, aUw] x_r3W y_r3X
AbsBinds
[aVd, aVg, aVh]
[]
[([aVd, aVg, aVh], con2tag_Foo#_rOp, con2tag_Foo#_a13U)]
    con2tag_Foo#_a13U (Print002.MkFoo1{-ro-} _ _) = 0#
    con2tag_Foo#_a13U (Print002.:##{-rn-} _ _) = 1#
    con2tag_Foo#_a13U (Print002.MkFoo3{-rq-} _ _) = 2#
    con2tag_Foo#_a13U (Print002.:***{-rs-} _ _) = 3#
AbsBinds
[a_taVs, b_taVt, c_taVu]
[d.Eq_aXB, d.Eq_aXC, d.Eq_aXD]
[([a_taVs, b_taVt, c_taVu], Print002.$dEqFoo0{-r13G-}, d.Eq_aVp)]
    ==_a13h = ==_aVH
    ==_a13f = PrelBase.=={-8X-} c_taVu d.Eq_aXO
    ==_a13g = ==_a13f
    ==_a13e = ==_a13f
    ==_a13c = PrelBase.=={-8X-} b_taVt d.Eq_aXQ
    ==_a13d = ==_a13c
    ==_a13b = ==_a13c
    ==_a13a = PrelBase.=={-8X-} a_taVs d.Eq_aXS
    ==_a139 = ==_a13a
    d.Eq_aXO = d.Eq_aXD
    d.Eq_aXQ = d.Eq_aXC
    d.Eq_aXS = d.Eq_aXB
    AbsBinds [] [] [([], /=_aVr, /=_a13V)]
	/=_a13V a_rOT b_rOU = PrelBase.not{-rhG-} ==_a13h a_rOT b_rOU
    AbsBinds [] [] [([], ==_aVH, ==_a13W)]
	==_a13W (Print002.MkFoo1{-ro-} a1_rOw a2_rOx)
		(Print002.MkFoo1{-ro-} b1_rOy b2_rOz)
		= (a1_rOw ==_a13a b1_rOy)
		  PrelBase.&&{-rgy-} (a2_rOx ==_a139 b2_rOz)
	==_a13W (Print002.:##{-rn-} a1_rOB a2_rOC)
		(Print002.:##{-rn-} b1_rOD b2_rOE)
		= (a1_rOB ==_a13b b1_rOD)
		  PrelBase.&&{-rgy-} (a2_rOC ==_a13e b2_rOE)
	==_a13W (Print002.MkFoo3{-rq-} a1_rOG a2_rOH)
		(Print002.MkFoo3{-rq-} b1_rOI b2_rOJ)
		= (a1_rOG ==_a13c b1_rOI)
		  PrelBase.&&{-rgy-} (a2_rOH ==_a13d b2_rOJ)
	==_a13W (Print002.:***{-rs-} a1_rOL a2_rOM)
		(Print002.:***{-rs-} b1_rON b2_rOO)
		= (a1_rOL ==_a13f b1_rON)
		  PrelBase.&&{-rgy-} (a2_rOM ==_a13g b2_rOO)
	==_a13W a_rOQ b_rOR = PrelBase.False{-58-}
    d.Eq_aVp =
	PrelBase.:Eq{-r17-} (Print002.Foo{-r52-} a_taVs b_taVt c_taVu)
			    /=_aVr
			    ==_aVH
AbsBinds
[a_ta13i, b_ta13k, c_ta13j]
[]
[([a_ta13i, b_ta13k, c_ta13j],
  Print002.$dEvalFoo0{-r13F-},
  d.Eval_aY3)]
    d.Eval_aY3 =
	PrelErr.error{-87-}
	    {PrelBase.Eval{-24-} (Print002.Foo{-r52-} a_ta13i b_ta13k c_ta13j)} "Compiler error: bad dictionary Eval"
AbsBinds
[a_taYe, b_taYf, c_taYg]
[d.Ord_a12F, d.Ord_a12H, d.Ord_a12I, d.Eq_a12J]
[([a_taYe, b_taYf, c_taYg], Print002.$dOrdFoo0{-r13E-}, d.Ord_aYb)]
    compare_a13q = compare_aZC
    compare_a13p = compare_aZC
    compare_a13o = compare_aZC
    compare_a13n = compare_aZC
    compare_a13m = compare_aZC
    compare_a13l = compare_aZC
    d.Ord_a12D = d.Ord_a12I
    d.Ord_a12C = d.Ord_a12H
    d.Ord_a12E = d.Ord_a12F
    d.Eq_a12G = d.Eq_a12J
    AbsBinds [] [] [([], min_aYd, min_a13X)]
	min_a13X a_rPs b_rPt
		 = case compare_a13q a_rPs b_rPt of
		     PrelBase.LT{-rbj-} -> a_rPs
		     PrelBase.EQ{-r4K-} -> b_rPt
		     PrelBase.GT{-rbk-} -> b_rPt
    AbsBinds [] [] [([], max_aYu, max_a13Y)]
	max_a13Y a_rPm b_rPn
		 = case compare_a13p a_rPm b_rPn of
		     PrelBase.LT{-rbj-} -> b_rPn
		     PrelBase.EQ{-r4K-} -> a_rPm
		     PrelBase.GT{-rbk-} -> a_rPm
    AbsBinds [] [] [([], >_aYI, >_a13Z)]
	>_a13Z a_rPg b_rPh
	       = case compare_a13o a_rPg b_rPh of
		   PrelBase.LT{-rbj-} -> PrelBase.False{-58-}
		   PrelBase.EQ{-r4K-} -> PrelBase.False{-58-}
		   PrelBase.GT{-rbk-} -> PrelBase.True{-5D-}
    AbsBinds [] [] [([], >=_aYW, >=_a140)]
	>=_a140 a_rPa b_rPb
		= case compare_a13n a_rPa b_rPb of
		    PrelBase.LT{-rbj-} -> PrelBase.False{-58-}
		    PrelBase.EQ{-r4K-} -> PrelBase.True{-5D-}
		    PrelBase.GT{-rbk-} -> PrelBase.True{-5D-}
    AbsBinds [] [] [([], <=_aZa, <=_a141)]
	<=_a141 a_rP4 b_rP5
		= case compare_a13m a_rP4 b_rP5 of
		    PrelBase.LT{-rbj-} -> PrelBase.True{-5D-}
		    PrelBase.EQ{-r4K-} -> PrelBase.True{-5D-}
		    PrelBase.GT{-rbk-} -> PrelBase.False{-58-}
    AbsBinds [] [] [([], <_aZo, <_a142)]
	<_a142 a_rOY b_rOZ
	       = case compare_a13l a_rOY b_rOZ of
		   PrelBase.LT{-rbj-} -> PrelBase.True{-5D-}
		   PrelBase.EQ{-r4K-} -> PrelBase.False{-58-}
		   PrelBase.GT{-rbk-} -> PrelBase.False{-58-}
    AbsBinds [] [] [([], compare_aZC, compare_a143)]
	compare_a143 a_rPy b_rPz
		     = case con2tag_Foo#_rOp [c_taYg, a_taYe, b_taYf] a_rPy of
			 a#_rQm
			 -> case con2tag_Foo#_rOp [c_taYg, a_taYe, b_taYf] b_rPz of
			      b#_rQo
			      -> if a#_rQm PrelGHC.==#{-79-} b#_rQo then
				     case cmp_eq_a144 a_rPy b_rPz of
				       PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
				       PrelBase.EQ{-r4K-} -> PrelBase.EQ{-r4K-}
				       PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
				 else
				     if a#_rQm PrelGHC.<#{-7b-} b#_rQo then
					 PrelBase.LT{-rbj-}
				     else
					 PrelBase.GT{-rbk-}
		     where
			 {- rec -}
			 AbsBinds
			 [a11D, a11G, a11H]
			 [d.Ord_a125, d.Ord_a122, d.Ord_a11Z]
			 [([a11D, a11G, a11H], cmp_eq_rPB, cmp_eq_a145)]
			     compare_a13x = PrelBase.compare{-rh8-} a11H d.Ord_a125
			     compare_a13y = compare_a13x
			     compare_a13w = compare_a13x
			     compare_a13v = PrelBase.compare{-rh8-} a11G d.Ord_a11Z
			     compare_a13u = compare_a13v
			     compare_a13s = PrelBase.compare{-rh8-} a11D d.Ord_a122
			     compare_a13t = compare_a13s
			     compare_a13r = compare_a13s
			     cmp_eq_a145 (Print002.MkFoo1{-ro-} a1_rPD a2_rPE)
					 (Print002.MkFoo1{-ro-} b1_rPF b2_rPG)
					 = case compare_a13u a1_rPD b1_rPF of
					     PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
					     PrelBase.EQ{-r4K-}
					     -> case compare_a13v a2_rPE b2_rPG of
						  PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
						  PrelBase.EQ{-r4K-} -> PrelBase.EQ{-r4K-}
						  PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
					     PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
			     cmp_eq_a145 (Print002.:##{-rn-} a1_rPO a2_rPP)
					 (Print002.:##{-rn-} b1_rPQ b2_rPR)
					 = case compare_a13x a1_rPO b1_rPQ of
					     PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
					     PrelBase.EQ{-r4K-}
					     -> case compare_a13s a2_rPP b2_rPR of
						  PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
						  PrelBase.EQ{-r4K-} -> PrelBase.EQ{-r4K-}
						  PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
					     PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
			     cmp_eq_a145 (Print002.MkFoo3{-rq-} a1_rPZ a2_rQ0)
					 (Print002.MkFoo3{-rq-} b1_rQ1 b2_rQ2)
					 = case compare_a13w a1_rPZ b1_rQ1 of
					     PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
					     PrelBase.EQ{-r4K-}
					     -> case compare_a13y a2_rQ0 b2_rQ2 of
						  PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
						  PrelBase.EQ{-r4K-} -> PrelBase.EQ{-r4K-}
						  PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
					     PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
			     cmp_eq_a145 (Print002.:***{-rs-} a1_rQa a2_rQb)
					 (Print002.:***{-rs-} b1_rQc b2_rQd)
					 = case compare_a13r a1_rQa b1_rQc of
					     PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
					     PrelBase.EQ{-r4K-}
					     -> case compare_a13t a2_rQb b2_rQd of
						  PrelBase.LT{-rbj-} -> PrelBase.LT{-rbj-}
						  PrelBase.EQ{-r4K-} -> PrelBase.EQ{-r4K-}
						  PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
					     PrelBase.GT{-rbk-} -> PrelBase.GT{-rbk-}
			     cmp_eq_a145 _ _
					 = PrelErr.error{-87-}
					       PrelBase.Ordering{-3p-} "Urk! in TcGenDeriv"
			 cmp_eq_a144 =
			     cmp_eq_rPB [c_taYg, a_taYe, b_taYf]
				 [d.Ord_a12C, d.Ord_a12D, d.Ord_a12E]
    d.Ord_aYb =
	PrelBase.:Ord{-r1o-} (Print002.Foo{-r52-} a_taYe b_taYf c_taYg)
			     d.Eq_a12G
			     min_aYd
			     max_aYu
			     >_aYI
			     >=_aYW
			     <=_aZa
			     <_aZo
			     compare_aZC
Print002.Bar2_sc1{-a13D-} =
    _/\_ a_tr4y -> \ x1_B1 ->
	_coerce_ {Print002.Bar{-r4z-} a_tr4y} {Print002.Bar2{-r4Y-} a_tr4y}
	x1_B1
AbsBinds [a_ta13z] [d.Bar2_a134] []
Print002.meth2{-r4Z-} =
    _/\_ a_tr4B -> \ x1_B1 ->
	case x1_B1 of { Print002.:Bar{-r51-} x2_B2 x3_B3 x4_B4  -> x2_B2;}
Print002./////{-r4t-} =
    _/\_ a_tr4B -> \ x1_B1 ->
	case x1_B1 of { Print002.:Bar{-r51-} x2_B2 x3_B3 x4_B4  -> x3_B3;}
Print002.meth1{-r4m-} =
    _/\_ a_tr4B -> \ x1_B1 ->
	case x1_B1 of { Print002.:Bar{-r51-} x2_B2 x3_B3 x4_B4  -> x4_B4;}
AbsBinds [a_ta13A] [d.Bar_a138] []


Print002.hs:34: 
    Pattern match(es) are overlapped
	in the definition of function `<<<<'
	    x y = ...

ghc: module version changed to 1; reason: no old .hi file
_exports_
Print002 .... ..... <<<< f1 f1a f2 f2a f3a f3b f3c f3d Bar(:Bar :Bar meth2 ///// meth1) Bar2(:Bar2 :Bar2) Foo(MkFoo1 :## MkFoo3 :***);
_instances_
instance _forall_ [a b c] {PrelBase.Eq a, PrelBase.Eq b, PrelBase.Eq c} => {PrelBase.Eq (Foo a b c)} = $dEqFoo0;
instance _forall_ [a b c] => {PrelBase.Eval (Foo a b c)} = $dEvalFoo0;
instance _forall_ [a b c] {PrelBase.Ord a, PrelBase.Ord b, PrelBase.Ord c} => {PrelBase.Ord (Foo a b c)} = $dOrdFoo0;
_declarations_
1 $dEqFoo0 _:_ _forall_ [a b c] {PrelBase.Eq a, PrelBase.Eq b, PrelBase.Eq c} => {PrelBase.Eq (Foo a b c)} ;;
1 $dEvalFoo0 _:_ _forall_ [a b c] => {PrelBase.Eval (Foo a b c)} ;;
1 $dOrdFoo0 _:_ _forall_ [a b c] {PrelBase.Ord a, PrelBase.Ord b, PrelBase.Ord c, PrelBase.Eq (Foo a b c)} => {PrelBase.Ord (Foo a b c)} ;;
1 .... _:_ _forall_ [a b c] => b -> b -> Foo a b c ;;
1 ..... _:_ _forall_ [a b c] => b -> b -> Foo a b c ;;
1 <<<< _:_ _forall_ [a b c] => c -> c -> Foo a b c ;;
1 class Bar a where {meth2 :: _forall_ [b] => a -> b -> PrelBase.Bool; ///// :: a -> a -> PrelBase.Bool; meth1 :: a -> a -> PrelBase.Bool} ;
1 class {Bar a} => Bar2 a ;
1 data Foo a b c = MkFoo1 a a |  :## b c |  MkFoo3 b b |  :*** c c ;
1 f1 _:_ _forall_ [a b c] => a -> a -> Foo a b c ;;
1 f1a _:_ _forall_ [a b c] => a -> a -> Foo a b c ;;
1 f2 _:_ _forall_ [a b c] => b -> c -> Foo a b c ;;
1 f2a _:_ _forall_ [a b c] => b -> c -> Foo a b c ;;
1 f3a _:_ _forall_ [a] {Bar a} => a -> a -> PrelBase.Bool ;;
1 f3b _:_ _forall_ [a] {Bar a} => a -> a -> PrelBase.Bool ;;
1 f3c _:_ _forall_ [a] {Bar a} => a -> a -> PrelBase.Bool ;;
1 f3d _:_ _forall_ [a] {Bar a} => a -> a -> PrelBase.Bool ;;
