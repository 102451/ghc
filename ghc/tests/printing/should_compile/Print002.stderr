
==================== Typechecked ====================
Print002.MkFoo1{-ro-} =
    _/\_ a_tr4E b_tr4F c_tr4G -> \ tpl_B1 tpl_B2 ->
	Print002.MkFoo1{-ro-} {_@_ a_tr4E
			       _@_ b_tr4F
			       _@_ c_tr4G
			       tpl_B1
			       tpl_B2}
Print002.:##{-rn-} =
    _/\_ a_tr4E b_tr4F c_tr4G -> \ tpl_B1 tpl_B2 ->
	Print002.:##{-rn-} {_@_ a_tr4E _@_ b_tr4F _@_ c_tr4G tpl_B1 tpl_B2}
Print002.MkFoo3{-rq-} =
    _/\_ a_tr4E b_tr4F c_tr4G -> \ tpl_B1 tpl_B2 ->
	Print002.MkFoo3{-rq-} {_@_ a_tr4E
			       _@_ b_tr4F
			       _@_ c_tr4G
			       tpl_B1
			       tpl_B2}
Print002.:***{-rs-} =
    _/\_ a_tr4E b_tr4F c_tr4G -> \ tpl_B1 tpl_B2 ->
	Print002.:***{-rs-} {_@_ a_tr4E
			     _@_ b_tr4F
			     _@_ c_tr4G
			     tpl_B1
			     tpl_B2}
AbsBinds [aK9] [d.Bar_aKd] [([aK9], Print002.f3d{-r4I-}, f3d_aWS)]
    /////_aWT = Print002./////{-r4X-} aK9 d.Bar_aKd
    f3d_aWS x_r4s y_r4t = x_r4s /////_aWT y_r4t
AbsBinds [aKu] [d.Bar_aKy] [([aKu], Print002.f3c{-r4J-}, f3c_aWY)]
    /////_aWZ = Print002./////{-r4X-} aKu d.Bar_aKy
    f3c_aWY x_r4p y_r4q = /////_aWZ x_r4p y_r4q
AbsBinds [aKP] [d.Bar_aKT] [([aKP], Print002.f3b{-r4K-}, f3b_aX0)]
    meth1_aX1 = Print002.meth1{-r4Y-} aKP d.Bar_aKT
    f3b_aX0 x_r4m y_r4n = x_r4m meth1_aX1 y_r4n
AbsBinds [aLa] [d.Bar_aLe] [([aLa], Print002.f3a{-r4L-}, f3a_aX2)]
    meth1_aX3 = Print002.meth1{-r4Y-} aLa d.Bar_aLe
    f3a_aX2 x_r4j y_r4k = meth1_aX3 x_r4j y_r4k
AbsBinds
[aLF, aLH, aLJ]
[]
[([aLF, aLH, aLJ], Print002.<<<<{-r4M-}, <<<<_aX4)]
    <<<<_aX4 x_r4d y_r4e
	     = Print002.:***{-rs-} [aLF, aLH, aLJ] x_r4d y_r4e
    <<<<_aX4 x_r4g y_r4h
	     = Print002.:***{-rs-} [aLF, aLH, aLJ] x_r4g y_r4h
AbsBinds
[aM0, aM2, aM4]
[]
[([aM0, aM2, aM4], Print002......{-r4N-}, ....._aX5)]
    ....._aX5 x_r4a y_r4b
	      = Print002.MkFoo3{-rq-} [aM0, aM2, aM4] x_r4a y_r4b
AbsBinds
[aMl, aMn, aMp]
[]
[([aMl, aMn, aMp], Print002.....{-r4O-}, ...._aX6)]
    ...._aX6 x_r47 y_r48
	     = Print002.MkFoo3{-rq-} [aMl, aMn, aMp] x_r47 y_r48
AbsBinds
[aMG, aMI, aMK]
[]
[([aMG, aMI, aMK], Print002.f2a{-r4P-}, f2a_aX7)]
    f2a_aX7 x_r44 y_r45
	    = Print002.:##{-rn-} [aMG, aMI, aMK] x_r44 y_r45
AbsBinds
[aN1, aN3, aN5]
[]
[([aN1, aN3, aN5], Print002.f2{-r4Q-}, f2_aX8)]
    f2_aX8 x_r41 y_r42 = Print002.:##{-rn-} [aN1, aN3, aN5] x_r41 y_r42
AbsBinds
[aNm, aNo, aNq]
[]
[([aNm, aNo, aNq], Print002.f1a{-r4R-}, f1a_aX9)]
    f1a_aX9 x_r3Y y_r3Z
	    = Print002.MkFoo1{-ro-} [aNm, aNo, aNq] x_r3Y y_r3Z
AbsBinds
[aNH, aNJ, aNL]
[]
[([aNH, aNJ, aNL], Print002.f1{-r4S-}, f1_aXa)]
    f1_aXa x_r3V y_r3W
	   = Print002.MkFoo1{-ro-} [aNH, aNJ, aNL] x_r3V y_r3W
AbsBinds
[aOs, aOv, aOw]
[]
[([aOs, aOv, aOw], con2tag_Foo#_rHm, con2tag_Foo#_aXb)]
    con2tag_Foo#_aXb (Print002.MkFoo1{-ro-} _ _) = 0#
    con2tag_Foo#_aXb (Print002.:##{-rn-} _ _) = 1#
    con2tag_Foo#_aXb (Print002.MkFoo3{-rq-} _ _) = 2#
    con2tag_Foo#_aXb (Print002.:***{-rs-} _ _) = 3#
AbsBinds
[a_taOO, b_taOR, c_taOU]
[d.Eq_aQV, d.Eq_aQW, d.Eq_aQX]
[([a_taOO, b_taOR, c_taOU], Print002.$d1{-rWX-}, d.Eq_aOE)]
    ==_aWw = ==_aWx
    ==_aWu = PrelBase.=={-8Z-} c_taOU d.Eq_aR3
    ==_aWv = ==_aWu
    ==_aWt = ==_aWu
    ==_aWr = PrelBase.=={-8Z-} b_taOR d.Eq_aR5
    ==_aWs = ==_aWr
    ==_aWq = ==_aWr
    ==_aWp = PrelBase.=={-8Z-} a_taOO d.Eq_aR7
    ==_aWo = ==_aWp
    d.Eq_aR3 = d.Eq_aQX
    d.Eq_aR5 = d.Eq_aQW
    d.Eq_aR7 = d.Eq_aQV
    AbsBinds [] [] [([], ==_aWx, ==_aXd)]
	==_aXd (Print002.MkFoo1{-ro-} a1_rHv a2_rHw)
	       (Print002.MkFoo1{-ro-} b1_rHx b2_rHy)
	       = (a1_rHv ==_aWp b1_rHx) PrelBase.&&{-rfL-} (a2_rHw ==_aWo b2_rHy)
	==_aXd (Print002.:##{-rn-} a1_rHA a2_rHB)
	       (Print002.:##{-rn-} b1_rHC b2_rHD)
	       = (a1_rHA ==_aWq b1_rHC) PrelBase.&&{-rfL-} (a2_rHB ==_aWt b2_rHD)
	==_aXd (Print002.MkFoo3{-rq-} a1_rHF a2_rHG)
	       (Print002.MkFoo3{-rq-} b1_rHH b2_rHI)
	       = (a1_rHF ==_aWr b1_rHH) PrelBase.&&{-rfL-} (a2_rHG ==_aWs b2_rHI)
	==_aXd (Print002.:***{-rs-} a1_rHK a2_rHL)
	       (Print002.:***{-rs-} b1_rHM b2_rHN)
	       = (a1_rHK ==_aWu b1_rHM) PrelBase.&&{-rfL-} (a2_rHL ==_aWv b2_rHN)
	==_aXd a_rHP b_rHQ = PrelBase.False{-58-}
    AbsBinds [] [] [([], /=_aXc, /=_aXe)]
	/=_aXe a_rHU b_rHV = PrelBase.not{-rgT-} ==_aWw a_rHU b_rHV
    d.Eq_aOE =
	PrelBase.:Eq{-r16-}
	    (Print002.Foo{-r51-} a_taOO b_taOR c_taOU) ==_aWx /=_aXc
AbsBinds
[a_taWy, b_taWA, c_taWz]
[]
[([a_taWy, b_taWA, c_taWz], Print002.$d2{-rWW-}, d.Eval_aRi)]
    d.Eval_aRi =
	PrelBase.:Eval{-r19-} (Print002.Foo{-r51-} a_taWy b_taWA c_taWz)
AbsBinds
[a_taRr, b_taRs, c_taRt]
[d.Ord_aVR, d.Ord_aVT, d.Ord_aVU, d.Eq_aVV]
[([a_taRr, b_taRs, c_taRt], Print002.$d3{-rWV-}, d.Ord_aRq)]
    compare_aWH = compare_aWC
    compare_aWG = compare_aWC
    compare_aWF = compare_aWC
    compare_aWE = compare_aWC
    compare_aWD = compare_aWC
    compare_aWB = compare_aWC
    d.Ord_aUw = d.Ord_aVU
    d.Ord_aUv = d.Ord_aVT
    d.Ord_aUx = d.Ord_aVR
    d.Eq_aVS = d.Eq_aVV
    AbsBinds [] [] [([], compare_aWC, compare_aXl)]
	compare_aXl a_rIN b_rIO
		    = case con2tag_Foo#_rHm [c_taRt, a_taRr, b_taRs] a_rIN of
			a#_rJB
			-> case con2tag_Foo#_rHm [c_taRt, a_taRr, b_taRs] b_rIO of
			     b#_rJD
			     -> if a#_rJB PrelGHC.==#{-79-} b#_rJD then
				    case cmp_eq_aXm a_rIN b_rIO of
				      PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
				      PrelBase.EQ{-r4H-} -> PrelBase.EQ{-r4H-}
				      PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
				else
				    if a#_rJB PrelGHC.<#{-7b-} b#_rJD then
					PrelBase.LT{-raU-}
				    else
					PrelBase.GT{-raV-}
		    where
			{- rec -}
			AbsBinds
			[aTz, aTA, aTH]
			[d.Ord_aTY, d.Ord_aTV, d.Ord_aTS]
			[([aTz, aTA, aTH], cmp_eq_rIQ, cmp_eq_aXn)]
			    compare_aWO = PrelBase.compare{-rgg-} aTH d.Ord_aTV
			    compare_aWP = compare_aWO
			    compare_aWN = compare_aWO
			    compare_aWL = PrelBase.compare{-rgg-} aTA d.Ord_aTY
			    compare_aWM = compare_aWL
			    compare_aWK = compare_aWL
			    compare_aWJ = PrelBase.compare{-rgg-} aTz d.Ord_aTS
			    compare_aWI = compare_aWJ
			    cmp_eq_aXn (Print002.MkFoo1{-ro-} a1_rIS a2_rIT)
				       (Print002.MkFoo1{-ro-} b1_rIU b2_rIV)
				       = case compare_aWI a1_rIS b1_rIU of
					   PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
					   PrelBase.EQ{-r4H-}
					   -> case compare_aWJ a2_rIT b2_rIV of
						PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
						PrelBase.EQ{-r4H-} -> PrelBase.EQ{-r4H-}
						PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
					   PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
			    cmp_eq_aXn (Print002.:##{-rn-} a1_rJ3 a2_rJ4)
				       (Print002.:##{-rn-} b1_rJ5 b2_rJ6)
				       = case compare_aWL a1_rJ3 b1_rJ5 of
					   PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
					   PrelBase.EQ{-r4H-}
					   -> case compare_aWO a2_rJ4 b2_rJ6 of
						PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
						PrelBase.EQ{-r4H-} -> PrelBase.EQ{-r4H-}
						PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
					   PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
			    cmp_eq_aXn (Print002.MkFoo3{-rq-} a1_rJe a2_rJf)
				       (Print002.MkFoo3{-rq-} b1_rJg b2_rJh)
				       = case compare_aWK a1_rJe b1_rJg of
					   PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
					   PrelBase.EQ{-r4H-}
					   -> case compare_aWM a2_rJf b2_rJh of
						PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
						PrelBase.EQ{-r4H-} -> PrelBase.EQ{-r4H-}
						PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
					   PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
			    cmp_eq_aXn (Print002.:***{-rs-} a1_rJp a2_rJq)
				       (Print002.:***{-rs-} b1_rJr b2_rJs)
				       = case compare_aWN a1_rJp b1_rJr of
					   PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
					   PrelBase.EQ{-r4H-}
					   -> case compare_aWP a2_rJq b2_rJs of
						PrelBase.LT{-raU-} -> PrelBase.LT{-raU-}
						PrelBase.EQ{-r4H-} -> PrelBase.EQ{-r4H-}
						PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
					   PrelBase.GT{-raV-} -> PrelBase.GT{-raV-}
			    cmp_eq_aXn _ _
				       = PrelErr.error{-87-}
					     PrelBase.Ordering{-3n-} "Urk! in TcGenDeriv"
			cmp_eq_aXm =
			    cmp_eq_rIQ [a_taRr, b_taRs, c_taRt]
				[d.Ord_aUv, d.Ord_aUw, d.Ord_aUx]
    AbsBinds [] [] [([], <_aXk, <_aXo)]
	<_aXo a_rI1 b_rI2
	      = case compare_aWH a_rI1 b_rI2 of
		  PrelBase.LT{-raU-} -> PrelBase.True{-5E-}
		  PrelBase.EQ{-r4H-} -> PrelBase.False{-58-}
		  PrelBase.GT{-raV-} -> PrelBase.False{-58-}
    AbsBinds [] [] [([], <=_aXj, <=_aXp)]
	<=_aXp a_rI9 b_rIa
	       = case compare_aWG a_rI9 b_rIa of
		   PrelBase.LT{-raU-} -> PrelBase.True{-5E-}
		   PrelBase.EQ{-r4H-} -> PrelBase.True{-5E-}
		   PrelBase.GT{-raV-} -> PrelBase.False{-58-}
    AbsBinds [] [] [([], >=_aXi, >=_aXq)]
	>=_aXq a_rIh b_rIi
	       = case compare_aWF a_rIh b_rIi of
		   PrelBase.LT{-raU-} -> PrelBase.False{-58-}
		   PrelBase.EQ{-r4H-} -> PrelBase.True{-5E-}
		   PrelBase.GT{-raV-} -> PrelBase.True{-5E-}
    AbsBinds [] [] [([], >_aXh, >_aXr)]
	>_aXr a_rIp b_rIq
	      = case compare_aWE a_rIp b_rIq of
		  PrelBase.LT{-raU-} -> PrelBase.False{-58-}
		  PrelBase.EQ{-r4H-} -> PrelBase.False{-58-}
		  PrelBase.GT{-raV-} -> PrelBase.True{-5E-}
    AbsBinds [] [] [([], max_aXg, max_aXs)]
	max_aXs a_rIx b_rIy
		= case compare_aWD a_rIx b_rIy of
		    PrelBase.LT{-raU-} -> b_rIy
		    PrelBase.EQ{-r4H-} -> a_rIx
		    PrelBase.GT{-raV-} -> a_rIx
    AbsBinds [] [] [([], min_aXf, min_aXt)]
	min_aXt a_rIF b_rIG
		= case compare_aWB a_rIF b_rIG of
		    PrelBase.LT{-raU-} -> a_rIF
		    PrelBase.EQ{-r4H-} -> b_rIG
		    PrelBase.GT{-raV-} -> b_rIG
    d.Ord_aRq =
	PrelBase.:Ord{-r1n-}
	    (Print002.Foo{-r51-} a_taRr b_taRs c_taRt) d.Eq_aVS
						       compare_aWC
						       <_aXk
						       <=_aXj
						       >=_aXi
						       >_aXh
						       max_aXg
						       min_aXf
Print002.scsel_Bar2Print002Bar{-aWU-} =
    _/\_ a_tr4v -> \ tpl_B1 ->
	_coerce_out_ Print002.:Bar2{-r4U-}
	{Print002.Bar{-r4w-} a_tr4v}
	tpl_B1
AbsBinds [a_taWQ] [d.Bar2_aWj] []
Print002.meth1{-r4Y-} =
    _/\_ a_tr4y -> \ tpl_B1 ->
	case tpl_B1 of { Print002.:Bar{-r50-} tpl_B2 tpl_B3 tpl_B4  ->
	tpl_B2;}
Print002./////{-r4X-} =
    _/\_ a_tr4y -> \ tpl_B1 ->
	case tpl_B1 of { Print002.:Bar{-r50-} tpl_B2 tpl_B3 tpl_B4  ->
	tpl_B3;}
Print002.meth2{-r4W-} =
    _/\_ a_tr4y -> \ tpl_B1 ->
	case tpl_B1 of { Print002.:Bar{-r50-} tpl_B2 tpl_B3 tpl_B4  ->
	tpl_B4;}
AbsBinds [a_taWR] [d.Bar_aWn] []


Print002.hs:34: 
    Pattern match(es) are overlapped
	in the definition of function `<<<<'
	    x y = ...

ghc: module version changed to 1; reason: no old .hi file
_interface_ Print002 1
_instance_modules_
IO PrelAddr PrelArr PrelBounded PrelCCall PrelForeign PrelNum
_usages_
PrelBase 1 :: $d12 1 $d13 1 $d2 1 $d26 1 $d28 1 $d29 1 $d31 1 $d33 1 $d37 1 $d38 1 $d39 1 $d41 1 $d6 1 $d7 1 $m/= 1 $m< 1 $m<= 1 $m> 1 $m>= 1 $mcompare 1 $mmax 1 $mmin 1 && 1 . 1 not 1 Eq 1 Eval 1 Ord 1 Ordering 1;
PrelNum 1 :: $d17 1 $d18 1;
_exports_
Print002 .... ..... <<<< f1 f1a f2 f2a f3a f3b f3c f3d Bar(:Bar :Bar meth1 ///// meth2) Bar2(:Bar2 :Bar2) Foo(MkFoo1 :## MkFoo3 :***);
_instances_
instance _forall_ [a b c] {PrelBase.Eq a, PrelBase.Eq b, PrelBase.Eq c} => {PrelBase.Eq (Foo a b c)} = $d1;
instance _forall_ [a b c] => {PrelBase.Eval (Foo a b c)} = $d2;
instance _forall_ [a b c] {PrelBase.Ord a, PrelBase.Ord b, PrelBase.Ord c} => {PrelBase.Ord (Foo a b c)} = $d3;
_declarations_
1 $d1 _:_ _forall_ [a b c] {PrelBase.Eq a, PrelBase.Eq b, PrelBase.Eq c} => {PrelBase.Eq (Foo a b c)} ;;
1 $d2 _:_ _forall_ [a b c] => {PrelBase.Eval (Foo a b c)} ;;
1 $d3 _:_ _forall_ [a b c] {PrelBase.Ord a, PrelBase.Ord b, PrelBase.Ord c, PrelBase.Eq (Foo a b c)} => {PrelBase.Ord (Foo a b c)} ;;
1 .... _:_ _forall_ [a b c] => b -> b -> Foo a b c ;;
1 ..... _:_ _forall_ [a b c] => b -> b -> Foo a b c ;;
1 <<<< _:_ _forall_ [a b c] => c -> c -> Foo a b c ;;
1 class Bar a where {meth1 :: a -> a -> PrelBase.Bool; ///// :: a -> a -> PrelBase.Bool; meth2 :: _forall_ [b] => a -> b -> PrelBase.Bool} ;
1 class {Bar a} => Bar2 a ;
1 data Foo a b c = MkFoo1 a a |  :## b c |  MkFoo3 b b |  :*** c c ;
1 f1 _:_ _forall_ [a b c] => a -> a -> Foo a b c ;;
1 f1a _:_ _forall_ [a b c] => a -> a -> Foo a b c ;;
1 f2 _:_ _forall_ [a b c] => b -> c -> Foo a b c ;;
1 f2a _:_ _forall_ [a b c] => b -> c -> Foo a b c ;;
1 f3a _:_ _forall_ [a] {Bar a} => a -> a -> PrelBase.Bool ;;
1 f3b _:_ _forall_ [a] {Bar a} => a -> a -> PrelBase.Bool ;;
1 f3c _:_ _forall_ [a] {Bar a} => a -> a -> PrelBase.Bool ;;
1 f3d _:_ _forall_ [a] {Bar a} => a -> a -> PrelBase.Bool ;;
