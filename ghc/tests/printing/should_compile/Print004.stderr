 
Print004.hs:18: Warning:
    No explicit method nor default method for `showsPrec'
    in an instance declaration for `Show'


==================== Typechecked ====================
ExportOpaque.Con{-r6Q-} =
    _/\_ a_tr6X -> \ x1_B1 ->
	ExportOpaque.Con{-r6Q-} {_@_ a_tr6X x1_B1}
ExportOpaque.Junk11{-r4-} =
    _/\_ a_tr6V -> ExportOpaque.Junk11{-r4-} {_@_ a_tr6V}
ExportOpaque.Junk2{-r3-} =
    _/\_ a_tr6V -> ExportOpaque.Junk2{-r3-} {_@_ a_tr6V}
AbsBinds
[a_taQG]
[]
[([a_taQG], ExportOpaque.$dEvalOpaqueType0{-rQJ-}, d.Eval_aPf)]
    d.Eval_aPf =
	PrelErr.error{-87-}
	    {PrelBase.Eval{-24-} (ExportOpaque.OpaqueType{-r1e-} a_taQG)} "Compiler error: bad dictionary Eval"
AbsBinds
[a_taQH]
[]
[([a_taQH],
  ExportOpaque.$dEvalFunnyInternalType0{-rQO-},
  d.Eval_aPl)]
    d.Eval_aPl =
	PrelErr.error{-87-}
	    {PrelBase.Eval{-24-} (ExportOpaque.FunnyInternalType{-r6P-} a_taQH)} "Compiler error: bad dictionary Eval"
AbsBinds
[a_taPu]
[d.Ord_aPW]
[([a_taPu], ExportOpaque.$dShowOpaqueType0{-rQN-}, d.Show_aPr)]
    showsPrec_aQP =
	PrelBase.showsPrec{-r5W-}
	    (ExportOpaque.FunnyInternalType{-r6P-} a_taPu)
	    d.Show_aQ6
    showsPrec_aQI = showsPrec_aPF
    d.Show_aQ6 =
	ExportOpaque.$dShowFunnyInternalType0{-rQM-} a_taPu d.Ord_aQ8
    d.Ord_aQ8 = d.Ord_aPW
    AbsBinds [] [] [([], showList_aPt, showList_aQQ)]
	showList_aQQ = PrelBase.showList__{-r70-}
			   (ExportOpaque.OpaqueType{-r1e-} a_taPu) showsPrec_aQI PrelBase.I#{-5b-} 0#
    AbsBinds [] [] [([], showsPrec_aPF, showsPrec_aQR)]
	showsPrec_aQR a_rOA (ExportOpaque.Con{-r6Q-} b1_rOB)
		      = PrelBase.showParen{-r6t-} a_rOA >=_aQK lit_aQL
						  PrelBase..{-r6D-}
						      [PrelBase.String{-r5U-}, PrelBase.String{-r5U-}, PrelBase.String{-r5U-}] PrelBase.showString{-r6s-} "Con "
															       showsPrec_aQP PrelBase.I#{-5b-} 10#
																	     b1_rOB
    d.Show_aPr =
	PrelBase.:Show{-r1d-}
	    (ExportOpaque.OpaqueType{-r1e-} a_taPu) showList_aPt showsPrec_aPF
AbsBinds
[a_taQk]
[d.Ord_aQw]
[([a_taQk],
  ExportOpaque.$dShowFunnyInternalType0{-rQM-},
  d.Show_aQh)]
    $mshowList_aQS =
	PrelBase.$mshowList{-ri7-}
	    (ExportOpaque.FunnyInternalType{-r6P-} a_taQk)
	    d.Show_aQA
    d.Show_aQA = d.Show_aQh
    AbsBinds [] [] [([], showList_aQj, showList_aQT)]
	showList_aQT = $mshowList_aQS
    AbsBinds [] [] [([], showsPrec_aQs, showsPrec_aQU)]
	showsPrec_aQU
	    = PrelErr.noMethodBindingError{-8k-}
		  (PrelBase.Int{-3f-}
		   -> ExportOpaque.FunnyInternalType{-r6P-} a_taQk
		   -> PrelBase.String{-r5U-}
		   -> PrelBase.String{-r5U-}) "Print004.hs:18|showsPrec"
    d.Show_aQh =
	PrelBase.:Show{-r1d-}
	    (ExportOpaque.FunnyInternalType{-r6P-} a_taQk) showList_aQj
							   showsPrec_aQs
lit_aQL = PrelBase.I#{-5b-} 10#
>=_aQK = PrelBase.>={-8Y-} PrelBase.Int{-3f-} d.Ord_aQF
d.Ord_aQF = PrelBase.$dOrdInt0{-rdN-}


ghc: module version changed to 1; reason: no old .hi file
_interface_ ExportOpaque 1 302
_instance_modules_
IO PrelAddr PrelArr PrelBounded PrelCCall PrelForeign PrelNum
_usages_
PrelBase 1 :: $dEq0 1 $dEq1 1 $dEqBool0 1 $dEqChar0 1 $dEqInt0 1 $dEqOrdering0 1 $dEval0 1 $dEval1 1 $dEval2 1 $dEvalBool0 1 $dEvalChar0 1 $dEvalDouble0 1 $dEvalInt0 1 $dEvalInteger0 1 $dEvalOrdering0 1 $dNumInt0 1 $dOrd0 1 $dOrd1 1 $dOrdBool0 1 $dOrdChar0 1 $dOrdInt0 1 $dOrdOrdering0 1 $dShow0 1 $dShow1 1 $dShow2 1 $dShowBool0 1 $dShowChar0 1 $dShowInt0 1 $dShowOrdering0 1 $m- 1 $m/= 1 $m< 1 $m<= 1 $m> 1 $m>= 1 $mcompare 1 $mfromInt 1 $mmax 1 $mmin 1 $mshowList 1 . 1 showList__ 1 showParen 1 showSpace 1 showString 1 Eq 1 Eval 1 Num 1 Ord 1 Ordering 1 Show 1 ShowS 1 String 1;
PrelNum 1 :: $dEqDouble0 1 $dEqInteger0 1 $dNumDouble0 1 $dNumInteger0 1 $dOrdDouble0 1 $dOrdInteger0 1 $dShowDouble0 1 $dShowInteger0 1;
_exports_
ExportOpaque OpaqueType;
_instances_
instance _forall_ [a] => {PrelBase.Eval (FunnyInternalType a)} = $dEvalFunnyInternalType0;
instance _forall_ [a] => {PrelBase.Eval (OpaqueType a)} = $dEvalOpaqueType0;
instance _forall_ [a] {PrelBase.Ord a} => {PrelBase.Show (FunnyInternalType a)} = $dShowFunnyInternalType0;
instance _forall_ [a] {PrelBase.Ord a} => {PrelBase.Show (OpaqueType a)} = $dShowOpaqueType0;
_declarations_
1 $dEvalFunnyInternalType0 _:_ _forall_ [a] => {PrelBase.Eval (FunnyInternalType a)} ;;
1 $dEvalOpaqueType0 _:_ _forall_ [a] => {PrelBase.Eval (OpaqueType a)} ;;
1 $dShowFunnyInternalType0 _:_ _forall_ [a] {PrelBase.Ord a} => {PrelBase.Show (FunnyInternalType a)} ;;
1 $dShowOpaqueType0 _:_ _forall_ [a] {PrelBase.Ord a} => {PrelBase.Show (OpaqueType a)} ;;
1 data FunnyInternalType a = Junk11 |  Junk2 ;
1 data OpaqueType a = Con (FunnyInternalType a) ;
