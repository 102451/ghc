 
tcfail068.hs:45:
    Inferred type is less polymorphic than expected
	Quantified type variable `$a' escapes; i.e. unifies with something more global
    When checking the type signature for an expression
	Signature: ST $b $a1
	Inferred:  ST $a (c, IndTree $a b)
    In the first argument of `runST', namely `(itrapstate' i k s)'
    In the right-hand side of an equation for `itrapstate':
	runST (itrapstate' i k s)
 
tcfail068.hs:32:
    Inferred type is less polymorphic than expected
	Quantified type variable `$a' escapes; i.e. unifies with something more global
    When checking the type signature for an expression
	Signature: ST $b $a1
	Inferred:  ST $a (IndTree $a a)
    In the first argument of `runST', namely `(itrap' i k)'
    In the right-hand side of an equation for `itrap':
	runST (itrap' i k)
 
tcfail068.hs:21:
    Inferred type is less polymorphic than expected
	Quantified type variable `$a' escapes; i.e. unifies with something more global
    When checking the type signature for an expression
	Signature: ST $b $a1
	Inferred:  ST $a (IndTree $a a)
    In the first argument of `runST', namely
	`((readArray arr i)
	  >>= (\ val -> (writeArray arr i (f val)) >> (return arr)))'
    In the right-hand side of an equation for `itiap':
	runST ((readArray arr i)
	       >>= (\ val -> (writeArray arr i (f val)) >> (return arr)))
 
tcfail068.hs:14:
    Inferred type is less polymorphic than expected
	Quantified type variable `$c' escapes; i.e. unifies with something more global
    When checking the type signature for an expression
	Signature: ST $b $a
	Inferred:  ST $c (IndTree $c $b1)
    In the first argument of `runST', namely `(newArray ((1, 1), n) x)'
    In the right-hand side of an equation for `itgen':
	runST (newArray ((1, 1), n) x)


Compilation had errors
