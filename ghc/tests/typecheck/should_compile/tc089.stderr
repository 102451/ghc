ghc: module version changed to 1; reason: no old .hi file
_exports_
ShouldSucceed absAnd absIf bottom f f_rec f_rec0 f_rec1 f_rec2 fac fac_rec fac_rec0 fac_rec1 fac_rec2 fac_rec3 fac_rec4 g g_rec g_rec0 g_rec1 g_rec2 g_rec3 g_rec4 g_rec5 g_rec6 g_rec7 g_rec8 head one s_1_0 s_2_0 s_2_1 s_3_0 s_3_1 s_3_2;
_declarations_
1 absAnd _:_ _forall_ [a] => a -> a -> a ;;
1 absIf _:_ _forall_ [a b c] => a -> b -> c -> a ;;
1 bottom _:_ _forall_ [a] => [a] -> a ;;
1 f _:_ _forall_ [a] => a -> a ;;
1 f_rec _:_ _forall_ [a b] => (b -> a) -> b -> a ;;
1 f_rec0 _:_ _forall_ [a] => a -> a ;;
1 f_rec1 _:_ _forall_ [a] => a -> a ;;
1 f_rec2 _:_ _forall_ [a] => a -> a ;;
1 fac _:_ _forall_ [a b c d e f g h i j k] => (a, (j, (c, (d, (e, f)))), (b, (c, (d, (e, f))), (g, (d, (e, f)), (h, (e, f), (i, f, f))))) -> (k, (j, (c, (d, (e, f))))) -> a ;;
1 fac_rec _:_ _forall_ [a b c d e] => (c -> d -> a) -> (b, d, c) -> (e, d) -> b ;;
1 fac_rec0 _:_ _forall_ [a] => a -> a -> a ;;
1 fac_rec1 _:_ _forall_ [a b c] => (a, b, b) -> (c, b) -> a ;;
1 fac_rec2 _:_ _forall_ [a b c d e] => (a, (d, c), (b, c, c)) -> (e, (d, c)) -> a ;;
1 fac_rec3 _:_ _forall_ [a b c d e f g] => (a, (f, (c, d)), (b, (c, d), (e, d, d))) -> (g, (f, (c, d))) -> a ;;
1 fac_rec4 _:_ _forall_ [a b c d e f g h i] => (a, (h, (c, (d, e))), (b, (c, (d, e)), (f, (d, e), (g, e, e)))) -> (i, (h, (c, (d, e)))) -> a ;;
1 g _:_ _forall_ [a b c d e f g h i j k l m n o p q r s t u v w x y z tq tr ts tt tu tv tw tx ty tz tA tB tC tD tE tF tG tH tI tJ tK tL tM tN tO tP tQ tR tS tT tU tV tW tX tY tZ t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t1a t1b t1c t1d t1e t1f t1g t1h t1i t1j t1k t1l t1m t1n t1o t1p t1q t1r t1s t1t t1u t1v t1w t1x t1y t1z t1A t1B t1C t1D t1E t1F t1G t1H t1I t1J t1K t1L t1M t1N t1O t1P t1Q t1R t1S t1T t1U t1V t1W t1X t1Y t1Z t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t2a t2b t2c t2d t2e t2f t2g t2h t2i t2j t2k t2l t2m t2n t2o t2p t2q t2r t2s t2t t2u t2v t2w t2x t2y t2z t2A t2B t2C t2D t2E t2F t2G t2H t2I t2J t2K t2L t2M t2N t2O t2P t2Q t2R t2S t2T t2U t2V t2W t2X t2Y t2Z t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t3a t3b t3c t3d t3e t3f t3g t3h t3i t3j t3k t3l t3m t3n t3o t3p t3q t3r t3s t3t t3u t3v t3w t3x t3y t3z t3A t3B t3C t3D t3E t3F t3G t3H t3I t3J t3K t3L t3M t3N t3O t3P t3Q t3R t3S t3T t3U t3V t3W t3X t3Y t3Z t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t4a t4b t4c t4d t4e t4f t4g t4h t4i t4j t4k t4l t4m t4n t4o t4p t4q t4r t4s t4t t4u t4v t4w t4x t4y t4z t4A t4B t4C t4D t4E t4F t4G t4H t4I t4J t4K t4L t4M t4N t4O t4P t4Q t4R t4S t4T t4U t4V t4W t4X t4Y t4Z t50 t51 t52 t53 t54 t55 t56 t57 t58 t59 t5a t5b t5c t5d t5e t5f t5g t5h t5i t5j t5k t5l t5m t5n t5o t5p t5q t5r t5s t5t t5u t5v t5w t5x t5y t5z t5A t5B t5C t5D t5E t5F t5G t5H t5I t5J t5K t5L t5M t5N t5O t5P t5Q t5R t5S t5T t5U t5V t5W t5X t5Y t5Z t60 t61 t62 t63 t64 t65 t66 t67 t68 t69 t6a t6b t6c t6d t6e t6f t6g t6h t6i t6j t6k t6l t6m t6n t6o t6p t6q t6r t6s t6t t6u t6v t6w t6x t6y t6z t6A t6B t6C t6D t6E t6F t6G t6H t6I t6J t6K t6L t6M t6N t6O t6P t6Q t6R t6S t6T t6U t6V t6W t6X t6Y t6Z t70 t71 t72 t73 t74 t75 t76 t77 t78 t79 t7a t7b t7c t7d t7e t7f t7g t7h t7i t7j t7k t7l t7m t7n t7o t7p t7q t7r t7s t7t t7u t7v t7w t7x t7y t7z t7A t7B t7C t7D t7E t7F t7G t7H t7I t7J t7K t7L t7M t7N t7O t7P t7Q t7R t7S t7T t7U t7V t7W t7X t7Y t7Z t80 t81 t82 t83 t84 t85 t86 t87 t88 t89 t8a t8b t8c t8d t8e t8f t8g t8h t8i t8j] => t8j -> b -> (t8j, t4a, t49) -> (a, (t4b, (c, (d, (e, (f, (g, (h, (i, j, j), (i, k, k)), (h, (l, m, m), (l, n, n))), (g, (o, (p, q, q), (p, r, r)), (o, (s, t, t), (s, u, u)))), (f, (v, (w, (x, y, y), (x, z, z)), (w, (tq, tr, tr), (tq, ts, ts))), (v, (tt, (tu, tv, tv), (tu, tw, tw)), (tt, (tx, ty, ty), (tx, tz, tz))))), (e, (tA, (tB, (tC, (tD, tE, tE), (tD, tF, tF)), (tC, (tG, tH, tH), (tG, tI, tI))), (tB, (tJ, (tK, tL, tL), (tK, tM, tM)), (tJ, (tN, tO, tO), (tN, tP, tP)))), (tA, (tQ, (tR, (tS, tT, tT), (tS, tU, tU)), (tR, (tV, tW, tW), (tV, tX, tX))), (tQ, (tY, (tZ, t10, t10), (tZ, t11, t11)), (tY, (t12, t13, t13), (t12, t14, t14)))))), (d, (t15, (t16, (t17, (t18, (t19, t1a, t1a), (t19, t1b, t1b)), (t18, (t1c, t1d, t1d), (t1c, t1e, t1e))), (t17, (t1f, (t1g, t1h, t1h), (t1g, t1i, t1i)), (t1f, (t1j, t1k, t1k), (t1j, t1l, t1l)))), (t16, (t1m, (t1n, (t1o, t1p, t1p), (t1o, t1q, t1q)), (t1n, (t1r, t1s, t1s), (t1r, t1t, t1t))), (t1m, (t1u, (t1v, t1w, t1w), (t1v, t1x, t1x)), (t1u, (t1y, t1z, t1z), (t1y, t1A, t1A))))), (t15, (t1B, (t1C, (t1D, (t1E, t1F, t1F), (t1E, t1G, t1G)), (t1D, (t1H, t1I, t1I), (t1H, t1J, t1J))), (t1C, (t1K, (t1L, t1M, t1M), (t1L, t1N, t1N)), (t1K, (t1O, t1P, t1P), (t1O, t1Q, t1Q)))), (t1B, (t1R, (t1S, (t1T, t1U, t1U), (t1T, t1V, t1V)), (t1S, (t1W, t1X, t1X), (t1W, t1Y, t1Y))), (t1R, (t1Z, (t20, t21, t21), (t20, t22, t22)), (t1Z, (t23, t24, t24), (t23, t25, t25))))))), (c, (t26, (t27, (t28, (t29, (t2a, (t2b, t2c, t2c), (t2b, t2d, t2d)), (t2a, (t2e, t2f, t2f), (t2e, t2g, t2g))), (t29, (t2h, (t2i, t2j, t2j), (t2i, t2k, t2k)), (t2h, (t2l, t2m, t2m), (t2l, t2n, t2n)))), (t28, (t2o, (t2p, (t2q, t2r, t2r), (t2q, t2s, t2s)), (t2p, (t2t, t2u, t2u), (t2t, t2v, t2v))), (t2o, (t2w, (t2x, t2y, t2y), (t2x, t2z, t2z)), (t2w, (t2A, t2B, t2B), (t2A, t2C, t2C))))), (t27, (t2D, (t2E, (t2F, (t2G, t2H, t2H), (t2G, t2I, t2I)), (t2F, (t2J, t2K, t2K), (t2J, t2L, t2L))), (t2E, (t2M, (t2N, t2O, t2O), (t2N, t2P, t2P)), (t2M, (t2Q, t2R, t2R), (t2Q, t2S, t2S)))), (t2D, (t2T, (t2U, (t2V, t2W, t2W), (t2V, t2X, t2X)), (t2U, (t2Y, t2Z, t2Z), (t2Y, t30, t30))), (t2T, (t31, (t32, t33, t33), (t32, t34, t34)), (t31, (t35, t36, t36), (t35, t37, t37)))))), (t26, (t38, (t39, (t3a, (t3b, (t3c, t3d, t3d), (t3c, t3e, t3e)), (t3b, (t3f, t3g, t3g), (t3f, t3h, t3h))), (t3a, (t3i, (t3j, t3k, t3k), (t3j, t3l, t3l)), (t3i, (t3m, t3n, t3n), (t3m, t3o, t3o)))), (t39, (t3p, (t3q, (t3r, t3s, t3s), (t3r, t3t, t3t)), (t3q, (t3u, t3v, t3v), (t3u, t3w, t3w))), (t3p, (t3x, (t3y, t3z, t3z), (t3y, t3A, t3A)), (t3x, (t3B, t3C, t3C), (t3B, t3D, t3D))))), (t38, (t3E, (t3F, (t3G, (t3H, t3I, t3I), (t3H, t3J, t3J)), (t3G, (t3K, t3L, t3L), (t3K, t3M, t3M))), (t3F, (t3N, (t3O, t3P, t3P), (t3O, t3Q, t3Q)), (t3N, (t3R, t3S, t3S), (t3R, t3T, t3T)))), (t3E, (t3U, (t3V, (t3W, t3X, t3X), (t3W, t3Y, t3Y)), (t3V, (t3Z, t40, t40), (t3Z, t41, t41))), (t3U, (t42, (t43, t44, t44), (t43, t45, t45)), (t42, (t46, t47, t47), (t46, t48, t48)))))))), (t4b, (t4c, (t4d, (t4e, (t4f, (t4g, (t4h, (t4i, t4j, t4j), (t4i, t4k, t4k)), (t4h, (t4l, t4m, t4m), (t4l, t4n, t4n))), (t4g, (t4o, (t4p, t4q, t4q), (t4p, t4r, t4r)), (t4o, (t4s, t4t, t4t), (t4s, t4u, t4u)))), (t4f, (t4v, (t4w, (t4x, t4y, t4y), (t4x, t4z, t4z)), (t4w, (t4A, t4B, t4B), (t4A, t4C, t4C))), (t4v, (t4D, (t4E, t4F, t4F), (t4E, t4G, t4G)), (t4D, (t4H, t4I, t4I), (t4H, t4J, t4J))))), (t4e, (t4K, (t4L, (t4M, (t4N, t4O, t4O), (t4N, t4P, t4P)), (t4M, (t4Q, t4R, t4R), (t4Q, t4S, t4S))), (t4L, (t4T, (t4U, t4V, t4V), (t4U, t4W, t4W)), (t4T, (t4X, t4Y, t4Y), (t4X, t4Z, t4Z)))), (t4K, (t50, (t51, (t52, t53, t53), (t52, t54, t54)), (t51, (t55, t56, t56), (t55, t57, t57))), (t50, (t58, (t59, t5a, t5a), (t59, t5b, t5b)), (t58, (t5c, t5d, t5d), (t5c, t5e, t5e)))))), (t4d, (t5f, (t5g, (t5h, (t5i, (t5j, t5k, t5k), (t5j, t5l, t5l)), (t5i, (t5m, t5n, t5n), (t5m, t5o, t5o))), (t5h, (t5p, (t5q, t5r, t5r), (t5q, t5s, t5s)), (t5p, (t5t, t5u, t5u), (t5t, t5v, t5v)))), (t5g, (t5w, (t5x, (t5y, t5z, t5z), (t5y, t5A, t5A)), (t5x, (t5B, t5C, t5C), (t5B, t5D, t5D))), (t5w, (t5E, (t5F, t5G, t5G), (t5F, t5H, t5H)), (t5E, (t5I, t5J, t5J), (t5I, t5K, t5K))))), (t5f, (t5L, (t5M, (t5N, (t5O, t5P, t5P), (t5O, t5Q, t5Q)), (t5N, (t5R, t5S, t5S), (t5R, t5T, t5T))), (t5M, (t5U, (t5V, t5W, t5W), (t5V, t5X, t5X)), (t5U, (t5Y, t5Z, t5Z), (t5Y, t60, t60)))), (t5L, (t61, (t62, (t63, t64, t64), (t63, t65, t65)), (t62, (t66, t67, t67), (t66, t68, t68))), (t61, (t69, (t6a, t6b, t6b), (t6a, t6c, t6c)), (t69, (t6d, t6e, t6e), (t6d, t6f, t6f))))))), (t4c, (t6g, (t6h, (t6i, (t6j, (t6k, (t6l, t6m, t6m), (t6l, t6n, t6n)), (t6k, (t6o, t6p, t6p), (t6o, t6q, t6q))), (t6j, (t6r, (t6s, t6t, t6t), (t6s, t6u, t6u)), (t6r, (t6v, t6w, t6w), (t6v, t6x, t6x)))), (t6i, (t6y, (t6z, (t6A, t6B, t6B), (t6A, t6C, t6C)), (t6z, (t6D, t6E, t6E), (t6D, t6F, t6F))), (t6y, (t6G, (t6H, t6I, t6I), (t6H, t6J, t6J)), (t6G, (t6K, t6L, t6L), (t6K, t6M, t6M))))), (t6h, (t6N, (t6O, (t6P, (t6Q, t6R, t6R), (t6Q, t6S, t6S)), (t6P, (t6T, t6U, t6U), (t6T, t6V, t6V))), (t6O, (t6W, (t6X, t6Y, t6Y), (t6X, t6Z, t6Z)), (t6W, (t70, t71, t71), (t70, t72, t72)))), (t6N, (t73, (t74, (t75, t76, t76), (t75, t77, t77)), (t74, (t78, t79, t79), (t78, t7a, t7a))), (t73, (t7b, (t7c, t7d, t7d), (t7c, t7e, t7e)), (t7b, (t7f, t7g, t7g), (t7f, t7h, t7h)))))), (t6g, (t7i, (t7j, (t7k, (t7l, (t7m, t7n, t7n), (t7m, t7o, t7o)), (t7l, (t7p, t7q, t7q), (t7p, t7r, t7r))), (t7k, (t7s, (t7t, t7u, t7u), (t7t, t7v, t7v)), (t7s, (t7w, t7x, t7x), (t7w, t7y, t7y)))), (t7j, (t7z, (t7A, (t7B, t7C, t7C), (t7B, t7D, t7D)), (t7A, (t7E, t7F, t7F), (t7E, t7G, t7G))), (t7z, (t7H, (t7I, t7J, t7J), (t7I, t7K, t7K)), (t7H, (t7L, t7M, t7M), (t7L, t7N, t7N))))), (t7i, (t7O, (t7P, (t7Q, (t7R, t7S, t7S), (t7R, t7T, t7T)), (t7Q, (t7U, t7V, t7V), (t7U, t7W, t7W))), (t7P, (t7X, (t7Y, t7Z, t7Z), (t7Y, t80, t80)), (t7X, (t81, t82, t82), (t81, t83, t83)))), (t7O, (t84, (t85, (t86, t87, t87), (t86, t88, t88)), (t85, (t89, t8a, t8a), (t89, t8b, t8b))), (t84, (t8c, (t8d, t8e, t8e), (t8d, t8f, t8f)), (t8c, (t8g, t8h, t8h), (t8g, t8i, t8i))))))))) -> a ;;
1 g_rec _:_ _forall_ [a b c d e f g h i j k] => (b -> c -> d -> j -> a) -> (g -> e -> h -> k -> a) -> f -> b -> (f, e, g) -> (i, j, k) -> i ;;
1 g_rec0 _:_ _forall_ [a] => a -> a -> a -> a -> a ;;
1 g_rec1 _:_ _forall_ [a b c] => c -> b -> (c, b, b) -> (a, b, b) -> a ;;
1 g_rec2 _:_ _forall_ [a b c d e f g] => g -> b -> (g, e, d) -> (a, (f, c, c), (f, e, e)) -> a ;;
1 g_rec3 _:_ _forall_ [a b c d e f g h i j k l] => l -> b -> (l, g, f) -> (a, (i, (d, e, e), (d, c, c)), (i, (j, k, k), (j, h, h))) -> a ;;
1 g_rec4 _:_ _forall_ [a b c d e f g h i j k l m n o p q r s t] => t -> b -> (t, k, j) -> (a, (l, (c, (d, e, e), (d, f, f)), (c, (g, h, h), (g, i, i))), (l, (m, (n, o, o), (n, p, p)), (m, (q, r, r), (q, s, s)))) -> a ;;
1 g_rec5 _:_ _forall_ [a b c d e f g h i j k l m n o p q r s t u v w x y z tq tr ts tt tu tv tw tx ty tz] => tz -> b -> (tz, s, r) -> (a, (t, (c, (d, (e, f, f), (e, g, g)), (d, (h, i, i), (h, j, j))), (c, (k, (l, m, m), (l, n, n)), (k, (o, p, p), (o, q, q)))), (t, (u, (v, (w, x, x), (w, y, y)), (v, (z, tq, tq), (z, tr, tr))), (u, (ts, (tt, tu, tu), (tt, tv, tv)), (ts, (tw, tx, tx), (tw, ty, ty))))) -> a ;;
1 g_rec6 _:_ _forall_ [a b c d e f g h i j k l m n o p q r s t u v w x y z tq tr ts tt tu tv tw tx ty tz tA tB tC tD tE tF tG tH tI tJ tK tL tM tN tO tP tQ tR tS tT tU tV tW tX tY tZ t10 t11 t12 t13 t14 t15] => t15 -> b -> (t15, ty, tx) -> (a, (tz, (c, (d, (e, (f, g, g), (f, h, h)), (e, (i, j, j), (i, k, k))), (d, (l, (m, n, n), (m, o, o)), (l, (p, q, q), (p, r, r)))), (c, (s, (t, (u, v, v), (u, w, w)), (t, (x, y, y), (x, z, z))), (s, (tq, (tr, ts, ts), (tr, tt, tt)), (tq, (tu, tv, tv), (tu, tw, tw))))), (tz, (tA, (tB, (tC, (tD, tE, tE), (tD, tF, tF)), (tC, (tG, tH, tH), (tG, tI, tI))), (tB, (tJ, (tK, tL, tL), (tK, tM, tM)), (tJ, (tN, tO, tO), (tN, tP, tP)))), (tA, (tQ, (tR, (tS, tT, tT), (tS, tU, tU)), (tR, (tV, tW, tW), (tV, tX, tX))), (tQ, (tY, (tZ, t10, t10), (tZ, t11, t11)), (tY, (t12, t13, t13), (t12, t14, t14)))))) -> a ;;
1 g_rec7 _:_ _forall_ [a b c d e f g h i j k l m n o p q r s t u v w x y z tq tr ts tt tu tv tw tx ty tz tA tB tC tD tE tF tG tH tI tJ tK tL tM tN tO tP tQ tR tS tT tU tV tW tX tY tZ t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t1a t1b t1c t1d t1e t1f t1g t1h t1i t1j t1k t1l t1m t1n t1o t1p t1q t1r t1s t1t t1u t1v t1w t1x t1y t1z t1A t1B t1C t1D t1E t1F t1G t1H t1I t1J t1K t1L t1M t1N t1O t1P t1Q t1R t1S t1T t1U t1V t1W t1X t1Y t1Z t20 t21 t22 t23 t24 t25 t26 t27] => t27 -> b -> (t27, t14, t13) -> (a, (t15, (c, (d, (e, (f, (g, h, h), (g, i, i)), (f, (j, k, k), (j, l, l))), (e, (m, (n, o, o), (n, p, p)), (m, (q, r, r), (q, s, s)))), (d, (t, (u, (v, w, w), (v, x, x)), (u, (y, z, z), (y, tq, tq))), (t, (tr, (ts, tt, tt), (ts, tu, tu)), (tr, (tv, tw, tw), (tv, tx, tx))))), (c, (ty, (tz, (tA, (tB, tC, tC), (tB, tD, tD)), (tA, (tE, tF, tF), (tE, tG, tG))), (tz, (tH, (tI, tJ, tJ), (tI, tK, tK)), (tH, (tL, tM, tM), (tL, tN, tN)))), (ty, (tO, (tP, (tQ, tR, tR), (tQ, tS, tS)), (tP, (tT, tU, tU), (tT, tV, tV))), (tO, (tW, (tX, tY, tY), (tX, tZ, tZ)), (tW, (t10, t11, t11), (t10, t12, t12)))))), (t15, (t16, (t17, (t18, (t19, (t1a, t1b, t1b), (t1a, t1c, t1c)), (t19, (t1d, t1e, t1e), (t1d, t1f, t1f))), (t18, (t1g, (t1h, t1i, t1i), (t1h, t1j, t1j)), (t1g, (t1k, t1l, t1l), (t1k, t1m, t1m)))), (t17, (t1n, (t1o, (t1p, t1q, t1q), (t1p, t1r, t1r)), (t1o, (t1s, t1t, t1t), (t1s, t1u, t1u))), (t1n, (t1v, (t1w, t1x, t1x), (t1w, t1y, t1y)), (t1v, (t1z, t1A, t1A), (t1z, t1B, t1B))))), (t16, (t1C, (t1D, (t1E, (t1F, t1G, t1G), (t1F, t1H, t1H)), (t1E, (t1I, t1J, t1J), (t1I, t1K, t1K))), (t1D, (t1L, (t1M, t1N, t1N), (t1M, t1O, t1O)), (t1L, (t1P, t1Q, t1Q), (t1P, t1R, t1R)))), (t1C, (t1S, (t1T, (t1U, t1V, t1V), (t1U, t1W, t1W)), (t1T, (t1X, t1Y, t1Y), (t1X, t1Z, t1Z))), (t1S, (t20, (t21, t22, t22), (t21, t23, t23)), (t20, (t24, t25, t25), (t24, t26, t26))))))) -> a ;;
1 g_rec8 _:_ _forall_ [a b c d e f g h i j k l m n o p q r s t u v w x y z tq tr ts tt tu tv tw tx ty tz tA tB tC tD tE tF tG tH tI tJ tK tL tM tN tO tP tQ tR tS tT tU tV tW tX tY tZ t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t1a t1b t1c t1d t1e t1f t1g t1h t1i t1j t1k t1l t1m t1n t1o t1p t1q t1r t1s t1t t1u t1v t1w t1x t1y t1z t1A t1B t1C t1D t1E t1F t1G t1H t1I t1J t1K t1L t1M t1N t1O t1P t1Q t1R t1S t1T t1U t1V t1W t1X t1Y t1Z t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t2a t2b t2c t2d t2e t2f t2g t2h t2i t2j t2k t2l t2m t2n t2o t2p t2q t2r t2s t2t t2u t2v t2w t2x t2y t2z t2A t2B t2C t2D t2E t2F t2G t2H t2I t2J t2K t2L t2M t2N t2O t2P t2Q t2R t2S t2T t2U t2V t2W t2X t2Y t2Z t30 t31 t32 t33 t34 t35 t36 t37 t38 t39 t3a t3b t3c t3d t3e t3f t3g t3h t3i t3j t3k t3l t3m t3n t3o t3p t3q t3r t3s t3t t3u t3v t3w t3x t3y t3z t3A t3B t3C t3D t3E t3F t3G t3H t3I t3J t3K t3L t3M t3N t3O t3P t3Q t3R t3S t3T t3U t3V t3W t3X t3Y t3Z t40 t41 t42 t43 t44 t45 t46 t47 t48 t49 t4a t4b] => t4b -> b -> (t4b, t26, t25) -> (a, (t27, (c, (d, (e, (f, (g, (h, i, i), (h, j, j)), (g, (k, l, l), (k, m, m))), (f, (n, (o, p, p), (o, q, q)), (n, (r, s, s), (r, t, t)))), (e, (u, (v, (w, x, x), (w, y, y)), (v, (z, tq, tq), (z, tr, tr))), (u, (ts, (tt, tu, tu), (tt, tv, tv)), (ts, (tw, tx, tx), (tw, ty, ty))))), (d, (tz, (tA, (tB, (tC, tD, tD), (tC, tE, tE)), (tB, (tF, tG, tG), (tF, tH, tH))), (tA, (tI, (tJ, tK, tK), (tJ, tL, tL)), (tI, (tM, tN, tN), (tM, tO, tO)))), (tz, (tP, (tQ, (tR, tS, tS), (tR, tT, tT)), (tQ, (tU, tV, tV), (tU, tW, tW))), (tP, (tX, (tY, tZ, tZ), (tY, t10, t10)), (tX, (t11, t12, t12), (t11, t13, t13)))))), (c, (t14, (t15, (t16, (t17, (t18, t19, t19), (t18, t1a, t1a)), (t17, (t1b, t1c, t1c), (t1b, t1d, t1d))), (t16, (t1e, (t1f, t1g, t1g), (t1f, t1h, t1h)), (t1e, (t1i, t1j, t1j), (t1i, t1k, t1k)))), (t15, (t1l, (t1m, (t1n, t1o, t1o), (t1n, t1p, t1p)), (t1m, (t1q, t1r, t1r), (t1q, t1s, t1s))), (t1l, (t1t, (t1u, t1v, t1v), (t1u, t1w, t1w)), (t1t, (t1x, t1y, t1y), (t1x, t1z, t1z))))), (t14, (t1A, (t1B, (t1C, (t1D, t1E, t1E), (t1D, t1F, t1F)), (t1C, (t1G, t1H, t1H), (t1G, t1I, t1I))), (t1B, (t1J, (t1K, t1L, t1L), (t1K, t1M, t1M)), (t1J, (t1N, t1O, t1O), (t1N, t1P, t1P)))), (t1A, (t1Q, (t1R, (t1S, t1T, t1T), (t1S, t1U, t1U)), (t1R, (t1V, t1W, t1W), (t1V, t1X, t1X))), (t1Q, (t1Y, (t1Z, t20, t20), (t1Z, t21, t21)), (t1Y, (t22, t23, t23), (t22, t24, t24))))))), (t27, (t28, (t29, (t2a, (t2b, (t2c, (t2d, t2e, t2e), (t2d, t2f, t2f)), (t2c, (t2g, t2h, t2h), (t2g, t2i, t2i))), (t2b, (t2j, (t2k, t2l, t2l), (t2k, t2m, t2m)), (t2j, (t2n, t2o, t2o), (t2n, t2p, t2p)))), (t2a, (t2q, (t2r, (t2s, t2t, t2t), (t2s, t2u, t2u)), (t2r, (t2v, t2w, t2w), (t2v, t2x, t2x))), (t2q, (t2y, (t2z, t2A, t2A), (t2z, t2B, t2B)), (t2y, (t2C, t2D, t2D), (t2C, t2E, t2E))))), (t29, (t2F, (t2G, (t2H, (t2I, t2J, t2J), (t2I, t2K, t2K)), (t2H, (t2L, t2M, t2M), (t2L, t2N, t2N))), (t2G, (t2O, (t2P, t2Q, t2Q), (t2P, t2R, t2R)), (t2O, (t2S, t2T, t2T), (t2S, t2U, t2U)))), (t2F, (t2V, (t2W, (t2X, t2Y, t2Y), (t2X, t2Z, t2Z)), (t2W, (t30, t31, t31), (t30, t32, t32))), (t2V, (t33, (t34, t35, t35), (t34, t36, t36)), (t33, (t37, t38, t38), (t37, t39, t39)))))), (t28, (t3a, (t3b, (t3c, (t3d, (t3e, t3f, t3f), (t3e, t3g, t3g)), (t3d, (t3h, t3i, t3i), (t3h, t3j, t3j))), (t3c, (t3k, (t3l, t3m, t3m), (t3l, t3n, t3n)), (t3k, (t3o, t3p, t3p), (t3o, t3q, t3q)))), (t3b, (t3r, (t3s, (t3t, t3u, t3u), (t3t, t3v, t3v)), (t3s, (t3w, t3x, t3x), (t3w, t3y, t3y))), (t3r, (t3z, (t3A, t3B, t3B), (t3A, t3C, t3C)), (t3z, (t3D, t3E, t3E), (t3D, t3F, t3F))))), (t3a, (t3G, (t3H, (t3I, (t3J, t3K, t3K), (t3J, t3L, t3L)), (t3I, (t3M, t3N, t3N), (t3M, t3O, t3O))), (t3H, (t3P, (t3Q, t3R, t3R), (t3Q, t3S, t3S)), (t3P, (t3T, t3U, t3U), (t3T, t3V, t3V)))), (t3G, (t3W, (t3X, (t3Y, t3Z, t3Z), (t3Y, t40, t40)), (t3X, (t41, t42, t42), (t41, t43, t43))), (t3W, (t44, (t45, t46, t46), (t45, t47, t47)), (t44, (t48, t49, t49), (t48, t4a, t4a)))))))) -> a ;;
1 head _:_ _forall_ [a] => [a] -> a ;;
1 one _:_ _forall_ [a] => a ;;
1 s_1_0 _:_ _forall_ [a] => a -> a ;;
1 s_2_0 _:_ _forall_ [a b] => (a, b) -> a ;;
1 s_2_1 _:_ _forall_ [a b] => (a, b) -> b ;;
1 s_3_0 _:_ _forall_ [a b c] => (a, b, c) -> a ;;
1 s_3_1 _:_ _forall_ [a b c] => (a, b, c) -> b ;;
1 s_3_2 _:_ _forall_ [a b c] => (a, b, c) -> c ;;
