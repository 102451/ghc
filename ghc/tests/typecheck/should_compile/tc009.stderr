==================== Typechecked ====================
AbsBinds [taRG] [d.Num_aRK] [([taRG], o{-r3h,x-}, o_aRo)]
    +_aRQ = PrelBase.+{-r3g,p-} taRG d.Num_aRK
    d.Num_aRN = d.Num_aRK
    fromInt_aRP = PrelBase.fromInt{-8R,p-} taRG d.Num_aRN
    lit_aRO = fromInt_aRP PrelBase.I#{-5b,w-}{i} 1#
    o_aRo (PrelBase.True{-5E,w-}{i}, x_r3d) = x_r3d
    o_aRo (PrelBase.False{-58,w-}{i}, y_r3f) = y_r3f +_aRQ lit_aRO

ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d1 1 $d12 1 $d16 1 $d2 1 $d22 1 $d28 1 $d3 1 $d33 1 $d34 1 $d38 1 $d39 1 $d4 1 $d40 1 $d42 1 $d43 1 $d45 1 $d47 1 $d55 1 $d8 1 $d9 1 $m- 1 $m/= 1 $mfromInt 1 $mshowList 1 Eq 1 Eval 1 Num 1 Show 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d18 1 $d29 1 $d33 1 $d35 1;
PrelTup 1 :: $d13 1 $d4 1 $d9 1;
_exports_
ShouldSucceed o;
_declarations_
1 o _:_ _forall_ [ta] {PrelBase.Num ta} => (PrelBase.Bool, ta) -> ta ;;
