==================== Typechecked ====================
AbsBinds
[]
[]
[([], c{-r5,x-}, c_aRo), ([], d{-r4,x-}, d_aRp), ([],
						  e{-r3,x-},
						  e_aRq)]
    lit_aRS = lit_aRV
    (c_aRo@(d_aRp, e_aRq))
	= if PrelBase.True{-5E,w-}{i} then
	      (lit_aRV, lit_aRU)
	  else
	      (lit_aRS, lit_aRT)
lit_aRV = PrelBase.I#{-5b,w-}{i} 1#
lit_aRU = PrelBase.I#{-5b,w-}{i} 2#
lit_aRT = PrelBase.I#{-5b,w-}{i} 3#

ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d1 1 $d12 1 $d16 1 $d2 1 $d22 1 $d28 1 $d3 1 $d33 1 $d34 1 $d38 1 $d39 1 $d4 1 $d40 1 $d42 1 $d43 1 $d45 1 $d47 1 $d55 1 $d8 1 $d9 1 $m- 1 $m/= 1 $mfromInt 1 $mshowList 1 Eq 1 Eval 1 Num 1 Show 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d18 1 $d29 1 $d33 1 $d35 1;
PrelTup 1 :: $d13 1 $d4 1 $d9 1;
_exports_
ShouldSucceed c d e;
_declarations_
1 c _:_ (PrelBase.Int, PrelBase.Int) ;;
1 d _:_ PrelBase.Int ;;
1 e _:_ PrelBase.Int ;;
