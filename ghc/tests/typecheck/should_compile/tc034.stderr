==================== Typechecked ====================
ANull{-r6,x-}{i} = _/\_ a_tr3p -> ANull{-r6,x-}{i} {_@_ a_tr3p}
ANode{-r5,x-}{i} =
    _/\_ a_tr3p -> \ tpl_B1 tpl_B2 ->
	ANode{-r5,x-}{i} {_@_ a_tr3p tpl_B1 tpl_B2}
AbsBinds [taCG] [d.Num_aCJ] [([taCG], g{-r3q,x-}, g_aCh)]
    fromInt_aCY = PrelBase.fromInt{-8R,p-} taCG d.Num_aCJ
    lit_aCX = fromInt_aCY PrelBase.I#{-5b,w-}{i} 2#
    fromInt_aCW = fromInt_aCY
    lit_aCV = fromInt_aCW PrelBase.I#{-5b,w-}{i} 3#
    fromInt_aCU = fromInt_aCY
    lit_aCT = fromInt_aCU PrelBase.I#{-5b,w-}{i} 4#
    g_aCh ANull{-r6,x-}{i} = lit_aCX
    g_aCh (ANode{-r5,x-}{i} b_r3k (ANode{-r5,x-}{i} c_r3l d_r3m))
	  | b_r3k = lit_aCV
	  | PrelBase.True{-5E,w-}{i} = lit_aCT
AbsBinds [taCS] [] [([taCS], $d1{-rD1,x-}, d.Eval_aCR)]
    d.Eval_aCR = ({-dict-} [] [])

ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d1 1 $d12 1 $d16 1 $d2 1 $d22 1 $d28 1 $d3 1 $d33 1 $d34 1 $d38 1 $d39 1 $d4 1 $d40 1 $d42 1 $d43 1 $d45 1 $d47 1 $d55 1 $d8 1 $d9 1 $m- 1 $m/= 1 $mfromInt 1 $mshowList 1 Eq 1 Eval 1 Num 1 Show 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d18 1 $d29 1 $d33 1 $d35 1;
_exports_
ShouldSucceed g AList(ANull ANode) IntList;
_instances_
instance _forall_ [a] => {PrelBase.Eval (AList a)} = $d1;
_declarations_
1 $d1 _:_ _forall_ [a] => {PrelBase.Eval (AList a)} ;;
1 data AList a = ANull |  ANode a (AList a) ;
1 type IntList = AList PrelBase.Int ;
1 g _:_ _forall_ [ta] {PrelBase.Num ta} => AList PrelBase.Bool -> ta ;;
