ghc: module version changed to 1; reason: no old .hi file
_exports_
ShouldSucceed dfs isCyclic isRecursiveCycle lookupVertex mkDigraph mkEdges mkVertices stronglyConnComp topSort Cycle Digraph(MkDigraph) Edge FlattenedDependencyInfo MaybeErr(Succeeded Failed);
_instances_
instance _forall_ [a] => {PrelBase.Eval (Digraph a)} = $dEvalDigraph0;
instance _forall_ [a b] => {PrelBase.Eval (MaybeErr a b)} = $dEvalMaybeErr0;
_declarations_
1 $dEvalDigraph0 _:_ _forall_ [a] => {PrelBase.Eval (Digraph a)} ;;
1 $dEvalMaybeErr0 _:_ _forall_ [a b] => {PrelBase.Eval (MaybeErr a b)} ;;
1 data Digraph vertex = MkDigraph [vertex] ;
1 data MaybeErr a b = Succeeded a |  Failed b ;
1 dfs _:_ _forall_ [a] {PrelBase.Eq a} => (a -> [a]) -> ([a], [a]) -> [a] -> ([a], [a]) ;;
1 isCyclic _:_ _forall_ [a] {PrelBase.Eq a} => [Edge a] -> [a] -> PrelBase.Bool ;;
1 isRecursiveCycle _:_ _forall_ [a] {PrelBase.Eq a} => Cycle a -> [Edge a] -> PrelBase.Bool ;;
1 lookupVertex _:_ _forall_ [a b c] {PrelBase.Eq a, PrelBase.Ord b} => FlattenedDependencyInfo a b c -> a -> c ;;
1 mkDigraph _:_ _forall_ [a] => [a] -> Digraph a ;;
1 mkEdges _:_ _forall_ [a b c] {PrelBase.Eq a, PrelBase.Ord b} => [a] -> FlattenedDependencyInfo a b c -> [Edge a] ;;
1 mkVertices _:_ _forall_ [a b c] => FlattenedDependencyInfo a b c -> [a] ;;
1 stronglyConnComp _:_ _forall_ [a] {PrelBase.Eq a} => [Edge a] -> [a] -> [[a]] ;;
1 topSort _:_ _forall_ [a] {PrelBase.Eq a} => [Edge a] -> [a] -> MaybeErr [a] [[a]] ;;
1 type Cycle vertex = [vertex] ;
1 type Edge vertex = (vertex, vertex) ;
1 type FlattenedDependencyInfo vertex name code = [(vertex, Set.Set name, Set.Set name, code)] ;
