==================== Typechecked ====================
AbsBinds [taC4] [d.Num_aC7] [([taC4], n{-r1,x-}, n_aBU)]
    fromInt_aCc = PrelBase.fromInt{-8R,p-} taC4 d.Num_aC7
    lit_aCb = fromInt_aCc PrelBase.I#{-5b,w-}{i} 1#
    fromInt_aCa = fromInt_aCc
    lit_aC8 = fromInt_aCa PrelBase.I#{-5b,w-}{i} 0#
    n_aBU PrelBase.True{-5E,w-}{i} = lit_aCb
    n_aBU PrelBase.False{-58,w-}{i} = lit_aC8

ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d1 1 $d12 1 $d16 1 $d2 1 $d22 1 $d28 1 $d3 1 $d33 1 $d34 1 $d38 1 $d39 1 $d4 1 $d40 1 $d42 1 $d43 1 $d45 1 $d47 1 $d55 1 $d8 1 $d9 1 $m- 1 $m/= 1 $mfromInt 1 $mshowList 1 Eq 1 Eval 1 Num 1 Show 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d18 1 $d29 1 $d33 1 $d35 1;
_exports_
ShouldSucceed n;
_declarations_
1 n _:_ _forall_ [ta] {PrelBase.Num ta} => PrelBase.Bool -> ta ;;
