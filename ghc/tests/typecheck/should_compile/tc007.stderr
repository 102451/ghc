==================== Typechecked ====================
AbsBinds [] [] [([], j{-rY,x-}, j_aBY)]
    j_aBY = lit_aCA
AbsBinds [] [] [([], k{-rX,x-}, k_aC6), ([], l{-rW,x-}, l_aC7)]
    k_aC6
	= PrelBase.:{-55,w-}{i} PrelBase.Int{-3g,W-}
	      lit_aCC
	      (PrelBase.:{-55,w-}{i} PrelBase.Int{-3g,W-} j{-rY,x-} l_aC7)
    l_aC7 = PrelBase.:{-55,w-}{i} PrelBase.Int{-3g,W-} lit_aCB k_aC6
AbsBinds [] [] [([], m{-rV,x-}, m_aCl)]
    m_aCl = j{-rY,x-} +_aCD j{-rY,x-}
d.Num_aCz = PrelBase.$d4{-rau,p-}
+_aCD = PrelBase.+{-rU,p-} PrelBase.Int{-3g,W-} d.Num_aCz
lit_aCC = PrelBase.I#{-5b,w-}{i} 1#
lit_aCB = PrelBase.I#{-5b,w-}{i} 0#
lit_aCA = PrelBase.I#{-5b,w-}{i} 2#

ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d1 1 $d12 1 $d16 1 $d2 1 $d22 1 $d28 1 $d3 1 $d33 1 $d34 1 $d38 1 $d39 1 $d4 1 $d40 1 $d42 1 $d43 1 $d45 1 $d47 1 $d55 1 $d8 1 $d9 1 $m- 1 $m/= 1 $mfromInt 1 $mshowList 1 Eq 1 Eval 1 Num 1 Show 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d18 1 $d29 1 $d33 1 $d35 1;
_exports_
ShouldSucceed j k l m;
_declarations_
1 j _:_ PrelBase.Int ;;
1 k _:_ [PrelBase.Int] ;;
1 l _:_ [PrelBase.Int] ;;
1 m _:_ PrelBase.Int ;;
