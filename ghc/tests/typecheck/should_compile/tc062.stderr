

================================================================================
Typechecked:
AbsBinds [tal9] [d.Eq1_alj] [([tal9], f{-r3C,x-}, f_akX)]
    d.Eq1_alh = $d1{-rm8,x-} tal9 d.Eq1_alj
    deq_ama = deq{-r3D,x-} [tal9] d.Eq1_alh
    f_akX x_r3f (y_r3g PrelBase.:{-55,w-}{i} ys_r3h)
	  = deq_ama x_r3f ys_r3h
AbsBinds [talA] [d.Eq1_alM] [([talA], $d1{-rm8,x-}, d.Eq1_alp)]
    d.Eq1_alQ = d.Eq1_alM
    deq_amb = deq{-r3D,x-} talA d.Eq1_alQ
    deq_amc = deq_amd
    AbsBinds [] [] [([], deq_amd, deq_alt)]
	deq_alt (a_r3o PrelBase.:{-55,w-}{i} as_r3p)
		(b_r3q PrelBase.:{-55,w-}{i} bs_r3r)
		= if deq_amb a_r3o b_r3q then
		      deq_amc as_r3p bs_r3r
		  else
		      PrelBase.False{-58,w-}{i}
    d.Eq1_alp = ({-dict-} [] [deq_amd])
AbsBinds [] [] [([], $d2{-rm9,x-}, d.Eq1_alW)]
    AbsBinds [] [] [([], deq_ame, deq_am0)]
	deq_am0 x_r3x y_r3y = PrelBase.True{-5E,w-}{i}
    d.Eq1_alW = ({-dict-} [] [deq_ame])
deq{-r3D,x-} = _/\_ t12 -> \ tpl_B1 -> tpl_B1
AbsBinds [tam7] [d.Eq1_am6] []
ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_exports_
ShouldSucceed f Eq1(deq);
_instances_
instance _forall_ [a] {Eq1 a} => {Eq1 [a]} = $d1;
instance {Eq1 PrelBase.Int} = $d2;
_declarations_
1 $d1 _:_ _forall_ [a] {Eq1 a} => {Eq1 [a]} ;;
1 $d2 _:_ {Eq1 PrelBase.Int} ;;
1 class Eq1 a where {deq :: a -> a -> PrelBase.Bool} ;
1 f _:_ _forall_ [ta] {Eq1 ta} => [ta] -> [ta] -> PrelBase.Bool ;;
