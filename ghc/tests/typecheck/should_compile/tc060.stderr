

================================================================================
Typechecked:
AbsBinds [] [] [([], $d1{-rlE,x-}, d.Eq2_akU)]
    AbsBinds [] [] [([], deq_alF, deq_akY)]
	deq_akY x_r3h y_r3i = PrelBase.True{-5E,w-}{i}
    d.Eq2_akU = ({-dict-} [] [deq_alF])
AbsBinds [tali] [d.Eq2_alu] [([tali], $d2{-rlG,x-}, d.Eq2_al7)]
    d.Eq2_aly = d.Eq2_alu
    deq_alH = deq{-r3x,x-} tali d.Eq2_aly
    deq_alI = deq_alJ
    AbsBinds [] [] [([], deq_alJ, deq_alb)]
	deq_alb (a_r3q PrelBase.:{-55,w-}{i} as_r3r)
		(b_r3s PrelBase.:{-55,w-}{i} bs_r3t)
		= if deq_alH a_r3q b_r3s then
		      deq_alI as_r3r bs_r3t
		  else
		      PrelBase.False{-58,w-}{i}
    d.Eq2_al7 = ({-dict-} [] [deq_alJ])
deq{-r3x,x-} = _/\_ t12 -> \ tpl_B1 -> tpl_B1
AbsBinds [talD] [d.Eq2_alC] []
ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_exports_
ShouldSucceed Eq2(deq);
_instances_
instance {Eq2 PrelBase.Int} = $d1;
instance _forall_ [a] {Eq2 a} => {Eq2 [a]} = $d2;
_declarations_
1 $d1 _:_ {Eq2 PrelBase.Int} ;;
1 $d2 _:_ _forall_ [a] {Eq2 a} => {Eq2 [a]} ;;
1 class Eq2 a where {deq :: a -> a -> PrelBase.Bool} ;
