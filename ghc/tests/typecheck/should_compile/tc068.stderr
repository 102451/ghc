==================== Typechecked ====================
X{-r9,x-}{i} = _/\_ b_tr3U -> X{-r9,x-}{i} {_@_ b_tr3U}
Y{-r8,x-}{i} =
    _/\_ b_tr3U -> \ tpl_B1 -> Y{-r8,x-}{i} {_@_ b_tr3U tpl_B1}
D{-r7,x-}{i} =
    _/\_ a_tr3W -> \ tpl_B1 -> D{-r7,x-}{i} {_@_ a_tr3W tpl_B1}
C{-r6,x-}{i} = _/\_ a_tr3W -> C{-r6,x-}{i} {_@_ a_tr3W}
AbsBinds [taDI] [] [([taDI], $d3{-rDM,x-}, d.Eval_aC3)]
    d.Eval_aC3 = ({-dict-} [] [])
AbsBinds [taDJ] [] [([taDJ], $d4{-rDQ,x-}, d.Eval_aC9)]
    d.Eval_aC9 = ({-dict-} [] [])
AbsBinds [taCm] [d.Eq_aCP] [([taCm], $d1{-rDO,x-}, d.Eq_aCf)]
    d.Eq_aCT = d.Eq_aCP
    ==_aDU = PrelBase.=={-8Y,p-} taCm d.Eq_aCT
    ==_aDT = ==_aDS
    AbsBinds [] [] [([], ==_aDS, ==_aCj)]
	==_aCj X{-r9,x-}{i} X{-r9,x-}{i} = PrelBase.True{-5E,w-}{i}
	==_aCj (Y{-r8,x-}{i} a_r3r) (Y{-r8,x-}{i} b_r3s)
	       = a_r3r ==_aDU b_r3s
	==_aCj a_r3u b_r3v = PrelBase.False{-58,w-}{i}
    AbsBinds [] [] [([], /=_aDR, /=_aCI)]
	/=_aCI a_r3z b_r3A = PrelBase.not{-rgM,p-} a_r3z ==_aDT b_r3A
    d.Eq_aCf = ({-dict-} [] [==_aDS, /=_aDR])
AbsBinds [taD9] [d.Eq_aDA] [([taD9], $d2{-rDN,x-}, d.Eq_aD0)]
    d.Eq_aDG = d.Eq_aDA
    d.Eq_aDE = $d1{-rDO,x-} taD9 d.Eq_aDG
    ==_aDY = PrelBase.=={-8Y,p-} (B{-r3X,x-} taD9) d.Eq_aDE
    ==_aDX = ==_aDW
    AbsBinds [] [] [([], ==_aDW, ==_aD4)]
	==_aD4 (D{-r7,x-}{i} x_r3H) (D{-r7,x-}{i} y_r3I)
	       = x_r3H ==_aDY y_r3I
	==_aD4 C{-r6,x-}{i} C{-r6,x-}{i} = PrelBase.True{-5E,w-}{i}
	==_aD4 a_r3L b_r3M = PrelBase.False{-58,w-}{i}
    AbsBinds [] [] [([], /=_aDV, /=_aDt)]
	/=_aDt a_r3Q b_r3R = PrelBase.not{-rgM,p-} a_r3Q ==_aDX b_r3R
    d.Eq_aD0 = ({-dict-} [] [==_aDW, /=_aDV])

ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d16 1 $d2 1 $d33 1 $d38 1 $d40 1 $d42 1 $d47 1 $d8 1 $m/= 1 not 1 Eq 1 Eval 1;
PrelNum 1 :: $d18 1;
_exports_
ShouldSucceed B(X Y) T(D C);
_instances_
instance _forall_ [b] {PrelBase.Eq b} => {PrelBase.Eq (B b)} = $d1;
instance _forall_ [a] {PrelBase.Eq a} => {PrelBase.Eq (T a)} = $d2;
instance _forall_ [b] => {PrelBase.Eval (B b)} = $d3;
instance _forall_ [a] => {PrelBase.Eval (T a)} = $d4;
_declarations_
1 $d1 _:_ _forall_ [b] {PrelBase.Eq b} => {PrelBase.Eq (B b)} ;;
1 $d2 _:_ _forall_ [a] {PrelBase.Eq a} => {PrelBase.Eq (T a)} ;;
1 $d3 _:_ _forall_ [b] => {PrelBase.Eval (B b)} ;;
1 $d4 _:_ _forall_ [a] => {PrelBase.Eval (T a)} ;;
1 data B b = X |  Y b ;
1 data T a = D (B a) |  C ;
