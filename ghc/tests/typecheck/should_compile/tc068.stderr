

================================================================================
Typechecked:
X{-r9,x-}{i} = _/\_ b_tr3U -> X{-r9,x-}{i} {_@_ b_tr3U}
Y{-r8,x-}{i} =
    _/\_ b_tr3U -> \ tpl_B1 -> Y{-r8,x-}{i} {_@_ b_tr3U tpl_B1}
D{-r7,x-}{i} =
    _/\_ a_tr3W -> \ tpl_B1 -> D{-r7,x-}{i} {_@_ a_tr3W tpl_B1}
C{-r6,x-}{i} = _/\_ a_tr3W -> C{-r6,x-}{i} {_@_ a_tr3W}
AbsBinds [taDA] [] [([taDA], $d3{-rDE,x-}, d.Eval_aBV)]
    d.Eval_aBV = ({-dict-} [] [])
AbsBinds [taDB] [] [([taDB], $d4{-rDG,x-}, d.Eval_aC1)]
    d.Eval_aC1 = ({-dict-} [] [])
AbsBinds [taCe] [d.Eq_aCH] [([taCe], $d1{-rDH,x-}, d.Eq_aC7)]
    d.Eq_aCL = d.Eq_aCH
    ==_aDJ = PrelBase.=={-8Y,p-} taCe d.Eq_aCL
    ==_aDK = ==_aDL
    AbsBinds [] [] [([], ==_aDL, ==_aCb)]
	==_aCb X{-r9,x-}{i} X{-r9,x-}{i} = PrelBase.True{-5E,w-}{i}
	==_aCb (Y{-r8,x-}{i} a_r3r) (Y{-r8,x-}{i} b_r3s)
	       = a_r3r ==_aDJ b_r3s
	==_aCb a_r3u b_r3v = PrelBase.False{-58,w-}{i}
    AbsBinds [] [] [([], /=_aDM, /=_aCA)]
	/=_aCA a_r3z b_r3A = PrelBase.not{-rgM,p-} a_r3z ==_aDK b_r3A
    d.Eq_aC7 = ({-dict-} [] [==_aDL, /=_aDM])
AbsBinds [taD1] [d.Eq_aDs] [([taD1], $d2{-rDI,x-}, d.Eq_aCS)]
    d.Eq_aDy = d.Eq_aDs
    d.Eq_aDw = $d1{-rDH,x-} taD1 d.Eq_aDy
    ==_aDN = PrelBase.=={-8Y,p-} (B{-r3X,x-} taD1) d.Eq_aDw
    ==_aDO = ==_aDP
    AbsBinds [] [] [([], ==_aDP, ==_aCW)]
	==_aCW (D{-r7,x-}{i} x_r3H) (D{-r7,x-}{i} y_r3I)
	       = x_r3H ==_aDN y_r3I
	==_aCW C{-r6,x-}{i} C{-r6,x-}{i} = PrelBase.True{-5E,w-}{i}
	==_aCW a_r3L b_r3M = PrelBase.False{-58,w-}{i}
    AbsBinds [] [] [([], /=_aDQ, /=_aDl)]
	/=_aDl a_r3Q b_r3R = PrelBase.not{-rgM,p-} a_r3Q ==_aDO b_r3R
    d.Eq_aCS = ({-dict-} [] [==_aDP, /=_aDQ])
ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d16 1 $d2 1 $d33 1 $d38 1 $d40 1 $d42 1 $d47 1 $d8 1 $m/= 1 not 1 Eq 1 Eval 1;
PrelNum 1 :: $d18 1;
_exports_
ShouldSucceed B(X Y) T(D C);
_instances_
instance _forall_ [b] {PrelBase.Eq b} => {PrelBase.Eq (B b)} = $d1;
instance _forall_ [a] {PrelBase.Eq a} => {PrelBase.Eq (T a)} = $d2;
instance _forall_ [b] => {PrelBase.Eval (B b)} = $d3;
instance _forall_ [a] => {PrelBase.Eval (T a)} = $d4;
_declarations_
1 $d1 _:_ _forall_ [b] {PrelBase.Eq b} => {PrelBase.Eq (B b)} ;;
1 $d2 _:_ _forall_ [a] {PrelBase.Eq a} => {PrelBase.Eq (T a)} ;;
1 $d3 _:_ _forall_ [b] => {PrelBase.Eval (B b)} ;;
1 $d4 _:_ _forall_ [a] => {PrelBase.Eval (T a)} ;;
1 data B b = X |  Y b ;
1 data T a = D (B a) |  C ;
