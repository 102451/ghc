

================================================================================
Typechecked:
Foo1{-r4,x-}{i} = Foo1{-r4,x-}{i} {}
Foo2{-r3,x-}{i} = Foo2{-r3,x-}{i} {}
Foo3{-r6,x-}{i} = Foo3{-r6,x-}{i} {}
Foo4{-r8,x-}{i} = Foo4{-r8,x-}{i} {}
Foo5{-ra,x-}{i} = Foo5{-ra,x-}{i} {}
Foo6{-rc,x-}{i} = Foo6{-rc,x-}{i} {}
Foo7{-re,x-}{i} = Foo7{-re,x-}{i} {}
Foo8{-rg,x-}{i} = Foo8{-rg,x-}{i} {}
AbsBinds [] [] [([], con2tag_Foo#_rBo, con2tag_Foo#_aCh)]
    con2tag_Foo#_aCh Foo1{-r4,x-}{i} = 0#
    con2tag_Foo#_aCh Foo2{-r3,x-}{i} = 1#
    con2tag_Foo#_aCh Foo3{-r6,x-}{i} = 2#
    con2tag_Foo#_aCh Foo4{-r8,x-}{i} = 3#
    con2tag_Foo#_aCh Foo5{-ra,x-}{i} = 4#
    con2tag_Foo#_aCh Foo6{-rc,x-}{i} = 5#
    con2tag_Foo#_aCh Foo7{-re,x-}{i} = 6#
    con2tag_Foo#_aCh Foo8{-rg,x-}{i} = 7#
AbsBinds [] [] [([], maxtag_Foo#_rBn, maxtag_Foo#_aCm)]
    maxtag_Foo#_aCm = PrelBase.I#{-5b,w-}{i} 7#
AbsBinds [] [] [([], tag2con_Foo#_rBm, tag2con_Foo#_aCp)]
    tag2con_Foo#_aCp (PrelBase.I#{-5b,w-}{i} 0#) = Foo1{-r4,x-}{i}
    tag2con_Foo#_aCp (PrelBase.I#{-5b,w-}{i} 1#) = Foo2{-r3,x-}{i}
    tag2con_Foo#_aCp (PrelBase.I#{-5b,w-}{i} 2#) = Foo3{-r6,x-}{i}
    tag2con_Foo#_aCp (PrelBase.I#{-5b,w-}{i} 3#) = Foo4{-r8,x-}{i}
    tag2con_Foo#_aCp (PrelBase.I#{-5b,w-}{i} 4#) = Foo5{-ra,x-}{i}
    tag2con_Foo#_aCp (PrelBase.I#{-5b,w-}{i} 5#) = Foo6{-rc,x-}{i}
    tag2con_Foo#_aCp (PrelBase.I#{-5b,w-}{i} 6#) = Foo7{-re,x-}{i}
    tag2con_Foo#_aCp (PrelBase.I#{-5b,w-}{i} 7#) = Foo8{-rg,x-}{i}
    tag2con_Foo#_aCp _
		     = IOBase.error{-87,w-} Foo{-r12,x-} "Urk! in TcGenDeriv"
AbsBinds [] [] [([], $d1{-rEx,x-}, d.Enum_aCB)]
    map_aEF = map_aEA
    AbsBinds [] [] [([], toEnum_aEG, toEnum_aCF)]
	toEnum_aCF a_rBL = tag2con_Foo#_rBm a_rBL
    AbsBinds [] [] [([], fromEnum_aEH, fromEnum_aCL)]
	fromEnum_aCL a_rC4
		     = case con2tag_Foo#_rBo a_rC4 of
			 a#_rC6 -> PrelBase.I#{-5b,w-}{i} a#_rC6
    AbsBinds [] [] [([], enumFrom_aEI, enumFrom_aCV)]
	enumFrom_aCV a_rBP
		     = case con2tag_Foo#_rBo a_rBP of
			 a#_rBR
			 -> map_aEA [PrelBase.Int{-3g,W-}, Foo{-r12,x-}] tag2con_Foo#_rBm
									 enumFromTo_aEB PrelBase.I#{-5b,w-}{i} a#_rBR
											maxtag_Foo#_rBn
    AbsBinds [] [] [([], enumFromThen_aEJ, enumFromThen_aDk)]
	enumFromThen_aDk a_rBV b_rBW
			 = case con2tag_Foo#_rBo a_rBV of
			     a#_rBY
			     -> case con2tag_Foo#_rBo b_rBW of
				  b#_rC0
				  -> map_aEF [PrelBase.Int{-3g,W-}, Foo{-r12,x-}] tag2con_Foo#_rBm
										  enumFromThenTo_aEC PrelBase.I#{-5b,w-}{i} a#_rBY
												     PrelBase.I#{-5b,w-}{i} b#_rC0
												     maxtag_Foo#_rBn
    AbsBinds [] [] [([], enumFromTo_aEK, enumFromTo_aDP)]
	enumFromTo_aDP = $menumFromTo_aED
    AbsBinds [] [] [([], enumFromThenTo_aEL, enumFromThenTo_aDZ)]
	enumFromThenTo_aDZ = $menumFromThenTo_aEE
    d.Enum_aCB =
	({-dict-}
	 []
	 [toEnum_aEG, fromEnum_aEH, enumFrom_aEI, enumFromThen_aEJ, enumFromTo_aEK, enumFromThenTo_aEL])
AbsBinds [] [] [([], $d2{-rEz,x-}, d.Eval_aEj)]
    d.Eval_aEj = ({-dict-} [] [])
d.Functor_aEl = PrelBase.$d26{-raq,p-}
map_aEA = PrelBase.map{-r11,p-} PrelBase.[]{-3j,W-} d.Functor_aEl
d.Enum_aEo = PrelBase.$d6{-rb0,p-}
enumFromTo_aEB =
    PrelBase.enumFromTo{-8W,p-} PrelBase.Int{-3g,W-} d.Enum_aEo
d.Enum_aEr = d.Enum_aEo
enumFromThenTo_aEC =
    PrelBase.enumFromThenTo{-8X,p-} PrelBase.Int{-3g,W-} d.Enum_aEr
d.Enum_aEt = $d1{-rEx,x-}
$menumFromTo_aED =
    PrelBase.$menumFromTo{-rfe,p-} Foo{-r12,x-} d.Enum_aEt
d.Enum_aEw = d.Enum_aEt
$menumFromThenTo_aEE =
    PrelBase.$menumFromThenTo{-rfd,p-} Foo{-r12,x-} d.Enum_aEw
ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d14 1 $d2 1 $d26 1 $d31 1 $d38 1 $d40 1 $d42 1 $d45 1 $d47 1 $d6 1 $menumFromThenTo 1 $menumFromTo 1 Enum 1 Eval 1 Functor 1;
PrelNum 1 :: $d8 1;
_exports_
ShouldSucceed Foo(Foo1 Foo2 Foo3 Foo4 Foo5 Foo6 Foo7 Foo8);
_instances_
instance {PrelBase.Enum Foo} = $d1;
instance {PrelBase.Eval Foo} = $d2;
_declarations_
1 $d1 _:_ {PrelBase.Enum Foo} ;;
1 $d2 _:_ {PrelBase.Eval Foo} ;;
1 data Foo = Foo1 |  Foo2 |  Foo3 |  Foo4 |  Foo5 |  Foo6 |  Foo7 |  Foo8 ;
