ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
Addr ArrBase Foreign IO PrelNum
_usages_
PrelBase 1 :: $d1 1 $d12 1 $d15 1 $d16 1 $d2 1 $d22 1 $d23 1 $d24 1 $d25 1 $d27 1 $d28 1 $d3 1 $d33 1 $d34 1 $d35 1 $d38 1 $d39 1 $d4 1 $d40 1 $d42 1 $d43 1 $d45 1 $d46 1 $d47 1 $d50 1 $d51 1 $d52 1 $d55 1 $d56 1 $d7 1 $d8 1 $d9 1 $m- 1 $m/= 1 $m< 1 $m<= 1 $m> 1 $m>= 1 $m>> 1 $mcompare 1 $mfromInt 1 $mmax 1 $mmin 1 $mshowList 1 . 1 showList__ 1 showParen 1 showSpace 1 showString 1 Eq 1 Eval 1 Monad 1 MonadPlus 1 MonadZero 1 Num 1 Ord 1 Ordering 1 Show 1 ShowS 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d17 1 $d18 1 $d29 1 $d33 1 $d34 1 $d35 1;
PrelRead 1 :: $d10 1 $d11 1 $d14 1 $d15 1 $d16 1 $d4 1 $d5 1 $d6 1 $d8 1 $mreadList 1 lex 1 readList__ 1 readParen 1 Read 1 ReadS 1;
PrelTup 1 :: $d13 1 $d4 1 $d49 1 $d9 1;
_exports_
ShouldSucceed T(E1) X(C1 C2 C3) Y(D1 D2);
_instances_
instance _forall_ [a] {PrelBase.Eq a} => {PrelRead.Read (T a)} = $d1;
instance _forall_ [a] {PrelBase.Eq a} => {PrelBase.Show (T a)} = $d2;
instance _forall_ [a] => {PrelBase.Eval (T a)} = $d3;
instance _forall_ [b] => {PrelBase.Eval (Y b)} = $d4;
instance _forall_ [a b] => {PrelBase.Eval (X a b)} = $d5;
instance _forall_ [b] {PrelBase.Eq b} => {PrelRead.Read (Y b)} = $d6;
instance _forall_ [a b] {PrelBase.Eq a, PrelBase.Eq b} => {PrelRead.Read (X a b)} = $d7;
instance _forall_ [b] {PrelBase.Eq b} => {PrelBase.Show (Y b)} = $d8;
instance _forall_ [a b] {PrelBase.Eq a, PrelBase.Eq b} => {PrelBase.Show (X a b)} = $d9;
_declarations_
1 $d1 _:_ _forall_ [a] {PrelBase.Eq a} => {PrelRead.Read (T a)} ;;
1 $d2 _:_ _forall_ [a] {PrelBase.Eq a} => {PrelBase.Show (T a)} ;;
1 $d3 _:_ _forall_ [a] => {PrelBase.Eval (T a)} ;;
1 $d4 _:_ _forall_ [b] => {PrelBase.Eval (Y b)} ;;
1 $d5 _:_ _forall_ [a b] => {PrelBase.Eval (X a b)} ;;
1 $d6 _:_ _forall_ [b] {PrelBase.Eq b} => {PrelRead.Read (Y b)} ;;
1 $d7 _:_ _forall_ [a b] {PrelBase.Eq a, PrelBase.Eq b} => {PrelRead.Read (X a b)} ;;
1 $d8 _:_ _forall_ [b] {PrelBase.Eq b} => {PrelBase.Show (Y b)} ;;
1 $d9 _:_ _forall_ [a b] {PrelBase.Eq a, PrelBase.Eq b} => {PrelBase.Show (X a b)} ;;
1 data T a = E1 ;
1 data X a b = C1 (T a) |  C2 (Y b) |  C3 (X b a) ;
1 data Y b = D1 |  D2 (X PrelBase.Int b) ;
