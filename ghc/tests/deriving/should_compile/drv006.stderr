ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
Addr ArrBase Foreign IO PrelNum
_usages_
Ix 1 :: $d4 1 $d5 1 $d6 1 $d7 1 $d8 1 $d9 1 Ix 1;
PrelBase 1 :: $d1 1 $d11 1 $d12 1 $d14 1 $d15 1 $d16 1 $d2 1 $d22 1 $d24 1 $d25 1 $d26 1 $d27 1 $d28 1 $d3 1 $d31 1 $d32 1 $d33 1 $d34 1 $d35 1 $d38 1 $d39 1 $d4 1 $d40 1 $d42 1 $d43 1 $d45 1 $d46 1 $d47 1 $d50 1 $d51 1 $d52 1 $d55 1 $d56 1 $d6 1 $d7 1 $d8 1 $d9 1 $m- 1 $m/= 1 $m< 1 $m<= 1 $m> 1 $m>= 1 $m>> 1 $mcompare 1 $menumFromThenTo 1 $menumFromTo 1 $mfromInt 1 $mmax 1 $mmin 1 $mshowList 1 && 1 . 1 not 1 showList__ 1 showParen 1 showSpace 1 showString 1 Enum 1 Eq 1 Eval 1 Functor 1 Monad 1 MonadZero 1 Num 1 Ord 1 Ordering 1 Ordering 1 Show 1 ShowS 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d17 1 $d18 1 $d28 1 $d29 1 $d30 1 $d33 1 $d34 1 $d35 1 $d8 1;
PrelTup 1 :: $d13 1 $d4 1 $d49 1 $d9 1;
_exports_
ShouldSucceed Bar(MkBar) Foo(Foo1 Foo2 Foo3 Foo4 Foo5 Foo6 Foo7 Foo8);
_instances_
instance {PrelBase.Eq Foo} = $d1;
instance _forall_ [a b] => {PrelBase.Eval (Bar a b)} = $d2;
instance {PrelBase.Eval Foo} = $d3;
instance {PrelBase.Ord Foo} = $d4;
instance {PrelBase.Show Foo} = $d5;
instance {Ix.Ix Foo} = $d6;
_declarations_
1 $d1 _:_ {PrelBase.Eq Foo} ;;
1 $d2 _:_ _forall_ [a b] => {PrelBase.Eval (Bar a b)} ;;
1 $d3 _:_ {PrelBase.Eval Foo} ;;
1 $d4 _:_ {PrelBase.Ord Foo} ;;
1 $d5 _:_ {PrelBase.Show Foo} ;;
1 $d6 _:_ {Ix.Ix Foo} ;;
1 data Bar a b = MkBar a PrelBase.Int b PrelBase.Integer a ;
1 data Foo = Foo1 |  Foo2 |  Foo3 |  Foo4 |  Foo5 |  Foo6 |  Foo7 |  Foo8 ;
