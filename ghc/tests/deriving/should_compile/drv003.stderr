 
drv003.hs:15: No explicit method nor default method for `PrelBase.=='
	      in an instance declaration for `PrelBase.Eq'
 
drv003.hs:12: No explicit method nor default method for `PrelBase.=='
	      in an instance declaration for `PrelBase.Eq'


================================================================================
Typechecked:
MkBar{-r3I,x-}{i} =
    _/\_ a_tr3u -> \ tpl_B1 tpl_B2 ->
	MkBar{-r3I,x-}{i} {_@_ a_tr3u tpl_B1 tpl_B2}
MkFoo{-r3H,x-}{i} =
    _/\_ a_tr3z -> \ tpl_B1 tpl_B2 ->
	MkFoo{-r3H,x-}{i} {_@_ a_tr3z tpl_B1 tpl_B2}
C1{-r9,x-}{i} =
    _/\_ a_tr3B b_tr3C -> \ tpl_B1 tpl_B2 ->
	C1{-r9,x-}{i} {_@_ a_tr3B _@_ b_tr3C tpl_B1 tpl_B2}
C2{-r8,x-}{i} =
    _/\_ a_tr3B b_tr3C -> \ tpl_B1 tpl_B2 ->
	C2{-r8,x-}{i} {_@_ a_tr3B _@_ b_tr3C tpl_B1 tpl_B2}
C3{-rb,x-}{i} =
    _/\_ a_tr3B b_tr3C -> \ tpl_B1 ->
	C3{-rb,x-}{i} {_@_ a_tr3B _@_ b_tr3C tpl_B1}
AbsBinds
[taCu, taCv]
[d.Eq_aDz, d.Ping_aDA, d.Eq_aDB, d.Ping_aDC]
[([taCu, taCv], $d3{-rFu,x-}, d.Eq_aCh)]
    d.Eq_aDI = d.Eq_aDz
    d.Eq_aDG = $d2{-rFC,x-} taCu d.Eq_aDI
    ==_aFE = PrelBase.=={-8Y,p-} (Foo{-r3F,x-} taCu) d.Eq_aDG
    d.Ping_aDM = d.Ping_aDC
    d.Eq_aDK = $d1{-rFB,x-} taCv d.Ping_aDM
    ==_aFF = PrelBase.=={-8Y,p-} (Bar{-r3E,x-} taCv) d.Eq_aDK
    d.Eq_aDS = d.Eq_aDB
    d.Ping_aDT = d.Ping_aDC
    d.Eq_aDU = d.Eq_aDz
    d.Ping_aDV = d.Ping_aDA
    d.Eq_aDQ =
	$d3{-rFu,x-} [taCv, taCu]
	    [d.Eq_aDS, d.Ping_aDT, d.Eq_aDU, d.Ping_aDV]
    ==_aFG = PrelBase.=={-8Y,p-} (T{-r3G,x-} taCv taCu) d.Eq_aDQ
    d.Eq_aDZ = d.Eq_aDz
    d.Ping_aE0 = d.Ping_aDA
    d.Eq_aE1 = d.Eq_aDz
    d.Ping_aE2 = d.Ping_aDA
    d.Eq_aDX =
	$d3{-rFu,x-} [taCu, taCu]
	    [d.Eq_aDZ, d.Ping_aE0, d.Eq_aE1, d.Ping_aE2]
    ==_aFH = PrelBase.=={-8Y,p-} (T{-r3G,x-} taCu taCu) d.Eq_aDX
    ==_aFI = ==_aFJ
    AbsBinds [] [] [([], ==_aFJ, ==_aCl)]
	==_aCl (C1{-r9,x-}{i} a1_rBE a2_rBF) (C1{-r9,x-}{i} b1_rBG b2_rBH)
	       = (a1_rBE ==_aFE b1_rBG)
		 PrelBase.&&{-rfy,p-} (a2_rBF ==_aFF b2_rBH)
	==_aCl (C2{-r8,x-}{i} a1_rBJ a2_rBK) (C2{-r8,x-}{i} b1_rBL b2_rBM)
	       = (a1_rBJ ==_aFD b1_rBL)
		 PrelBase.&&{-rfy,p-} (a2_rBK ==_aFG b2_rBM)
	==_aCl (C3{-rb,x-}{i} a1_rBO) (C3{-rb,x-}{i} b1_rBP)
	       = a1_rBO ==_aFH b1_rBP
	==_aCl a_rBR b_rBS = PrelBase.False{-58,w-}{i}
    AbsBinds [] [] [([], /=_aFK, /=_aDs)]
	/=_aDs a_rBW b_rBX = PrelBase.not{-r3D,p-} ==_aFI a_rBW b_rBX
    d.Eq_aCh = ({-dict-} [] [==_aFJ, /=_aFK])
AbsBinds [taFp] [] [([taFp], $d4{-rFw,x-}, d.Eval_aEc)]
    d.Eval_aEc = ({-dict-} [] [])
AbsBinds [taFq] [] [([taFq], $d5{-rFy,x-}, d.Eval_aEi)]
    d.Eval_aEi = ({-dict-} [] [])
AbsBinds [taFr, taFs] [] [([taFr, taFs], $d6{-rFA,x-}, d.Eval_aEp)]
    d.Eval_aEp = ({-dict-} [] [])
AbsBinds [taED] [d.Ping_aEM] [([taED], $d1{-rFB,x-}, d.Eq_aEv)]
    d.Eq_aEQ = d.Eq_aEv
    $m/=_aFL = PrelBase.$m/={-rfk,p-} (Bar{-r3E,x-} taED) d.Eq_aEQ
    AbsBinds [] [] [([], ==_aFM, ==_aEA)]
	==_aEA
	    = GHCerr.noDefaultMethodError{-8k,w-}
		  (Bar{-r3E,x-} taED
		   -> Bar{-r3E,x-} taED
		   -> PrelBase.Bool{-34,W-}) "<NoSrcLoc>|PrelBase.=="
    AbsBinds [] [] [([], /=_aFN, /=_aEJ)]
	/=_aEJ = $m/=_aFL
    d.Eq_aEv = ({-dict-} [] [==_aFM, /=_aFN])
AbsBinds [taF5] [d.Eq_aFe] [([taF5], $d2{-rFC,x-}, d.Eq_aEX)]
    d.Eq_aFi = d.Eq_aEX
    $m/=_aFO = PrelBase.$m/={-rfk,p-} (Foo{-r3F,x-} taF5) d.Eq_aFi
    AbsBinds [] [] [([], ==_aFP, ==_aF2)]
	==_aF2
	    = GHCerr.noDefaultMethodError{-8k,w-}
		  (Foo{-r3F,x-} taF5
		   -> Foo{-r3F,x-} taF5
		   -> PrelBase.Bool{-34,W-}) "<NoSrcLoc>|PrelBase.=="
    AbsBinds [] [] [([], /=_aFQ, /=_aFb)]
	/=_aFb = $m/=_aFO
    d.Eq_aEX = ({-dict-} [] [==_aFP, /=_aFQ])
AbsBinds [taFt] [d.Ping_aFm] []
d.Eq_aFo = PrelBase.$d8{-rbg,p-}
==_aFD = PrelBase.=={-8Y,p-} PrelBase.Int{-3g,W-} d.Eq_aFo
ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d16 1 $d2 1 $d33 1 $d38 1 $d40 1 $d42 1 $d47 1 $d8 1 $m/= 1 && 1 not 1 Eq 1 Eval 1;
PrelNum 1 :: $d18 1;
_exports_
ShouldSucceed Bar(MkBar) Foo(MkFoo) Ping T(C1 C2 C3);
_instances_
instance _forall_ [b] {Ping b} => {PrelBase.Eq (Bar b)} = $d1;
instance _forall_ [a] {PrelBase.Eq a} => {PrelBase.Eq (Foo a)} = $d2;
instance _forall_ [a b] {PrelBase.Eq a, Ping a, PrelBase.Eq b, Ping b} => {PrelBase.Eq (T a b)} = $d3;
instance _forall_ [a] => {PrelBase.Eval (Bar a)} = $d4;
instance _forall_ [a] => {PrelBase.Eval (Foo a)} = $d5;
instance _forall_ [a b] => {PrelBase.Eval (T a b)} = $d6;
_declarations_
1 $d1 _:_ _forall_ [b] {Ping b} => {PrelBase.Eq (Bar b)} ;;
1 $d2 _:_ _forall_ [a] {PrelBase.Eq a} => {PrelBase.Eq (Foo a)} ;;
1 $d3 _:_ _forall_ [a b] {PrelBase.Eq a, Ping a, PrelBase.Eq b, Ping b} => {PrelBase.Eq (T a b)} ;;
1 $d4 _:_ _forall_ [a] => {PrelBase.Eval (Bar a)} ;;
1 $d5 _:_ _forall_ [a] => {PrelBase.Eval (Foo a)} ;;
1 $d6 _:_ _forall_ [a b] => {PrelBase.Eval (T a b)} ;;
1 data Bar a = MkBar PrelBase.Int PrelBase.Int ;
1 data Foo a = MkFoo PrelBase.Double a ;
1 class Ping a ;
1 data T a b = C1 (Foo a) (Bar b) |  C2 PrelBase.Int (T b a) |  C3 (T a a) ;
