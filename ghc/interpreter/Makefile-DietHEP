
# --------------------------------------------------------------------------- #
# $Id: Makefile-DietHEP,v 1.2 2000/05/26 10:14:34 sewardj Exp $                      #
# --------------------------------------------------------------------------- #

TOP = ..
include $(TOP)/mk/boilerplate.mk
SUBDIRS = lib

# --------------------------------------------------------------------- #
# interpreter and relevant .a/.so files                                 #
# --------------------------------------------------------------------- #

ifneq "$(TARGETPLATFORM)" "i386-unknown-cygwin32"
   ifneq "$(TARGETPLATFORM)" "i386-unknown-mingw32"
      ## UNIX
      LIB_BFD=-lbfd -liberty
      DYN_EXT=.so
      LIB_DL=-ldl
      M_NO_CYGWIN=
   else
      ## mingw32
      LIB_BFD=
      DYN_EXT=.dll
      LIB_DL=
      M_NO_CYGWIN=-mno-cygwin
   endif
else
   ## cygwin32
   LIB_BFD=-lbfd -liberty
   DYN_EXT=.dll
   LIB_DL=
   M_NO_CYGWIN=
endif

YACC = bison -y
%.c: %.y
	-$(YACC) $<
	mv y.tab.c $@
	rm -f input.o

HS_SRCS =

Y_SRCS = parser.y
C_SRCS = link.c type.c static.c storage.c derive.c input.c compiler.c subst.c \
     translate.c codegen.c lift.c free.c stgSubst.c output.c   \
     hugs.c dynamic.c stg.c sainteger.c object.c interface.c

SRC_CC_OPTS = -I$(GHC_INTERPRETER_DIR) -I$(GHC_INCLUDE_DIR) -I$(GHC_RUNTIME_DIR) -D__HUGS__ -DCOMPILING_RTS -DNO_REGS -Wall -Wstrict-prototypes -Wno-unused -DDEBUG -Winline -g -DDIET_HEP -DBUILDING_DLL

GHC_LIBS_NEEDED = $(GHC_RUNTIME_DIR)/libHSrts.a \
                  $(GHC_RUNTIME_DIR)/gmp/libgmp.a

all :: parser.c $(GHC_LIBS_NEEDED) nHandle$(DYN_EXT) dh_demo.exe

dhtarfile: DietHEP.dll
	rm -f DietHEP.h
	ln -s ../includes/DietHEP.h .
	tar cvf dhtarfile.tar --dereference DietHEP.h DietHEP.dll DietHEP_dll.a \
		Dh_Demo.hs dh_demo.c dh_demo.exe \
		lib library nHandle.dll Makefile-DietHEP
	rm -f DietHEP.h
	bzip2 -v dhtarfile.tar

dh_demo.exe: DietHEP.dll dh_demo.c
	gcc -Wall -g -o dh_demo.exe dh_demo.c -L./ -lDietHEP

### EXTREMELY hacky
DietHEP.dll: $(C_OBJS) $(GHC_LIBS_NEEDED)
	dllwrap -o DietHEP.dll --def DietHEP.def --implib libDietHEP.a \
		$(OBJS) $(GHC_LIBS_NEEDED)

foobar:
	rm -f ../rts/libHSrts.a  ../rts/libHSrts_u.a
	rm -f ../rts/StgCRun.o ../rts/StgCRun.u_o
	make all

nHandle$(DYN_EXT): nHandle.c
ifeq "$(DYN_EXT)" ".dll"
	gcc -mno-cygwin -O -Wall -o nHandle.o -c nHandle.c
	dllwrap -mno-cygwin --target=i386-mingw32 -o nHandle.dll \
                -def nHandle.def nHandle.o
else
	gcc -O -Wall -shared -fPIC -o nHandle.so nHandle.c
endif

$(GHC_RUNTIME_DIR)/libHSrts.a:
	(cd $(GHC_RUNTIME_DIR) ; make clean ; make EXTRA_CC_OPTS=-I$(GHC_INTERPRETER_DIR))

cleanish:
	/bin/rm *.o
rtsclean:
	(cd $(GHC_RUNTIME_DIR) ; make clean)

binaries:
	tar cvzf stghugs.tar.gz hugs$(exeext) nHandle$(DYN_EXT) lib/*lhs lib/Prelude.hs

snapshot:
	/bin/rm -f snapshot.tar
	tar cvf snapshot.tar Makefile *.[chy] \
             ../rts/Assembler.c ../rts/Evaluator.c ../rts/Disassembler.c \
             ../rts/ForeignCall.c ../rts/Printer.c ../rts/QueueTemplate.h \
             ../includes/options.h ../includes/Assembler.h nHandle.c \
             ../includes/Assembler.h ../rts/Bytecodes.h ../includes/ClosureMacros.h \
             lib/*.hs runnofib runallnofib


# --------------------------------------------------------------------- #
# Testing                                                               #
# --------------------------------------------------------------------- #

check :: all
	./test/runtests test/static/*.hs
	./test/runtests test/typechecker/*.hs
	./test/runtests test/runtime/*.hs
	./test/runtests test/std/*.hs
	./test/runtests test/exts/*.hs

checkrun: all
	./test/runtests test/runtime/*.hs
	./test/runtests test/std/*.hs
	./test/runtests test/exts/*.hs

# --------------------------------------------------------------------- #
# Cleanery & misc                                                       #
# --------------------------------------------------------------------- #

CLEAN_FILES += hugs nHandle.dll DietHEP.dll
CLEAN_FILES += $(TOP)/ghc/rts/libHSrts.a $(TOP)/ghc/rts/*.o
CLEAN_FILES += parser.c

INSTALL_LIBEXECS = hugs

depend :: parser.c $(LOOPS) $(SRCS_UGNHS)


include $(TOP)/mk/target.mk
