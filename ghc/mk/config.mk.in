# -*-makefile-*-
# @configure_input@

# -----------------------------------------------------------------------------
# GHC binary distribution configuration

# These settings are used by the top-level Makefile when building
# binary distributions.

# what to include in a binary distribution
GhcMainDir = ghc
GhcBinDistDirs = ghc libraries hslibs

ifneq "$(TARGETPLATFORM)" "i386-unknown-mingw32"
GhcBinDistShScripts = ghc-$(ProjectVersion) ghci-$(ProjectVersion) ghc-pkg-$(ProjectVersion) hsc2hs
else
GhcBinDistShScripts =
endif

GhcBinDistPrlScripts = 
GhcBinDistLibPrlScripts = ghc-asm ghc-split
GhcBinDistBins = hp2ps ghcprof runghc
GhcBinDistOptBins = runhaskell
GhcBinDistLinks = ghc ghci ghc-pkg
GhcBinDistLibSplicedFiles = package.conf

# -----------------------------------------------------------------------------
# GHC-specific configuration settings

# Set to YES if $(GHC) has the readline package installed
GhcHasReadline	= @GhcHasReadline@

# GTK+
GTK_CONFIG = @GTK_CONFIG@

# -----------------------------------------------------------------------------

# We can build using the stage1 compiler by setting UseStage1=YES.
# This is useful when building up a set of .hc files for
# bootstrapping, because we need the ghc/lib/compat library and the
# contents of ghc/utils compiled with the stage1 compiler.

ifeq "$(UseStage1)" "YES"
HC=$(GHC_STAGE1)
MKDEPENDHS=$(GHC_STAGE1)
endif

# Some useful GHC version predicates:

ifeq "$(UseStage1)" "YES"
ghc_ge_504 = YES
ghc_ge_601 = YES
ghc_ge_603 = YES
else
ifeq "$(BootingFromHc)" "YES"
ghc_ge_504 = YES
ghc_ge_601 = YES
ghc_ge_603 = YES
else
ghc_ge_504 = $(shell if (test $(GhcCanonVersion) -ge 504); then echo YES; else echo NO; fi)
ghc_ge_601 = $(shell if (test $(GhcCanonVersion) -ge 601); then echo YES; else echo NO; fi)
ghc_ge_603 = $(shell if (test $(GhcCanonVersion) -ge 603); then echo YES; else echo NO; fi)
endif
endif
