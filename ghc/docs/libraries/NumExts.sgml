<sect> <idx/NumExts/
<label id="sec:NumExts">
<p>

The <tt/NumExts/ interface collect together various numeric
operations that have proven to be commonly useful 

<tscreen> <verb>
-- Going between Doubles and Floats:
doubleToFloat :: Double -> Float
floatToDouble :: Float  -> Double

showHex       :: Integral a => a -> ShowS
showOct       :: Integral a => a -> ShowS
showBin       :: Integral a => a -> ShowS

showIntAtBase :: Integral a 
	      => a            -- base
	      -> (a -> Char)  -- digit to char
	      -> a            -- number to show.
	      -> ShowS

showListWith  :: (a -> ShowS) -> [a] -> ShowS
</verb> </tscreen>

Notes: 
<itemize>
<item>
    If <tt/doubleToFloat/ is applied to a <tt/Double/ that is within
    the representable range for <tt/Float/, the result may be the next
    higher or lower representable <tt/Float/ value. If the <tt/Double/
    is out of range, the result is undefined.
<item>
    No loss of precision occurs in the other direction with
    <tt/floatToDouble/, the floating value remains unchanged.
<item>
    <tt/showOct/, <tt/showHex/ and <tt/showBin/ will prefix <tt/0o/,
    <tt/0x/ and <tt/0b/, respectively. Like <tt/Numeric.showInt/,
    these show functions work on positive numbers only.
<item>
    <tt/showIntAtBase/ is the more general function for converting
    a number at some base into a series of characters. The above
    <tt/show*/ functions use it, for instance, here's how <tt/showHex/
    could be defined

<tscreen><verb>
showHex :: Integral a => a -> ShowS
showHex n r = 
 showString "0x" $
 showIntAtBase 16 (toChrHex) n r
 where  
  toChrHex d
    | d < 10    = chr (ord '0' + fromIntegral d)
    | otherwise = chr (ord 'a' + fromIntegral (d - 10))
</verb></tscreen>

<item>
    <tt/showListWith/ is strictly speaking not a '<tt/NumExts/' kind
    of function, but it's sometimes useful in conjunction with the
    other <tt/show*/ functions that <tt/NumExts/ exports. It is
    the non-overloaded version of <tt/showList/, allowing you to 
    supply the <tt/shows/ function to use per list element. For
    instance, 
 
<tscreen><code>
 putStrLn (NumExts.showListWith NumExts.showHex [0..16])
</code></tscreen>

    will print out the elements of <tt/[1..16]/ in hexidecimal form.


</itemize>
