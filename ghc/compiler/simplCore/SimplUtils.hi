{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface SimplUtils where
import BinderInfo(BinderInfo)
import CoreSyn(CoreCaseAlternatives, CoreExpr)
import Id(Id)
import SimplEnv(SimplEnv)
import SimplMonad(SimplCount)
import SplitUniq(SplitUniqSupply)
import TyVar(TyVar)
import UniType(UniType)
etaExpandCount :: CoreExpr a Id -> Int
floatExposesHNF :: Bool -> Bool -> Bool -> CoreExpr a Id -> Bool
mkCoLamTryingEta :: [Id] -> CoreExpr Id Id -> CoreExpr Id Id
mkCoTyLamTryingEta :: [TyVar] -> CoreExpr Id Id -> CoreExpr Id Id
mkIdentityAlts :: UniType -> SplitUniqSupply -> SimplCount -> (CoreCaseAlternatives (Id, BinderInfo) Id, SimplCount)
simplIdWantsToBeINLINEd :: Id -> SimplEnv -> Bool
type_ok_for_let_to_case :: UniType -> Bool

