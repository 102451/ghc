{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Simplify where
import BinderInfo(BinderInfo)
import CoreSyn(CoreArg, CoreBinding, CoreExpr)
import Id(Id)
import SimplEnv(SimplEnv)
import SimplMonad(SimplCount)
import SplitUniq(SplitUniqSupply)
import UniType(UniType)
simplBind :: SimplEnv -> CoreBinding (Id, BinderInfo) Id -> (SimplEnv -> SplitUniqSupply -> SimplCount -> (CoreExpr Id Id, SimplCount)) -> UniType -> SplitUniqSupply -> SimplCount -> (CoreExpr Id Id, SimplCount)
simplExpr :: SimplEnv -> CoreExpr (Id, BinderInfo) Id -> [CoreArg Id] -> SplitUniqSupply -> SimplCount -> (CoreExpr Id Id, SimplCount)
simplTopBinds :: SimplEnv -> [CoreBinding (Id, BinderInfo) Id] -> SplitUniqSupply -> SimplCount -> ([CoreBinding Id Id], SimplCount)

