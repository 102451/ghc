{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface FloatIn where
import BasicLit(BasicLit)
import CoreSyn(CoreAtom, CoreBinding, CoreCaseAlternatives, CoreExpr)
import CostCentre(CostCentre)
import Id(Id)
import PlainCore(PlainCoreExpr(..), PlainCoreProgram(..))
import PrimOps(PrimOp)
import TyVar(TyVar)
import UniType(UniType)
data CoreBinding a b 
data CoreExpr a b 
data Id 
type PlainCoreExpr = CoreExpr Id Id
type PlainCoreProgram = [CoreBinding Id Id]
floatInwards :: [CoreBinding Id Id] -> [CoreBinding Id Id]

