{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface SimplVar where
import CoreSyn(CoreArg, CoreExpr)
import Id(Id)
import SimplEnv(SimplEnv)
import SimplMonad(SimplCount)
import SplitUniq(SplitUniqSupply)
import UniType(UniType)
completeVar :: SimplEnv -> Id -> [CoreArg Id] -> SplitUniqSupply -> SimplCount -> (CoreExpr Id Id, SimplCount)
leastItCouldCost :: Int -> Int -> Int -> [Bool] -> [UniType] -> Int

