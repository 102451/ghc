{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface SAT where
import BasicLit(BasicLit)
import CoreSyn(CoreAtom, CoreBinding, CoreCaseAlternatives, CoreExpr)
import CostCentre(CostCentre)
import Id(Id)
import PlainCore(PlainCoreProgram(..))
import PrimOps(PrimOp)
import SplitUniq(SplitUniqSupply)
import TyVar(TyVar)
import UniType(UniType)
data CoreBinding a b 
data CoreExpr a b 
data Id 
type PlainCoreProgram = [CoreBinding Id Id]
doStaticArgs :: [CoreBinding Id Id] -> SplitUniqSupply -> [CoreBinding Id Id]

