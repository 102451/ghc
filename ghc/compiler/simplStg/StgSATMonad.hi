{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface StgSATMonad where
import Id(Id)
import SATMonad(Arg)
import SplitUniq(SplitUniqSupply)
import StgSyn(PlainStgExpr(..), StgBinding, StgExpr, StgRhs)
import UniType(UniType)
import UniqFM(UniqFM)
data Id 
data SplitUniqSupply 
type PlainStgExpr = StgExpr Id Id
data UniType 
getArgLists :: StgRhs Id Id -> ([Arg UniType], [Arg Id])
saTransform :: Id -> StgRhs Id Id -> SplitUniqSupply -> UniqFM ([Arg UniType], [Arg Id]) -> (StgBinding Id Id, UniqFM ([Arg UniType], [Arg Id]))

