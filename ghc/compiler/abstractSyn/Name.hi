{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Name where
import Id(Id)
import NameTypes(FullName, ShortName)
import Outputable(NamedThing, Outputable)
import PreludePS(_PackedString)
import TyCon(TyCon)
import Unique(Unique)
data Id 
data FullName 
data Name   = Short Unique ShortName | WiredInTyCon TyCon | WiredInVal Id | PreludeVal Unique FullName | PreludeTyCon Unique FullName Int Bool | PreludeClass Unique FullName | OtherTyCon Unique FullName Int Bool [Name] | OtherClass Unique FullName [Name] | OtherTopId Unique FullName | ClassOpName Unique Name _PackedString Int | Unbound _PackedString
data ShortName 
data TyCon 
data Unique 
cmpName :: Name -> Name -> Int#
eqName :: Name -> Name -> Bool
getTagFromClassOpName :: Name -> Int
invisibleName :: Name -> Bool
isClassName :: Name -> Bool
isClassOpName :: Name -> Name -> Bool
isTyConName :: Name -> Bool
isUnboundName :: Name -> Bool
instance Eq Name
instance Ord Name
instance NamedThing Name
instance Outputable Name

