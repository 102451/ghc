{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface UgenUtil where
import Name(Name)
import PreludePS(_PackedString)
import PreludePrimIO(returnPrimIO, thenPrimIO)
import ProtoName(ProtoName)
import SrcLoc(SrcLoc)
infixr 1 `thenPrimIO`
type ParseTree = _Addr
data ProtoName 
type U_VOID_STAR = _Addr
type U_hstring = _PackedString
type U_long = Int
type U_numId = Int
type U_stringId = _PackedString
type U_unkId = ProtoName
type UgnM a = _PackedString -> _State _RealWorld -> (a, _State _RealWorld)
getSrcFileUgn :: _PackedString -> _State _RealWorld -> (_PackedString, _State _RealWorld)
initUgn :: _PackedString -> (_PackedString -> _State _RealWorld -> (a, _State _RealWorld)) -> _State _RealWorld -> (a, _State _RealWorld)
ioToUgnM :: (_State _RealWorld -> (a, _State _RealWorld)) -> _PackedString -> _State _RealWorld -> (a, _State _RealWorld)
mkSrcLocUgn :: Int -> _PackedString -> _State _RealWorld -> (SrcLoc, _State _RealWorld)
rdU_VOID_STAR :: _Addr -> _PackedString -> _State _RealWorld -> (_Addr, _State _RealWorld)
rdU_hstring :: _Addr -> _PackedString -> _State _RealWorld -> (_PackedString, _State _RealWorld)
rdU_long :: Int -> _PackedString -> _State _RealWorld -> (Int, _State _RealWorld)
rdU_numId :: _Addr -> _PackedString -> _State _RealWorld -> (Int, _State _RealWorld)
rdU_stringId :: _Addr -> _PackedString -> _State _RealWorld -> (_PackedString, _State _RealWorld)
rdU_unkId :: _Addr -> _PackedString -> _State _RealWorld -> (ProtoName, _State _RealWorld)
returnPrimIO :: a -> _State _RealWorld -> (a, _State _RealWorld)
returnUgn :: b -> a -> _State _RealWorld -> (b, _State _RealWorld)
setSrcFileUgn :: _PackedString -> (_PackedString -> _State _RealWorld -> (a, _State _RealWorld)) -> _PackedString -> _State _RealWorld -> (a, _State _RealWorld)
thenPrimIO :: (_State _RealWorld -> (a, _State _RealWorld)) -> (a -> _State _RealWorld -> (b, _State _RealWorld)) -> _State _RealWorld -> (b, _State _RealWorld)
thenUgn :: (b -> _State _RealWorld -> (a, _State _RealWorld)) -> (a -> b -> _State _RealWorld -> (c, _State _RealWorld)) -> b -> _State _RealWorld -> (c, _State _RealWorld)

