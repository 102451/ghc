{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface ClosureInfo where
import AbsCSyn(AbstractC, CAddrMode, CExprMacro, CStmtMacro, MagicId, RegRelative, ReturnInfo)
import BasicLit(BasicLit)
import CLabelInfo(CLabel)
import CgBindery(CgIdInfo)
import CgMonad(CgInfoDownwards, CgState, CompilationInfo, EndOfBlockInfo, FCode(..), StubFlag)
import CmdLineOpts(GlobalSwitch)
import CostCentre(CostCentre)
import HeapOffs(HeapOffset)
import Id(DataCon(..), Id)
import Maybes(Labda)
import PreludePS(_PackedString)
import PrimKind(PrimKind)
import PrimOps(PrimOp)
import SMRep(SMRep, SMSpecRepKind, SMUpdateKind, getSMInfoStr, getSMInitHdrStr, getSMUpdInplaceHdrStr, ltSMRepHdr)
import StgSyn(PlainStgAtom(..), PlainStgExpr(..), PlainStgLiveVars(..), StgAtom, StgBinderInfo, StgBinding, StgCaseAlternatives, StgExpr, UpdateFlag(..))
import TyCon(TyCon)
import UniType(UniType)
import UniqFM(UniqFM)
import UniqSet(UniqSet(..))
import Unique(Unique)
data AbstractC 
data CAddrMode 
data MagicId 
data CLabel 
data CgIdInfo 
data CgInfoDownwards 
data CgState 
data ClosureInfo 
data CompilationInfo 
data EntryConvention   = ViaNode | StdEntry CLabel (Labda CLabel) | DirectEntry CLabel Int [MagicId]
type FCode a = CgInfoDownwards -> CgState -> (a, CgState)
data HeapOffset 
type DataCon = Id
data Id 
data Labda a 
data LambdaFormInfo 
data PrimKind 
data SMRep 
type PlainStgAtom = StgAtom Id
type PlainStgExpr = StgExpr Id Id
type PlainStgLiveVars = UniqFM Id
data StandardFormInfo 
data StgAtom a 
data StgBinderInfo 
data StgExpr a b 
data UpdateFlag   = ReEntrant | Updatable | SingleEntry
data TyCon 
data UniqFM a 
type UniqSet a = UniqFM a
allocProfilingMsg :: ClosureInfo -> _PackedString
blackHoleClosureInfo :: ClosureInfo -> ClosureInfo
blackHoleOnEntry :: Bool -> ClosureInfo -> Bool
closureGoodStuffSize :: ClosureInfo -> Int
closureHdrSize :: ClosureInfo -> HeapOffset
closureId :: ClosureInfo -> Id
closureKind :: ClosureInfo -> [Char]
closureLFInfo :: ClosureInfo -> LambdaFormInfo
closureLabelFromCI :: ClosureInfo -> CLabel
closureNonHdrSize :: ClosureInfo -> Int
closurePtrsSize :: ClosureInfo -> Int
closureReturnsUnboxedType :: ClosureInfo -> Bool
closureSMRep :: ClosureInfo -> SMRep
closureSemiTag :: ClosureInfo -> Int
closureSingleEntry :: ClosureInfo -> Bool
closureSize :: ClosureInfo -> HeapOffset
closureSizeWithoutFixedHdr :: ClosureInfo -> HeapOffset
closureType :: ClosureInfo -> Labda (TyCon, [UniType], [Id])
closureTypeDescr :: ClosureInfo -> [Char]
closureUpdReqd :: ClosureInfo -> Bool
dataConLiveness :: ((Int -> GlobalSwitch) -> Labda Int) -> ClosureInfo -> Int
entryLabelFromCI :: ClosureInfo -> CLabel
fastLabelFromCI :: ClosureInfo -> CLabel
fitsMinUpdSize :: ClosureInfo -> Bool
funInfoTableRequired :: Id -> StgBinderInfo -> LambdaFormInfo -> Bool
getEntryConvention :: Id -> LambdaFormInfo -> [PrimKind] -> CgInfoDownwards -> CgState -> (EntryConvention, CgState)
getSMInfoStr :: SMRep -> [Char]
getSMInitHdrStr :: SMRep -> [Char]
getSMUpdInplaceHdrStr :: SMRep -> [Char]
getStandardFormThunkInfo :: LambdaFormInfo -> Labda [StgAtom Id]
infoTableLabelFromCI :: ClosureInfo -> CLabel
isConstantRep :: SMRep -> Bool
isPhantomRep :: SMRep -> Bool
isSpecRep :: SMRep -> Bool
isStaticClosure :: ClosureInfo -> Bool
layOutDynClosure :: Id -> (a -> PrimKind) -> [a] -> LambdaFormInfo -> (ClosureInfo, [(a, HeapOffset)])
layOutDynCon :: Id -> (a -> PrimKind) -> [a] -> (ClosureInfo, [(a, HeapOffset)])
layOutPhantomClosure :: Id -> LambdaFormInfo -> ClosureInfo
layOutStaticClosure :: Id -> (a -> PrimKind) -> [a] -> LambdaFormInfo -> (ClosureInfo, [(a, HeapOffset)])
layOutStaticNoFVClosure :: Id -> LambdaFormInfo -> ClosureInfo
ltSMRepHdr :: SMRep -> SMRep -> Bool
maybeSelectorInfo :: ClosureInfo -> Labda (Id, Int)
mkClosureLFInfo :: Bool -> [Id] -> UpdateFlag -> [Id] -> StgExpr Id Id -> LambdaFormInfo
mkConLFInfo :: Id -> LambdaFormInfo
mkLFArgument :: LambdaFormInfo
mkLFImported :: Id -> LambdaFormInfo
mkLFLetNoEscape :: Int -> UniqFM Id -> LambdaFormInfo
mkVirtHeapOffsets :: SMRep -> (a -> PrimKind) -> [a] -> (Int, Int, [(a, HeapOffset)])
noUpdVapRequired :: StgBinderInfo -> Bool
nodeMustPointToIt :: LambdaFormInfo -> CgInfoDownwards -> CgState -> (Bool, CgState)
slopSize :: ClosureInfo -> Int
slowFunEntryCodeRequired :: Id -> StgBinderInfo -> Bool
staticClosureRequired :: Id -> StgBinderInfo -> LambdaFormInfo -> Bool
stdVapRequired :: StgBinderInfo -> Bool

