{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface CLabelInfo where
import CharSeq(CSeq)
import Id(Id)
import PreludePS(_PackedString)
import Pretty(PprStyle, PrettyRep)
import TyCon(TyCon)
import Unique(Unique)
data CLabel 
data Id 
data TyCon 
data Unique 
cSEP :: _PackedString
charToC :: Char -> [Char]
charToEasyHaskell :: Char -> [Char]
externallyVisibleCLabel :: CLabel -> Bool
identToC :: _PackedString -> Int -> Bool -> PrettyRep
isAsmTemp :: CLabel -> Bool
isReadOnly :: CLabel -> Bool
mkAltLabel :: Unique -> Int -> CLabel
mkAsmTempLabel :: Unique -> CLabel
mkBlackHoleInfoTableLabel :: CLabel
mkClosureLabel :: Id -> CLabel
mkConEntryLabel :: Id -> CLabel
mkConUpdCodePtrVecLabel :: TyCon -> Int -> CLabel
mkDefaultLabel :: Unique -> CLabel
mkErrorStdEntryLabel :: CLabel
mkFastEntryLabel :: Id -> Int -> CLabel
mkInfoTableLabel :: Id -> CLabel
mkInfoTableVecTblLabel :: TyCon -> CLabel
mkPhantomInfoTableLabel :: Id -> CLabel
mkRednCountsLabel :: Id -> CLabel
mkReturnPtLabel :: Unique -> CLabel
mkStaticConEntryLabel :: Id -> CLabel
mkStaticInfoTableLabel :: Id -> CLabel
mkStdEntryLabel :: Id -> CLabel
mkStdUpdCodePtrVecLabel :: TyCon -> Int -> CLabel
mkStdUpdVecTblLabel :: TyCon -> CLabel
mkVapEntryLabel :: Id -> Bool -> CLabel
mkVapInfoTableLabel :: Id -> Bool -> CLabel
mkVecTblLabel :: Unique -> CLabel
modnameToC :: _PackedString -> _PackedString
needsCDecl :: CLabel -> Bool
pprCLabel :: PprStyle -> CLabel -> CSeq
stringToC :: [Char] -> [Char]
instance Eq CLabel
instance Ord CLabel

