{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface NameTypes where
import Outputable(ExportFlag, NamedThing, Outputable)
import PreludePS(_PackedString)
import SrcLoc(SrcLoc)
import Unique(Unique)
data ExportFlag 
data FullName 
data Provenance   = ThisModule | InventedInThisModule | ExportedByPreludeCore | OtherPrelude _PackedString | OtherModule _PackedString [_PackedString] | HereInPreludeCore | OtherInstance _PackedString [_PackedString]
data ShortName 
data SrcLoc 
data Unique 
fromPrelude :: _PackedString -> Bool
invisibleFullName :: FullName -> Bool
mkFullName :: _PackedString -> _PackedString -> Provenance -> ExportFlag -> SrcLoc -> FullName
mkPreludeCoreName :: _PackedString -> _PackedString -> FullName
mkPrivateFullName :: _PackedString -> _PackedString -> Provenance -> ExportFlag -> SrcLoc -> FullName
mkShortName :: _PackedString -> SrcLoc -> ShortName
unlocaliseFullName :: FullName -> FullName
unlocaliseShortName :: _PackedString -> Unique -> ShortName -> FullName
instance NamedThing FullName
instance NamedThing ShortName
instance Outputable FullName
instance Outputable ShortName

