{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface RenameAuxFuns where
import Bag(Bag)
import Maybes(Labda)
import Name(Name)
import PreludePS(_PackedString)
import ProtoName(ProtoName)
data Bag a 
type GlobalNameFun = ProtoName -> Labda Name
type GlobalNameFuns = (ProtoName -> Labda Name, ProtoName -> Labda Name)
data Labda a 
type PreludeNameFun = _PackedString -> Labda Name
type PreludeNameFuns = (_PackedString -> Labda Name, _PackedString -> Labda Name)
data ProtoName 
mkGlobalNameFun :: _PackedString -> (_PackedString -> Labda Name) -> [(ProtoName, Name)] -> ProtoName -> Labda Name
mkNameFun :: Bag (_PackedString, a) -> (_PackedString -> Labda a, [[(_PackedString, a)]])

