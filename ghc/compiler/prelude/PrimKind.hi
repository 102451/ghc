{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface PrimKind where
import Id(DataCon(..), Id)
import Outputable(Outputable)
import TyCon(TyCon)
import UniType(UniType)
type DataCon = Id
data Id 
data PrimKind   = PtrKind | CodePtrKind | DataPtrKind | RetKind | InfoPtrKind | CostCentreKind | CharKind | IntKind | WordKind | AddrKind | FloatKind | DoubleKind | MallocPtrKind | StablePtrKind | ArrayKind | ByteArrayKind | VoidKind
data TyCon 
data UniType 
getKindInfo :: PrimKind -> ([Char], UniType, TyCon)
getKindSize :: PrimKind -> Int
guessPrimKind :: [Char] -> PrimKind
isFloatingKind :: PrimKind -> Bool
isFollowableKind :: PrimKind -> Bool
retKindSize :: Int
separateByPtrFollowness :: (a -> PrimKind) -> [a] -> ([a], [a])
showPrimKind :: PrimKind -> [Char]
instance Eq PrimKind
instance Ord PrimKind
instance Outputable PrimKind

