{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface AsmCodeGen where
import AbsCSyn(AbstractC)
import CmdLineOpts(GlobalSwitch, SwitchResult)
import SplitUniq(SUniqSM(..), SplitUniqSupply)
import Stdio(_FILE)
data AbstractC 
data GlobalSwitch 
data SwitchResult 
type SUniqSM a = SplitUniqSupply -> a
data SplitUniqSupply 
dumpRealAsm :: (GlobalSwitch -> SwitchResult) -> AbstractC -> SplitUniqSupply -> [Char]
writeRealAsm :: (GlobalSwitch -> SwitchResult) -> _FILE -> AbstractC -> SplitUniqSupply -> _State _RealWorld -> ((), _State _RealWorld)

