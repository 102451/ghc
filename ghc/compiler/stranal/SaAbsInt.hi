{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface SaAbsInt where
import CoreSyn(CoreExpr)
import Id(Id)
import IdInfo(Demand)
import SaLib(AbsVal, AbsValEnv, AnalysisKind)
import UniType(UniType)
absEval :: AnalysisKind -> CoreExpr Id Id -> AbsValEnv -> AbsVal
findDemand :: AbsValEnv -> AbsValEnv -> CoreExpr Id Id -> Id -> Demand
findStrictness :: (Bool, Bool) -> [UniType] -> AbsVal -> AbsVal -> [Demand]
fixpoint :: AnalysisKind -> [Id] -> [CoreExpr Id Id] -> AbsValEnv -> [AbsVal]
isBot :: AbsVal -> Bool
widen :: AnalysisKind -> AbsVal -> AbsVal

