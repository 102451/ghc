{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface UniqFM where
import Id(Id)
import Maybes(Labda)
import Outputable(NamedThing)
import TyVar(TyVar)
import Unique(Unique)
data Id 
data TyVar 
data UniqFM a 
data Unique 
addToUFM :: NamedThing a => UniqFM b -> a -> b -> UniqFM b
addToUFM_Directly :: UniqFM a -> Unique -> a -> UniqFM a
delFromUFM :: NamedThing a => UniqFM b -> a -> UniqFM b
delListFromUFM :: NamedThing a => UniqFM b -> [a] -> UniqFM b
eltsUFM :: UniqFM a -> [a]
emptyUFM :: UniqFM a
filterUFM :: (a -> Bool) -> UniqFM a -> UniqFM a
intersectUFM :: UniqFM a -> UniqFM a -> UniqFM a
isNullUFM :: UniqFM a -> Bool
listToUFM :: NamedThing a => [(a, b)] -> UniqFM b
listToUFM_Directly :: [(Unique, a)] -> UniqFM a
lookupDirectlyUFM :: UniqFM a -> Unique -> Labda a
lookupUFM :: NamedThing a => UniqFM b -> a -> Labda b
mapUFM :: (a -> b) -> UniqFM a -> UniqFM b
minusUFM :: UniqFM a -> UniqFM a -> UniqFM a
plusUFM :: UniqFM a -> UniqFM a -> UniqFM a
plusUFM_C :: (a -> a -> a) -> UniqFM a -> UniqFM a -> UniqFM a
singletonDirectlyUFM :: Unique -> a -> UniqFM a
singletonUFM :: NamedThing a => a -> b -> UniqFM b
sizeUFM :: UniqFM a -> Int
ufmToList :: UniqFM a -> [(Unique, a)]

