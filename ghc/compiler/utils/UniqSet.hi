{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface UniqSet where
import Id(Id)
import Name(Name)
import NameTypes(FullName, ShortName)
import Outputable(NamedThing)
import PreludePS(_PackedString)
import TyCon(TyCon)
import TyVar(TyVar)
import UniqFM(UniqFM)
import Unique(Unique)
data Id 
type IdSet = UniqFM Id
data Name 
type NameSet = UniqFM Name
data TyVar 
type TyVarSet = UniqFM TyVar
data UniqFM a 
type UniqSet a = UniqFM a
data Unique 
elementOfUniqSet :: NamedThing a => a -> UniqFM a -> Bool
emptyUniqSet :: UniqFM a
intersectUniqSets :: UniqFM a -> UniqFM a -> UniqFM a
isEmptyUniqSet :: UniqFM a -> Bool
mapUniqSet :: NamedThing b => (a -> b) -> UniqFM a -> UniqFM b
minusUniqSet :: UniqFM a -> UniqFM a -> UniqFM a
mkUniqSet :: NamedThing a => [a] -> UniqFM a
singletonUniqSet :: NamedThing a => a -> UniqFM a
unionManyUniqSets :: [UniqFM a] -> UniqFM a
unionUniqSets :: UniqFM a -> UniqFM a -> UniqFM a
uniqSetToList :: UniqFM a -> [a]

