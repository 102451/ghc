{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface CoreLift where
import BasicLit(BasicLit)
import CoreSyn(CoreAtom, CoreBinding, CoreCaseAlternatives, CoreExpr)
import CostCentre(CostCentre)
import Id(Id)
import PlainCore(PlainCoreBinding(..), PlainCoreExpr(..))
import PrimOps(PrimOp)
import SplitUniq(SplitUniqSupply)
import TyVar(TyVar)
import UniType(UniType)
import Unique(Unique)
data CoreBinding a b 
data CoreExpr a b 
data Id 
type PlainCoreBinding = CoreBinding Id Id
type PlainCoreExpr = CoreExpr Id Id
data SplitUniqSupply 
data Unique 
applyBindUnlifts :: [CoreExpr Id Id -> CoreExpr Id Id] -> CoreExpr Id Id -> CoreExpr Id Id
bindUnlift :: Id -> Id -> CoreExpr Id Id -> CoreExpr Id Id
liftCoreBindings :: SplitUniqSupply -> [CoreBinding Id Id] -> [CoreBinding Id Id]
liftExpr :: Id -> CoreExpr Id Id -> CoreExpr Id Id
mkLiftedId :: Id -> Unique -> (Id, Id)

