{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface TcMatches where
import Bag(Bag)
import CmdLineOpts(GlobalSwitch)
import E(E)
import HsMatches(Match)
import HsPat(InPat, TypecheckedPat)
import Id(Id)
import LIE(LIE)
import Name(Name)
import Pretty(PprStyle, PrettyRep)
import SplitUniq(SplitUniqSupply)
import SrcLoc(SrcLoc)
import Subst(Subst)
import TcMonad(TcResult)
import UniType(UniType)
tcMatch :: E -> Match Name (InPat Name) -> (GlobalSwitch -> Bool) -> [UniType] -> Subst -> SplitUniqSupply -> Bag (PprStyle -> Int -> Bool -> PrettyRep) -> SrcLoc -> TcResult (Match Id TypecheckedPat, LIE, UniType)
tcMatchesCase :: E -> [Match Name (InPat Name)] -> (GlobalSwitch -> Bool) -> [UniType] -> Subst -> SplitUniqSupply -> Bag (PprStyle -> Int -> Bool -> PrettyRep) -> SrcLoc -> TcResult ([Match Id TypecheckedPat], LIE, UniType)
tcMatchesFun :: E -> Name -> UniType -> [Match Name (InPat Name)] -> (GlobalSwitch -> Bool) -> [UniType] -> Subst -> SplitUniqSupply -> Bag (PprStyle -> Int -> Bool -> PrettyRep) -> SrcLoc -> TcResult ([Match Id TypecheckedPat], LIE)

