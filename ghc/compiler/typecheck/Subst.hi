{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Subst where
import Bag(Bag)
import Class(Class)
import Maybes(Labda)
import PreludeGlaST(_MutableArray)
import TyCon(TyCon)
import TyVar(TyVar, TyVarTemplate)
import UniType(UniType)
import Unique(Unique)
data Subst 
data SubstResult   = SubstOK | OccursCheck TyVar UniType | AlreadyBound UniType
data TyVar 
data UniType 
applySubstToThetaTy :: Subst -> [(Class, UniType)] -> (Subst, [(Class, UniType)])
applySubstToTy :: Subst -> UniType -> (Subst, UniType)
applySubstToTyVar :: Subst -> TyVar -> (Subst, UniType)
combineSubstUndos :: Subst -> Subst
extendSubst :: TyVar -> UniType -> Subst -> (Subst, SubstResult)
getSubstTyVarUnique :: Subst -> (Subst, Unique)
getSubstTyVarUniques :: Int -> Subst -> (Subst, [Unique])
mkEmptySubst :: Int -> Subst
pushSubstUndos :: Subst -> Subst
undoSubstUndos :: Subst -> Subst

