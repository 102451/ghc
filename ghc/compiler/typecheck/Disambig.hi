{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface Disambig where
import Bag(Bag)
import Class(Class)
import CmdLineOpts(GlobalSwitch)
import ErrUtils(Error(..))
import Id(Id)
import Inst(Inst, InstOrigin, OverloadedLit)
import Pretty(PprStyle, Pretty(..), PrettyRep)
import SplitUniq(SplitUniqSupply)
import SrcLoc(SrcLoc)
import Subst(Subst)
import TcMonad(TcResult)
import UniType(UniType)
import Unique(Unique, UniqueSupply)
data Bag a 
type Error = PprStyle -> Int -> Bool -> PrettyRep
data Inst 
data PprStyle 
type Pretty = Int -> Bool -> PrettyRep
data PrettyRep 
data SrcLoc 
data Subst 
data TcResult a 
data UniqueSupply 
disambiguateDicts :: [Inst] -> (GlobalSwitch -> Bool) -> [UniType] -> Subst -> SplitUniqSupply -> Bag (PprStyle -> Int -> Bool -> PrettyRep) -> SrcLoc -> TcResult ()

