{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface TcClassDcl where
import Bag(Bag)
import Class(Class, ClassOp)
import CmdLineOpts(GlobalSwitch)
import E(E)
import HsBinds(Binds, MonoBinds)
import HsDecls(ClassDecl)
import HsPat(InPat, TypecheckedPat)
import Id(Id)
import IdInfo(SpecEnv)
import InstEnv(InstTemplate)
import LIE(LIE)
import Name(Name)
import Pretty(PprStyle, PrettyRep)
import SplitUniq(SplitUniqSupply)
import SrcLoc(SrcLoc)
import Subst(Subst)
import TcMonad(TcResult)
import UniType(UniType)
import UniqFM(UniqFM)
data ClassInfo 
tcClassDecls1 :: E -> (Class -> ([(UniType, InstTemplate)], ClassOp -> SpecEnv)) -> [ClassDecl Name (InPat Name)] -> (GlobalSwitch -> Bool) -> [UniType] -> Subst -> SplitUniqSupply -> Bag (PprStyle -> Int -> Bool -> PrettyRep) -> SrcLoc -> TcResult ([ClassInfo], UniqFM Class, [(Name, Id)])
tcClassDecls2 :: E -> [ClassInfo] -> (GlobalSwitch -> Bool) -> [UniType] -> Subst -> SplitUniqSupply -> Bag (PprStyle -> Int -> Bool -> PrettyRep) -> SrcLoc -> ((LIE, Binds Id TypecheckedPat), Subst, Bag (PprStyle -> Int -> Bool -> PrettyRep))

