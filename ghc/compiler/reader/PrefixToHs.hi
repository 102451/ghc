{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface PrefixToHs where
import HsBinds(Binds, MonoBinds, Sig)
import HsDecls(ClassDecl, DataTypeSig, DefaultDecl, InstDecl, SpecialisedInstanceSig, TyDecl)
import HsImpExp(IfaceImportDecl)
import HsMatches(Match)
import HsPat(InPat)
import PrefixSyn(RdrBinding, RdrMatch)
import PreludePS(_PackedString)
import ProtoName(ProtoName)
cvBinds :: _PackedString -> (RdrBinding -> [Sig ProtoName]) -> RdrBinding -> Binds ProtoName (InPat ProtoName)
cvClassOpSig :: RdrBinding -> [Sig ProtoName]
cvInstDeclSig :: RdrBinding -> [Sig ProtoName]
cvInstDecls :: Bool -> _PackedString -> _PackedString -> [_PackedString -> _PackedString -> Bool -> InstDecl ProtoName (InPat ProtoName)] -> [InstDecl ProtoName (InPat ProtoName)]
cvMatches :: _PackedString -> Bool -> [RdrMatch] -> [Match ProtoName (InPat ProtoName)]
cvMonoBinds :: _PackedString -> [RdrBinding] -> MonoBinds ProtoName (InPat ProtoName)
cvSepdBinds :: _PackedString -> (RdrBinding -> [Sig ProtoName]) -> [RdrBinding] -> Binds ProtoName (InPat ProtoName)
cvValSig :: RdrBinding -> [Sig ProtoName]
sepDeclsForInterface :: RdrBinding -> ([TyDecl ProtoName], [ClassDecl ProtoName (InPat ProtoName)], [_PackedString -> _PackedString -> Bool -> InstDecl ProtoName (InPat ProtoName)], [RdrBinding], [IfaceImportDecl])
sepDeclsForTopBinds :: RdrBinding -> ([TyDecl ProtoName], [DataTypeSig ProtoName], [ClassDecl ProtoName (InPat ProtoName)], [_PackedString -> _PackedString -> Bool -> InstDecl ProtoName (InPat ProtoName)], [SpecialisedInstanceSig ProtoName], [DefaultDecl ProtoName], [RdrBinding])
sepDeclsIntoSigsAndBinds :: RdrBinding -> ([RdrBinding], [RdrBinding])

