

================================================================================
Typechecked:
{- nonrec -}
{- nonrec -}
E1{-r3B,x-}{i} =
    _/\_ a{-r3t-} ->
	E1{-r3B,x-}{i}
	    {_@_ a{-r3t-}}
{- nonrec -}
C1{-r6,x-}{i} =
    _/\_ a{-r3v-} b{-r3w-} -> \ tpl_B1 ->
	C1{-r6,x-}{i}
	    {_@_ a{-r3v-} _@_ b{-r3w-} tpl_B1}
C2{-r5,x-}{i} =
    _/\_ a{-r3v-} b{-r3w-} -> \ tpl_B1 ->
	C2{-r5,x-}{i}
	    {_@_ a{-r3v-} _@_ b{-r3w-} tpl_B1}
{- rec -}
AbsBinds [a{-a1a9-}] [] [([a{-a1a9-}], $d3{-r1ag,x-}, d.Eval_a14Q)]
    d.Eval_a14Q =
	({-dict-} [] [])
{- rec -}
AbsBinds
[a{-a1aa-}, b{-a1ab-}]
[]
[([a{-a1aa-}, b{-a1ab-}], $d4{-r1aw,x-}, d.Eval_a14X)]
    d.Eval_a14X =
	({-dict-} [] [])
{- rec -}
AbsBinds
[a{-a16r-}, b{-a16s-}]
[d.Eq_a16W]
[([a{-a16r-}, b{-a16s-}], $d5{-r1ax,x-}, d.Read_a154)]
    d.Eq_a17c =
	d.Eq_a16W
    d.Read_a17a =
	$d1{-r1aD,x-}
	    a{-a16r-}
	    d.Eq_a17c
    readsPrec_a1aC =
	PrelRead.readsPrec{-r62,p-}
	    (T{-r3C,x-} a{-a16r-})
	    d.Read_a17a
    d.Eq_a17p =
	d.Eq_a16W
    d.Eq_a17n =
	PrelBase.$d27{-rf7,p-}
	    a{-a16r-}
	    d.Eq_a17p
    d.Read_a17l =
	$d5{-r1ax,x-}
	    [[a{-a16r-}], [b{-a16s-}]]
	    d.Eq_a17n
    readsPrec_a1aB =
	PrelRead.readsPrec{-r62,p-}
	    (Z{-r3D,x-} [a{-a16r-}] [b{-a16s-}])
	    d.Read_a17l
    readsPrec_a1aA =
	readsPrec_a1az
    AbsBinds [] [] [([], readsPrec_a1az, readsPrec_a157)]
	>_a1aK =
	    >_a1au
	lit_a1aJ =
	    lit_a1as
	==_a1aI =
	    ==_a1ar
	lit_a1aH =
	    lit_a1ap
	>>=_a1aG =
	    >>=_a1ao
	return_a1aF =
	    return_a1an
	zero_a1aE =
	    zero_a1am
	readsPrec_a157
	    a_r12I b_r12K
		    =   ++_a1av
			    (Z{-r3D,x-} a{-a16r-} b{-a16s-}, PrelBase.String{-r7r,p-})
			    (PrelRead.readParen{-r6E,p-}
				 (Z{-r3D,x-} a{-a16r-} b{-a16s-})
				 a_r12I >_a1au lit_a1as
				 \ c_r12M  ->  [ (C1{-r6,x-}{i}
						      [a{-a16r-}, b{-a16s-}]
						      a1_r12Q,
						  b1_r12R) |
						   ("C1", d_r12O) <- PrelRead.lex{-r6r,p-}
									 c_r12M, (a1_r12Q, b1_r12R) <- readsPrec_a1aC
													   lit_a1ap
													   d_r12O
						   ]
				 b_r12K)
			    (PrelRead.readParen{-r6E,p-}
				 (Z{-r3D,x-} a{-a16r-} b{-a16s-})
				 a_r12I >_a1aK lit_a1aJ
				 \ c_r12T  ->  [ (C2{-r5,x-}{i}
						      [a{-a16r-}, b{-a16s-}]
						      a1_r12X,
						  b1_r12Y) |
						   ("C2", d_r12V) <- PrelRead.lex{-r6r,p-}
									 c_r12T, (a1_r12X, b1_r12Y) <- readsPrec_a1aB
													   lit_a1aH
													   d_r12V
						   ]
				 b_r12K)
    AbsBinds [] [] [([], readList_a1ay, readList_a16R)]
	readList_a16R
		    =   PrelRead.readList__{-r3A,p-}
			    (Z{-r3D,x-} a{-a16r-} b{-a16s-})
			    readsPrec_a1aA
				lit_a1ak
    d.Read_a154 =
	({-dict-} [] [readsPrec_a1az, readList_a1ay])
{- rec -}
AbsBinds
[a{-a17H-}, b{-a17K-}]
[d.Eq_a18v]
[([a{-a17H-}, b{-a17K-}], $d6{-r1aL,x-}, d.Show_a17y)]
    d.Eq_a18H =
	d.Eq_a18v
    d.Show_a18F =
	$d2{-r1aR,x-}
	    a{-a17H-}
	    d.Eq_a18H
    showsPrec_a1aQ =
	PrelBase.showsPrec{-rgT,p-}
	    (T{-r3C,x-} a{-a17H-})
	    d.Show_a18F
    d.Eq_a18N =
	d.Eq_a18v
    d.Eq_a18L =
	PrelBase.$d27{-rf7,p-}
	    a{-a17H-}
	    d.Eq_a18N
    d.Show_a18J =
	$d6{-r1aL,x-}
	    [[a{-a17H-}], [b{-a17K-}]]
	    d.Eq_a18L
    showsPrec_a1aP =
	PrelBase.showsPrec{-rgT,p-}
	    (Z{-r3D,x-} [a{-a17H-}] [b{-a17K-}])
	    d.Show_a18J
    showsPrec_a1aO =
	showsPrec_a1aN
    AbsBinds [] [] [([], showsPrec_a1aN, showsPrec_a17B)]
	lit_a1aV =
	    lit_a1ai
	>=_a1aU =
	    >=_a1aj
	lit_a1aT =
	    lit_a1ai
	lit_a1aS =
	    lit_a1ai
	showsPrec_a17B
	    a_r135 (C1{-r6,x-}{i} b1_r137)
		    =   PrelBase.showParen{-rlt,p-}
			    a_r135 >=_a1aj lit_a1ai
			    PrelBase..{-rgC,p-}
				[PrelBase.String{-r7r,p-}, PrelBase.String{-r7r,p-}, PrelBase.String{-r7r,p-}]
				PrelBase.showString{-rlw,p-}
				    "C1 "
				showsPrec_a1aQ
				    lit_a1aV b1_r137
	showsPrec_a17B
	    a_r139 (C2{-r5,x-}{i} b1_r13b)
		    =   PrelBase.showParen{-rlt,p-}
			    a_r139 >=_a1aU lit_a1aT
			    PrelBase..{-rgC,p-}
				[PrelBase.String{-r7r,p-}, PrelBase.String{-r7r,p-}, PrelBase.String{-r7r,p-}]
				PrelBase.showString{-rlw,p-}
				    "C2 "
				showsPrec_a1aP
				    lit_a1aS b1_r13b
    AbsBinds [] [] [([], showList_a1aM, showList_a18q)]
	showList_a18q
		    =   PrelBase.showList__{-rlr,p-}
			    (Z{-r3D,x-} a{-a17H-} b{-a17K-})
			    showsPrec_a1aO
				lit_a1ah
    d.Show_a17y =
	({-dict-} [] [showsPrec_a1aN, showList_a1aM])
{- rec -}
AbsBinds
[a{-a191-}]
[d.Eq_a199]
[([a{-a191-}], $d1{-r1aD,x-}, d.Read_a18V)]
    d.Read_a19d =
	d.Read_a18V
    $mreadList_a1aX =
	PrelRead.$mreadList{-r5Y,p-}
	    (T{-r3C,x-} a{-a191-})
	    d.Read_a19d
    AbsBinds [] [] [([], readsPrec_a1aW, readsPrec_a18Y)]
	readsPrec_a18Y
	    =   IOBase.error{-87,p-}
		    (PrelBase.Int{-3g,p-}
		     -> PrelBase.String{-r7r,p-}
		     -> [(T{-r3C,x-} a{-a191-}, PrelBase.String{-r7r,p-})])
		    "read"
    AbsBinds [] [] [([], readList_a194, readList_a196)]
	readList_a196
	    =   $mreadList_a1aX
    d.Read_a18V =
	({-dict-} [] [readsPrec_a1aW, readList_a194])
{- rec -}
AbsBinds
[a{-a19q-}]
[d.Eq_a19y]
[([a{-a19q-}], $d2{-r1aR,x-}, d.Show_a19k)]
    d.Show_a19C =
	d.Show_a19k
    $mshowList_a1aZ =
	PrelBase.$mshowList{-rgb,p-}
	    (T{-r3C,x-} a{-a19q-})
	    d.Show_a19C
    AbsBinds [] [] [([], showsPrec_a1aY, showsPrec_a19n)]
	showsPrec_a19n
	    =   IOBase.error{-87,p-}
		    (PrelBase.Int{-3g,p-}
		     -> T{-r3C,x-} a{-a19q-}
		     -> PrelBase.String{-r7r,p-}
		     -> PrelBase.String{-r7r,p-})
		    "show"
    AbsBinds [] [] [([], showList_a19t, showList_a19v)]
	showList_a19v
	    =   $mshowList_a1aZ
    d.Show_a19k =
	({-dict-} [] [showsPrec_a1aY, showList_a19t])
{- nonrec -}
d.MonadPlus_a19F =
    PrelBase.$d22{-rf2,p-}
++_a1av =
    PrelBase.++{-rjn,p-}
	PrelBase.[]{-3j,p-}
	d.MonadPlus_a19F
d.Ord_a19I =
    PrelBase.$d6{-rfF,p-}
>_a1au =
    PrelBase.>{-rgQ,p-}
	PrelBase.Int{-3g,p-}
	d.Ord_a19I
d.Num_a19M =
    PrelBase.$d3{-rfa,p-}
fromInt_a1at =
    PrelBase.fromInt{-8R,p-}
	PrelBase.Int{-3g,p-}
	d.Num_a19M
lit_a1as =
    fromInt_a1at
	PrelBase.I#{-5b,p-}{i}
	    9#
d.Eq_a19R =
    PrelBase.$d33{-rfe,p-}
d.Eq_a19P =
    PrelBase.$d27{-rf7,p-}
	PrelBase.Char{-38,p-}
	d.Eq_a19R
==_a1ar =
    PrelBase.=={-8Y,p-}
	[PrelBase.Char{-38,p-}]
	d.Eq_a19P
fromInt_a1aq =
    fromInt_a1at
lit_a1ap =
    fromInt_a1aq
	PrelBase.I#{-5b,p-}{i}
	    10#
d.Monad_a19V =
    PrelBase.$d24{-rf4,p-}
>>=_a1ao =
    PrelBase.>>={-811,p-}
	PrelBase.[]{-3j,p-}
	d.Monad_a19V
d.Monad_a19Y =
    d.Monad_a19V
return_a1an =
    PrelBase.return{-816,p-}
	PrelBase.[]{-3j,p-}
	d.Monad_a19Y
d.MonadZero_a1a0 =
    PrelBase.$d23{-rf3,p-}
zero_a1am =
    PrelBase.zero{-810,p-}
	PrelBase.[]{-3j,p-}
	d.MonadZero_a1a0
fromInt_a1al =
    fromInt_a1at
lit_a1ak =
    fromInt_a1al
	PrelBase.I#{-5b,p-}{i}
	    0#
d.Ord_a1a4 =
    d.Ord_a19I
>=_a1aj =
    PrelBase.>={-8Z,p-}
	PrelBase.Int{-3g,p-}
	d.Ord_a1a4
lit_a1ai =
    lit_a1ap
lit_a1ah =
    lit_a1ak
ghc: module version changed to 1; reason: no old .hi file
