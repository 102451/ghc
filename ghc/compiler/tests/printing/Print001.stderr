

================================================================================
Typechecked:
{- nonrec -}
{- nonrec -}
{- nonrec -}
BarNil{-r4r,x-}{i} =
    _/\_ a{-r4O-} ->
	BarNil{-r4r,x-}{i}
	    {_@_ a{-r4O-}}
BarCon{-r4q,x-}{i} =
    _/\_ a{-r4O-} -> \ tpl_B1 tpl_B2 ->
	BarCon{-r4q,x-}{i}
	    {_@_ a{-r4O-} tpl_B1 tpl_B2}
{- nonrec -}
MkFoo{-r4U,x-}{i} =
    _/\_ d{-r4Q-} e{-r4R-} f{-r4S-} -> \ tpl_B1 tpl_B2 tpl_B3 ->
	MkFoo{-r4U,x-}{i}
	    {_@_ d{-r4Q-} _@_ e{-r4R-} _@_ f{-r4S-} tpl_B1 tpl_B2 tpl_B3}
{- rec -}
AbsBinds [a{-a15E-}] [] [([a{-a15E-}], $d1{-r15L,x-}, d.Eval_a15s)]
    d.Eval_a15s =
	({-dict-} [] [])
{- rec -}
AbsBinds
[d{-a15F-}, e{-a15H-}, f{-a15G-}]
[]
[([d{-a15F-}, e{-a15H-}, f{-a15G-}], $d2{-r15P,x-}, d.Eval_a15A)]
    d.Eval_a15A =
	({-dict-} [] [])
{- nonrec -}
d.Fractional_a15D =
    PrelNum.$d23{-rIo,p-}
fromRational_a15N =
    PrelNum.fromRational{-8T,p-}
	PrelBase.Float{-3c,p-}
	d.Fractional_a15D
lit_a15M =
    fromRational_a15N
	2.0000000000000000
{- nonrec -}
AbsBinds
[a{-a14B-}, b{-a14C-}]
[]
[([b{-a14C-}, a{-a14B-}], g{-r4F,x-}, g_a14y)]
    g_a14y
	x_r4M   =   lit_a15M
{- nonrec -}
{- nonrec -}
AbsBinds
[a{-a14R-}, b{-a14S-}, c{-a14T-}]
[d.Eq_a14V, d.Ord_a14W, d.Ix_a14X]
[([a{-a14R-}, b{-a14S-}, c{-a14T-}], f2{-r4E,x-}, f2_a14O)]
    f2_a14O
	x_r4K   =   x_r4K
{- nonrec -}
{- nonrec -}
AbsBinds
[a{-a158-}, b{-a159-}, c{-a15a-}]
[d.Eq_a15c]
[([a{-a158-}, b{-a159-}, c{-a15a-}], f{-r4D,x-}, f_a155)]
    f_a155
	x_r4I   =   x_r4I
{- nonrec -}
{- nonrec -}
AbsBinds
[d{-a15i-}, e{-a15k-}, f{-a15m-}]
[]
[([d{-a15i-}, e{-a15k-}, f{-a15m-}], mkFoo{-r4G,x-}, mkFoo_a15e)]
    mkFoo_a15e
	=   MkFoo{-r4U,x-}{i}
		[d{-a15i-}, e{-a15k-}, f{-a15m-}]
{- nonrec -}
ghc: module version changed to 1; reason: no old .hi file
_interface_ Print001 1
_instance_modules_
ArrBase IO PrelNum
_usages_
Ix 1 :: $d3 1 $d4 1 $d5 1 $d6 1 $d7 1 $d8 1 $d9 1 $minRange 1 $mindex 1 $mrange 1 Ix 1;
PrelBase 1 :: $d1 1 $d10 1 $d11 1 $d13 1 $d14 1 $d15 1 $d2 1 $d21 1 $d26 1 $d27 1 $d3 1 $d30 1 $d31 1 $d32 1 $d33 1 $d34 1 $d37 1 $d38 1 $d39 1 $d40 1 $d41 1 $d42 1 $d44 1 $d45 1 $d46 1 $d49 1 $d5 1 $d50 1 $d51 1 $d54 1 $d55 1 $d6 1 $d7 1 $d8 1 $m* 1 $m+ 1 $m- 1 $m/= 1 $m< 1 $m<= 1 $m== 1 $m> 1 $m>= 1 $mabs 1 $mcompare 1 $menumFrom 1 $menumFromThen 1 $menumFromThenTo 1 $menumFromTo 1 $mfromEnum 1 $mfromInt 1 $mfromInteger 1 $mmax 1 $mmin 1 $mnegate 1 $mshowList 1 $mshowsPrec 1 $msignum 1 $mtoEnum 1 Enum 1 Eq 1 Eval 1 Num 1 Ord 1 Ordering 1 Show 1 String 1;
PrelNum 1 :: $d1 1 $d10 1 $d14 1 $d15 1 $d16 1 $d17 1 $d18 1 $d19 1 $d2 1 $d23 1 $d24 1 $d25 1 $d26 1 $d27 1 $d28 1 $d29 1 $d30 1 $d31 1 $d32 1 $d33 1 $d34 1 $d35 1 $d36 1 $d37 1 $d38 1 $d39 1 $d4 1 $d5 1 $d6 1 $d7 1 $d8 1 $d9 1 $m/ 1 $mdiv 1 $mdivMod 1 $mfromRational 1 $mmod 1 $mquot 1 $mquotRem 1 $mrecip 1 $mrem 1 $mtoInt 1 $mtoInteger 1 $mtoRational 1 Fractional 1 Integral 1 Ratio 1 Rational 1 Real 1;
PrelTup 1 :: $d10 1 $d13 1 $d14 1 $d3 1 $d4 1 $d49 1 $d50 1 $d9 1;
_exports_
Print001 f f2 g mkFoo Bar(BarNil BarCon) Foo(MkFoo);
_instances_
instance _forall_ [a] => {PrelBase.Eval (Bar a)} = $d1;
instance _forall_ [a b c] => {PrelBase.Eval (Foo a b c)} = $d2;
_declarations_
1 $d1 _:_ _forall_ [a] => {PrelBase.Eval (Bar a)} ;;
1 $d2 _:_ _forall_ [a b c] => {PrelBase.Eval (Foo a b c)} ;;
1 data Bar r4O = BarNil |  BarCon (Foo r4O r4O r4O) (Bar r4O) ;
1 data Foo r4Q r4R r4S = MkFoo [((r4Q -> PrelBase.Int) -> r4Q) -> r4R] (r4Q -> r4R, r4R -> r4R) PrelBase.() ;
1 f _:_ _forall_ [a b c] {PrelBase.Eq a} => (a -> b -> c) -> a -> b -> c ;;
1 f2 _:_ _forall_ [a b c] {PrelBase.Eq a, PrelBase.Ord a, Ix.Ix c} => (a -> b -> c) -> a -> b -> c ;;
1 g _:_ _forall_ [a b] => Foo PrelBase.Int (b -> a) (b -> [(b, PrelBase.Double, PrelBase.Int)]) -> PrelBase.Float ;;
1 mkFoo _:_ _forall_ [a b c] => [((a -> PrelBase.Int) -> a) -> b] -> (a -> b, b -> b) -> PrelBase.() -> Foo a b c ;;
