

--================================================================================
Typechecked:
{- nonrec -}
d.Num_aHp =
    PrelBase.$d3{-rb7,p-}
+_aHu =
    PrelBase.+{-rR,p-}
	PrelBase.Int{-3g,p-}
	d.Num_aHp
d.Num_aHt =
    d.Num_aHp
fromInt_aHC =
    PrelBase.fromInt{-8R,p-}
	PrelBase.Int{-3g,p-}
	d.Num_aHt
lit_aHB =
    fromInt_aHC PrelBase.I#{-5b,p-}{i} 1#
fromInt_aHA =
    fromInt_aHC
lit_aHz =
    fromInt_aHA PrelBase.I#{-5b,p-}{i} 0#
fromInt_aHy =
    fromInt_aHC
lit_aHv =
    fromInt_aHy PrelBase.I#{-5b,p-}{i} 2#
{- nonrec -}
AbsBinds [] [] [([], j{-rV,x-}, j_aGI)]
    j_aGI
	=   lit_aHv
{- nonrec -}
{- rec -}
AbsBinds [] [] [([], k{-rU,x-}, k_aGS), ([], l{-rT,x-}, l_aGT)]
    k_aGS
	=   PrelBase.:{-55,p-}{i}
		PrelBase.Int{-3g,p-}
		lit_aHB
		(PrelBase.:{-55,p-}{i}
		     PrelBase.Int{-3g,p-}
		     j{-rV,x-} l_aGT)
    l_aGT
	=   PrelBase.:{-55,p-}{i}
		PrelBase.Int{-3g,p-}
		lit_aHz k_aGS
{- nonrec -}
{- nonrec -}
AbsBinds [] [] [([], m{-rS,x-}, m_aHb)]
    m_aHb
	=   j{-rV,x-} +_aHu j{-rV,x-}
{- nonrec -}
ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d1 1 $d11 1 $d15 1 $d2 1 $d21 1 $d27 1 $d3 1 $d32 1 $d33 1 $d37 1 $d38 1 $d39 1 $d41 1 $d42 1 $d44 1 $d46 1 $d54 1 $d7 1 $d8 1 Eq 1 Eval 1 Num 1 Show 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d18 1 $d29 1 $d33 1 $d35 1;
_exports_
ShouldSucceed j k l m;
_declarations_
1 j _:_ PrelBase.Int ;;
1 k _:_ [PrelBase.Int] ;;
1 l _:_ [PrelBase.Int] ;;
1 m _:_ PrelBase.Int ;;
