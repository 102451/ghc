

--================================================================================
Typechecked:
{- nonrec -}
deq{-r3G,x-} =
    _/\_ a{-r3E-} -> \ tpl_B1 ->
	tpl_B1
{- nonrec -}
AbsBinds
[a{-aoL-}]
[d.Eq1_aoE]
[([a{-aoL-}], $mdeq{-rnK,x-}, deq_aoG)]
    AbsBinds [] [] [([], deq_aoG, deq_aoI)]
	deq_aoI
	    =   GHCerr.noDefaultMethodError{-8k,p-}
		    (a{-aoL-}
		     -> a{-aoL-}
		     -> PrelBase.Bool{-34,p-}) "Class Eq1 Method deq"
{- rec -}
AbsBinds
[a{-ao9-}]
[d.Eq1_aol]
[([a{-ao9-}], $d1{-roM,x-}, d.Eq1_anZ)]
    d.Eq1_aop =
	d.Eq1_aol
    deq_aoP =
	deq{-r3G,x-}
	    a{-ao9-}
	    d.Eq1_aop
    deq_aoO =
	deq_aoN
    AbsBinds [] [] [([], deq_aoN, deq_ao2)]
	deq_ao2
	    (a_r3p PrelBase.:{-55,p-}{i} as_r3q)
	    (b_r3s PrelBase.:{-55,p-}{i} bs_r3t)
		    =   if deq_aoP a_r3p b_r3s then
			    deq_aoO as_r3q bs_r3t
			else
			    PrelBase.False{-58,p-}{i}
    d.Eq1_anZ =
	({-dict-} [] [deq_aoN])
{- rec -}
AbsBinds [] [] [([], $d2{-roQ,x-}, d.Eq1_aov)]
    AbsBinds [] [] [([], deq_aoR, deq_aoy)]
	deq_aoy
	    x_r3z y_r3B
		    =   PrelBase.True{-5E,p-}{i}
    d.Eq1_aov =
	({-dict-} [] [deq_aoR])
{- nonrec -}
{- nonrec -}
AbsBinds [t{-anH-}] [d.Eq1_anT] [([t{-anH-}], f{-r3F,x-}, f_anB)]
    d.Eq1_anR =
	$d1{-roM,x-}
	    t{-anH-}
	    d.Eq1_anT
    deq_aoS =
	deq{-r3G,x-}
	    [t{-anH-}]
	    d.Eq1_anR
    f_anB
	x_r3f (y_r3h PrelBase.:{-55,p-}{i} ys_r3i)
		=   deq_aoS x_r3f ys_r3i
{- nonrec -}
tc062.hs:10: 
    Warning: Possibly incomplete patterns
	in the definition of function `deq'
tc062.hs:12: 
    Warning: Possibly incomplete patterns
	in the definition of function `f'
ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_exports_
ShouldSucceed f Eq1(deq);
_instances_
instance _forall_ [a] {Eq1 a} => {Eq1 [a]} = $d1;
instance {Eq1 PrelBase.Int} = $d2;
_declarations_
1 $d1 _:_ _forall_ [a] {Eq1 a} => {Eq1 [a]} ;;
1 $d2 _:_ {Eq1 PrelBase.Int} ;;
1 $mdeq _:_ _forall_ [a] {Eq1 a} => a -> a -> PrelBase.Bool ;;
1 class Eq1 r3E where {deq :: r3E -> r3E -> PrelBase.Bool} ;
1 f _:_ _forall_ [a] {Eq1 a} => [a] -> [a] -> PrelBase.Bool ;;
