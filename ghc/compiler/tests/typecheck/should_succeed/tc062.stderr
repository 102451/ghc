Typechecked:
{- nonrec -}
ShouldSucceed.Eq1.deq = /\ a.t28 -> \{-classdict-} [] [deq.t29] -> deq.t29
{- nonrec -}
defm.ShouldSucceed.Eq1.deq =
    /\ a.t30 ->
	\{-dict-} d.ShouldSucceed.Eq1.t31 ->
	    (error (a.t30 -> a.t30 -> Bool))
		"No default method for \"ShouldSucceed.Eq1.defm.ShouldSucceed.Eq1.deq\"\n"
{- rec -}
dfun.ShouldSucceed.Eq1.Int = ({-dict-} [] [const.ShouldSucceed.Eq1.Int.deq])
const.ShouldSucceed.Eq1.Int.deq :: Int -> Int -> Bool
const.ShouldSucceed.Eq1.Int.deq
    x.r29 y.r30
	    = True
AbsBinds
[a.t12]
[d.ShouldSucceed.Eq1.t13]
[(d.ShouldSucceed.Eq1.t14, dfun.ShouldSucceed.Eq1.List)]
    (d.ShouldSucceed.Eq1.t26, d.ShouldSucceed.Eq1.t14)
    (ShouldSucceed.Eq1.deq.t25,
	ShouldSucceed.Eq1.deq [a.t12] d.ShouldSucceed.Eq1.t26)
    (d.ShouldSucceed.Eq1.t27, d.ShouldSucceed.Eq1.t13)
    (ShouldSucceed.Eq1.deq.t23,
	ShouldSucceed.Eq1.deq a.t12 d.ShouldSucceed.Eq1.t27)
    {- rec -}
    d.ShouldSucceed.Eq1.t14 = ({-dict-} [] [deq.t15])
    deq.t15 :: [a.t12] -> [a.t12] -> Bool
    deq.t15
	(a.r32 : as.r33) (b.r34 : bs.r35)
		= if ShouldSucceed.Eq1.deq.t23 a.r32 b.r34 then
		      ShouldSucceed.Eq1.deq.t25 as.r33 bs.r35
		  else
		      False
AbsBinds [tt5] [d.ShouldSucceed.Eq1.t9] [(f.t1, ShouldSucceed.f)]
    (d.ShouldSucceed.Eq1.t8,
	dfun.ShouldSucceed.Eq1.List tt5 d.ShouldSucceed.Eq1.t9)
    (ShouldSucceed.Eq1.deq.t7,
	ShouldSucceed.Eq1.deq [tt5] d.ShouldSucceed.Eq1.t8)
    {- nonrec -}
    f.t1 :: [tt5] -> [tt5] -> Bool
    f.t1 x.r63 (y.r64 : ys.r65)
		 = ShouldSucceed.Eq1.deq.t7 x.r63 ys.r65

