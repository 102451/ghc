

--================================================================================
Typechecked:
{- nonrec -}
{- nonrec -}
AbsBinds [t{-aWp-}] [d.Num_aWs] [([t{-aWp-}], o{-r3h,x-}, o_aW8)]
    +_aWy =
	PrelBase.+{-r3g,p-}
	    t{-aWp-}
	    d.Num_aWs
    d.Num_aWv =
	d.Num_aWs
    fromInt_aWx =
	PrelBase.fromInt{-8R,p-}
	    t{-aWp-}
	    d.Num_aWv
    lit_aWw =
	fromInt_aWx PrelBase.I#{-5b,p-}{i} 1#
    o_aW8
	(PrelBase.True{-5E,p-}{i}, x_r3d)
		=   x_r3d
    o_aW8
	(PrelBase.False{-58,p-}{i}, y_r3f)
		=   y_r3f +_aWy lit_aWw
{- nonrec -}
ghc: module version changed to 1; reason: no old .hi file
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_usages_
PrelBase 1 :: $d1 1 $d11 1 $d15 1 $d2 1 $d21 1 $d27 1 $d3 1 $d32 1 $d33 1 $d37 1 $d38 1 $d39 1 $d41 1 $d42 1 $d44 1 $d46 1 $d54 1 $d7 1 $d8 1 Eq 1 Eval 1 Num 1 Show 1 String 1;
PrelNum 1 :: $d10 1 $d16 1 $d18 1 $d29 1 $d33 1 $d35 1;
PrelTup 1 :: $d13 1 $d4 1 $d9 1;
_exports_
ShouldSucceed o;
_declarations_
1 o _:_ _forall_ [a] {PrelBase.Num a} => (PrelBase.Bool, a) -> a ;;
