

--================================================================================
Typechecked:
{- nonrec -}
deq{-r3x,x-} =
    _/\_ a{-r3w-} -> \ tpl_B1 ->
	tpl_B1
{- nonrec -}
AbsBinds
[a{-aog-}]
[d.Eq'_ao9]
[([a{-aog-}], $mdeq{-rnR,x-}, deq_aob)]
    AbsBinds [] [] [([], deq_aob, deq_aod)]
	deq_aod
	    =   GHCerr.noDefaultMethodError{-8k,p-}
		    (a{-aog-}
		     -> a{-aog-}
		     -> PrelBase.Bool{-34,p-}) "Class Eq' Method deq"
{- rec -}
AbsBinds
[a{-anC-}]
[d.Eq'_ao2]
[([a{-anC-}], $d1{-roh,x-}, d.Eq'_anw)]
    d.Eq'_ao5 =
	d.Eq'_ao2
    deq_aok =
	deq{-r3x,x-}
	    a{-anC-}
	    d.Eq'_ao5
    deq_aoj =
	deq_aoi
    AbsBinds [] [] [([], deq_aoi, deq_anz)]
	deq_anz
	    PrelBase.[]{-5i,p-}{i} PrelBase.[]{-5i,p-}{i}
		    =   PrelBase.True{-5E,p-}{i}
	deq_anz
	    (x_r3l PrelBase.:{-55,p-}{i} xs_r3m)
	    (y_r3o PrelBase.:{-55,p-}{i} ys_r3p)
		    =   if x_r3l deq_aok y_r3o then
			    deq_aoj xs_r3m ys_r3p
			else
			    PrelBase.False{-58,p-}{i}
	deq_anz
	    other1_r3r other2_r3t
		    =   PrelBase.False{-58,p-}{i}
    d.Eq'_anw =
	({-dict-} [] [deq_aoi])
{- nonrec -}
ghc:junk old iface line?:section::interface ShouldSucceed where {
ghc:junk old iface line?:section::class Eq' a where {
ghc:junk old iface line?:section::    deq :: a -> a -> Bool
ghc:junk old iface line?:section::    };
ghc:junk old iface line?:section::instance (Eq' a) => Eq' [a] {-# FROMMODULE ShouldSucceed #-}
ghc:junk old iface line?:section::}
ghc: module version changed to 1; reason: exports changed
_interface_ ShouldSucceed 1
_instance_modules_
ArrBase IO PrelNum
_exports_
ShouldSucceed Eq'(deq);
_instances_
instance _forall_ [a] {Eq' a} => {Eq' [a]} = $d1;
_declarations_
1 $d1 _:_ _forall_ [a] {Eq' a} => {Eq' [a]} ;;
1 $mdeq _:_ _forall_ [a] {Eq' a} => a -> a -> PrelBase.Bool ;;
1 class Eq' r3w where {deq :: r3w -> r3w -> PrelBase.Bool} ;
