{-# GHC_PRAGMA INTERFACE VERSION 5 #-}
interface IdEnv where
import Id(Id)
import Maybes(Labda(..))
import UniqFM(UniqFM)
import Unique(Unique)
data Id 
type IdEnv a = UniqFM a
data Labda a   = Hamna | Ni a
data UniqFM a 
data Unique 
addOneToIdEnv :: UniqFM a -> Id -> a -> UniqFM a
combineIdEnvs :: (a -> a -> a) -> UniqFM a -> UniqFM a -> UniqFM a
delManyFromIdEnv :: UniqFM a -> [Id] -> UniqFM a
delOneFromIdEnv :: UniqFM a -> Id -> UniqFM a
growIdEnv :: UniqFM a -> UniqFM a -> UniqFM a
growIdEnvList :: UniqFM a -> [(Id, a)] -> UniqFM a
isNullIdEnv :: UniqFM a -> Bool
lookupIdEnv :: UniqFM a -> Id -> Labda a
lookupNoFailIdEnv :: UniqFM a -> Id -> a
mapIdEnv :: (a -> b) -> UniqFM a -> UniqFM b
mkIdEnv :: [(Id, a)] -> UniqFM a
modifyIdEnv :: UniqFM a -> (a -> a) -> Id -> UniqFM a
nullIdEnv :: UniqFM a
rngIdEnv :: UniqFM a -> [a]
unitIdEnv :: Id -> a -> UniqFM a

