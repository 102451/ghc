# RPM spec file for GHC					         -*-rpm-spec-*-
#
# Copyright [1998..2004] The GHC Team
#
# Thanks to Zoltan Vorosbaranyi <vbzoli@vbzo.li> for suggestions in 
# earlier versions and Pixel <pixel@mandrakesoft.com> for coding tips.
#
# This file is subject to the same free software license as GHC.

%define name    ghc
%define version @version@
%define release @release@

Name:           %{name}
Version:        %{version}
Release:        %{release}
License:        BSD-like
Group:          Development/Languages/Haskell
URL:            http://haskell.org/ghc/
Source:         http://haskell.org/ghc/dist/%{version}/ghc-%{version}-src.tar.bz2
Packager:       Sven Panne <sven.panne@aedion.de>
BuildRoot:      %{_tmppath}/%{name}-%{version}-build
Prefix:         %{_prefix}
Requires:       gmp, readline
BuildRequires:  alex >= 2.0, happy >= 1.14, ghc >= 5, haddock, docbk31, jade, jadetex, dvips, gmp, readline-devel
Provides:       haskell
Summary:        The Glasgow Haskell Compiler

%description
Haskell is the standard lazy purely functional programming language.
The current language version is Haskell 98, agreed in December 1998,
with a revised version published in January 2003.

GHC is a state-of-the-art programming suite for Haskell. Included is
an optimising compiler generating good code for a variety of
platforms, together with an interactive system for convenient, quick
development. The distribution includes space and time profiling
facilities, a large collection of libraries, and support for various
language extensions, including concurrency, exceptions, and foreign
language interfaces (C, C++, whatever).

A wide variety of Haskell related resources (tutorials, libraries,
specifications, documentation, compilers, interpreters, references,
contact information, links to research groups) are available from the
Haskell home page at http://haskell.org/.

Authors:
--------
    Krasimir Angelov <ka2_mail@yahoo.com>
    Manuel Chakravarty <chak@cse.unsw.edu.au>
    Koen Claessen <koen@cs.chalmers.se>
    Robert Ennals <Robert.Ennals@cl.cam.ac.uk>
    Sigbjorn Finne <sof@galconn.com>
    Gabrielle Keller <keller@cvs.haskell.org>
    Marcin Kowalczyk <qrczak@knm.org.pl>
    Jeff Lewis <jeff@galconn.com>
    Ian Lynagh <igloo@earth.li>
    Simon Marlow <simonmar@microsoft.com>
    Sven Panne <sven.panne@aedion.de>
    Ross Paterson <ross@soi.city.ac.uk>
    Simon Peyton Jones <simonpj@microsoft.com>
    Don Stewart <dons@cse.unsw.edu.au>
    Volker Stolz <stolz@i2.informatik.rwth-aachen.de>
    Wolfgang Thaller <wolfgang.thaller@gmx.net>
    Andrew Tolmach <apt@cs.pdx.edu>
    Keith Wansbrough <Keith.Wansbrough@cl.cam.ac.uk>
    Michael Weber <michael.weber@post.rwth-aachen.de>
    plus a dozen helping hands...

%package prof
Requires:       ghc = %{version}-%{release}
Summary:        Profiling libraries for GHC
Group:          Development/Libraries

%description prof
Profiling libraries for Glorious Glasgow Haskell Compilation System
(GHC).  They should be installed when GHC's profiling subsystem is
needed.

%package doc
Summary:        Documentation for GHC
Group:          Documentation

%description doc
Preformatted documentation for the Glorious Glasgow Haskell
Compilation System (GHC) and its libraries. It should be installed if
you like to have local access to the documentation in PostScript and
HTML format. Alternatively, the documentation is available online at

  http://haskell.org/ghc/documentation.html

%prep
%setup

%build
test -f configure || autoreconf
./configure --prefix=%{prefix}
make
make ps html
 
%install
make prefix=${RPM_BUILD_ROOT}%{prefix} install
make datadir=`pwd` install-docs

# generate the file list for lib/ _excluding_ all files needed for profiling
# only
#
# * generating file lists in a BUILD_ROOT spec is a bit tricky: the file list
#   has to contain complete paths, _but_ without the BUILD_ROOT, we also do
#   _not_ want have directory names in the list; furthermore, we have to make
#   sure that any leading / is removed from %{prefix}/lib, as find has to 
#   interpret the argument as a relative path; however, we have to include the
#   leading / again in the final file list (otherwise, rpm complains)
# * isn't there an easier way to do all this?
#
dir=`pwd`
cd ${RPM_BUILD_ROOT}
libdir=`echo %{prefix}/lib | sed 's|^/||'`
find $libdir ! -type d !  -name '*.p_hi' !   -name '*_p.a'    -print | sed 's|^|/|' > $dir/rpm-noprof-lib-files
find $libdir ! -type d \( -name '*.p_hi' -or -name '*_p.a' \) -print | sed 's|^|/|' > $dir/rpm-prof-lib-files
cd $dir

%clean
rm -rf ${RPM_BUILD_ROOT}

%files -f rpm-noprof-lib-files
%defattr(-,root,root)
%doc %{prefix}/share/doc/ghc-%{version}/ANNOUNCE
%doc %{prefix}/share/doc/ghc-%{version}/README
%{prefix}/bin/*

%files prof -f rpm-prof-lib-files
%defattr(-,root,root)

%files doc
%defattr(-,root,root)

%doc docs/building/building
%doc docs/building/building.ps

%doc docs/docbook-cheat-sheet/docbook-cheat-sheet
%doc docs/docbook-cheat-sheet/docbook-cheat-sheet.ps

%doc ghc/docs/ext-core/core.ps

%doc ghc/docs/storage-mgt/ldv.ps

%doc ghc/docs/storage-mgt/rp.ps

%doc ghc/docs/storage-mgt/sm.ps

%doc ghc/docs/users_guide/users_guide
%doc ghc/docs/users_guide/users_guide.ps

%doc hslibs/doc/hslibs
%doc hslibs/doc/hslibs.ps

%doc ghc/ANNOUNCE
%doc ghc/LICENSE
%doc ghc/README

%doc html/*
