[
 SMalloc seems a BAD choice of name.  I expected this to be the routines I
 could use to allocate memory, not those used by the storage manager internally.

 KH
]

Routines that deal with memory allocation:

All dynamic allocation must be done before the stacks and heap are
allocated. This allows us to use the lower level sbrk routines if
required.

\begin{code}
#define NULL_REG_MAP
#include "SMinternal.h"

/* Return a ptr to n StgWords (note: WORDS not BYTES!) or die miserably */
/* ToDo: Should allow use of valloc to allign on page boundary */

char *
#ifdef __STDC__
xmalloc(size_t n)
#else
xmalloc(n)
    size_t n;
#endif
{
    char *space;

    if ((space = (char *) malloc(n)) == NULL) {
	MallocFailHook((W_) n); /*msg*/
	EXIT(EXIT_FAILURE);
    }
    return space;
}
\end{code}
