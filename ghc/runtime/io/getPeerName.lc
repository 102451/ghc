%
% (c) The GRASP/AQUA Project, Glasgow University, 1996
%
\subsection[getPeerName.lc]{Return name of peer process}

Returns name of peer process connected to a socket.

\begin{code}

#include "rtsdefs.h"
#include "stgio.h"

#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif

#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif

StgInt
getPeerName(int sockfd, struct sockaddr *peer, int *namelen)
{
    StgInt name;
    
    while ((name = getpeername(sockfd, peer, namelen)) < 0) {
      if (errno != EINTR) {
	  cvtErrno();
	  switch (ghc_errno) {
	  default:
	      stdErrno();
	      break;
	  case GHC_EBADF:
       	      ghc_errtype = ERR_INVALIDARGUMENT;
              ghc_errstr  = "Not a valid write descriptor";
	      break;
	  case GHC_EFAULT:
       	      ghc_errtype = ERR_INVALIDARGUMENT;
              ghc_errstr  = "Data not in writeable part of user address space";
	      break;
	  case GHC_ENOBUFS:
	      ghc_errtype = ERR_RESOURCEEXHAUSTED;
	      ghc_errstr  = "Insuffcient resources";
	      break;
	  case GHC_ENOTCONN:
	      ghc_errtype = ERR_INVALIDARGUMENT;
	      ghc_errstr  = "Socket not connected";
	      break;
	  case GHC_ENOTSOCK:
	      ghc_errtype = ERR_INVALIDARGUMENT;
	      ghc_errstr  = "Descriptor is not a socket";
	      break;
	  }
	  return -1;
      }
    }
    return name;
}

\end{code}
